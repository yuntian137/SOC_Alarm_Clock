; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\output\uart_communication_dma.o --asm_dir=..\List\ --list_dir=..\List\ --depend=..\output\uart_communication_dma.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -I..\Buzz\Inc -I..\Drivers\TKDriver\C -I..\Mqtt\Inc -ID:\keil\ARM\PACK\Keil\SC32F1xxx_DFP\1.0.6\Device\SC32F10xx\FWLib\SC32_Lib\inc -D__MICROLIB -D__UVISION_VERSION=534 -DSC32F10xx -DSC32f10xx --omf_browse=..\output\uart_communication_dma.crf ..\Apps\UART_Communication_DMA.C]
                          THUMB
                          AREA ||i.UART_Communication_DMA||, CODE, READONLY, ALIGN=2
                  UART_Communication_DMA PROC
;;;5      
;;;6      void UART_Communication_DMA(void)
000000  e01a              B        |L1.56|
                  |L1.2|
;;;7      {
;;;8        while(1)
;;;9        {
;;;10         if(UART_RxFlag == SET)
000002  480e              LDR      r0,|L1.60|
000004  7800              LDRB     r0,[r0,#0]  ; UART_RxFlag
000006  2801              CMP      r0,#1
000008  d116              BNE      |L1.56|
;;;11         {
;;;12           UART_RxFlag = RESET;
00000a  2000              MOVS     r0,#0
00000c  490b              LDR      r1,|L1.60|
00000e  7008              STRB     r0,[r1,#0]
;;;13           
;;;14           DMA_SetCurrDataCounter(DMA0, 200);
000010  21c8              MOVS     r1,#0xc8
000012  480b              LDR      r0,|L1.64|
000014  f7fffffe          BL       DMA_SetCurrDataCounter
;;;15           UART_DMACmd(UART1, UART_DMAReq_TX, ENABLE);
000018  2201              MOVS     r2,#1
00001a  2180              MOVS     r1,#0x80
00001c  4809              LDR      r0,|L1.68|
00001e  f7fffffe          BL       UART_DMACmd
;;;16           
;;;17           DMA_SoftwareTrigger(DMA0);
000022  4807              LDR      r0,|L1.64|
000024  f7fffffe          BL       DMA_SoftwareTrigger
;;;18           while(UART_TxFlag == RESET);
000028  bf00              NOP      
                  |L1.42|
00002a  4807              LDR      r0,|L1.72|
00002c  7800              LDRB     r0,[r0,#0]  ; UART_TxFlag
00002e  2800              CMP      r0,#0
000030  d0fb              BEQ      |L1.42|
;;;19           UART_TxFlag = RESET;
000032  2000              MOVS     r0,#0
000034  4904              LDR      r1,|L1.72|
000036  7008              STRB     r0,[r1,#0]
                  |L1.56|
000038  e7e3              B        |L1.2|
;;;20         }
;;;21       }
;;;22     }
;;;23     
                          ENDP
00003a  0000              DCW      0x0000
                  |L1.60|
                          DCD      UART_RxFlag
                  |L1.64|
                          DCD      0x40010800
                  |L1.68|
                          DCD      0x40020080
                  |L1.72|
                          DCD      UART_TxFlag
                          AREA ||i.UART_Communication_DMA_DAM0Handler||, CODE, READONLY, ALIGN=2
                  UART_Communication_DMA_DAM0Handler PROC
;;;24     
;;;25     void UART_Communication_DMA_DAM0Handler(void)
000000  b510              PUSH     {r4,lr}
;;;26     {
;;;27       if(DMA_GetFlagStatus(DMA0, DMA_FLAG_TCIF))
000002  2102              MOVS     r1,#2
000004  4806              LDR      r0,|L2.32|
000006  f7fffffe          BL       DMA_GetFlagStatus
00000a  2800              CMP      r0,#0
00000c  d006              BEQ      |L2.28|
;;;28       {
;;;29         DMA_ClearFlag(DMA0, DMA_FLAG_TCIF);
00000e  2102              MOVS     r1,#2
000010  4803              LDR      r0,|L2.32|
000012  f7fffffe          BL       DMA_ClearFlag
;;;30         UART_TxFlag = SET;
000016  2001              MOVS     r0,#1
000018  4902              LDR      r1,|L2.36|
00001a  7008              STRB     r0,[r1,#0]
                  |L2.28|
;;;31       }
;;;32     }
00001c  bd10              POP      {r4,pc}
;;;33     
                          ENDP
00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      0x40010800
                  |L2.36|
                          DCD      UART_TxFlag
                          AREA ||i.UART_Communication_DMA_DAM1Handler||, CODE, READONLY, ALIGN=2
                  UART_Communication_DMA_DAM1Handler PROC
;;;34     
;;;35     void UART_Communication_DMA_DAM1Handler(void)
000000  b510              PUSH     {r4,lr}
;;;36     {
;;;37       if(DMA_GetFlagStatus(DMA1, DMA_FLAG_TCIF))
000002  2102              MOVS     r1,#2
000004  4806              LDR      r0,|L3.32|
000006  f7fffffe          BL       DMA_GetFlagStatus
00000a  2800              CMP      r0,#0
00000c  d006              BEQ      |L3.28|
;;;38       {
;;;39         DMA_ClearFlag(DMA1, DMA_FLAG_TCIF);
00000e  2102              MOVS     r1,#2
000010  4803              LDR      r0,|L3.32|
000012  f7fffffe          BL       DMA_ClearFlag
;;;40         UART_RxFlag = SET;
000016  2001              MOVS     r0,#1
000018  4902              LDR      r1,|L3.36|
00001a  7008              STRB     r0,[r1,#0]
                  |L3.28|
;;;41       }
;;;42     }
00001c  bd10              POP      {r4,pc}
;;;43     
                          ENDP
00001e  0000              DCW      0x0000
                  |L3.32|
                          DCD      0x40010840
                  |L3.36|
                          DCD      UART_RxFlag
                          AREA ||.bss||, DATA, NOINIT, ALIGN=0
                  UART_Communication_DMA_Data
                          %        200
                          AREA ||.data||, DATA, ALIGN=0
                  UART_RxFlag
000000  00                DCB      0x00
                  UART_TxFlag
000001  00                DCB      0x00
;*** Start embedded assembler ***
#line 1 "..\\Apps\\UART_Communication_DMA.C"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___24_UART_Communication_DMA_C_684db807____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___24_UART_Communication_DMA_C_684db807____REV16| PROC
#line 464
 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___24_UART_Communication_DMA_C_684db807____REVSH|
#line 478
|__asm___24_UART_Communication_DMA_C_684db807____REVSH| PROC
#line 479
 revsh r0, r0
 bx lr
	ENDP
;*** End   embedded assembler ***
