; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\output\sc_init.o --asm_dir=..\List\ --list_dir=..\List\ --depend=..\output\sc_init.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -I..\Buzz\Inc -I..\Drivers\TKDriver\C -ID:\keil\ARM\PACK\Keil\SC32F1xxx_DFP\1.0.6\Device\SC32F10xx\FWLib\SC32_Lib\inc -D__MICROLIB -D__UVISION_VERSION=534 -DSC32F10xx -DSC32f10xx --omf_browse=..\output\sc_init.crf ..\User\SC_Init.c]
                          THUMB
                          AREA ||i.SC_ACMP0_Init||, CODE, READONLY, ALIGN=1
                  SC_ACMP0_Init PROC
;;;920      */
;;;921    void SC_ACMP0_Init(void)
000000  4770              BX       lr
;;;922    {
;;;923      
;;;924        
;;;925      	
;;;926    }
;;;927    
                          ENDP
                          AREA ||i.SC_ACMP1_Init||, CODE, READONLY, ALIGN=1
                  SC_ACMP1_Init PROC
;;;932      */
;;;933    void SC_ACMP1_Init(void)
000000  4770              BX       lr
;;;934    {
;;;935      
;;;936        
;;;937      	
;;;938    }
;;;939    
                          ENDP
                          AREA ||i.SC_ACMP2_Init||, CODE, READONLY, ALIGN=1
                  SC_ACMP2_Init PROC
;;;944      */
;;;945    void SC_ACMP2_Init(void)
000000  4770              BX       lr
;;;946    {
;;;947      
;;;948        
;;;949      	
;;;950    }
;;;951    
                          ENDP
                          AREA ||i.SC_ACMP3_Init||, CODE, READONLY, ALIGN=1
                  SC_ACMP3_Init PROC
;;;956      */
;;;957    void SC_ACMP3_Init(void)
000000  4770              BX       lr
;;;958    {
;;;959      
;;;960        
;;;961      	
;;;962    }
;;;963    
                          ENDP
                          AREA ||i.SC_ACMP_Init||, CODE, READONLY, ALIGN=1
                  SC_ACMP_Init PROC
;;;906      */
;;;907    void SC_ACMP_Init(void)
000000  4770              BX       lr
;;;908    {
;;;909      
;;;910        
;;;911      		
;;;912    }
;;;913    
                          ENDP
                          AREA ||i.SC_ADC_Init||, CODE, READONLY, ALIGN=2
                  SC_ADC_Init PROC
;;;485      */
;;;486    void SC_ADC_Init(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;487    {
;;;488      
;;;489        
;;;490    	ADC_InitTypeDef ADC_Base_InitStruct;
;;;491    	ADC_Base_InitStruct.ADC_ConvMode = ADC_ConvMode_Single;
000002  2000              MOVS     r0,#0
000004  4669              MOV      r1,sp
000006  8188              STRH     r0,[r1,#0xc]
;;;492    	ADC_Base_InitStruct.ADC_Prescaler = ADC_Prescaler_16CLOCK;
000008  2003              MOVS     r0,#3
00000a  0440              LSLS     r0,r0,#17
00000c  9000              STR      r0,[sp,#0]
;;;493    	ADC_Base_InitStruct.ADC_EAIN = ADC_EAIN_Less|ADC_EAIN_13;
00000e  2001              MOVS     r0,#1
000010  0340              LSLS     r0,r0,#13
000012  9001              STR      r0,[sp,#4]
;;;494    	ADC_Base_InitStruct.ADC_VREF = ADC_VREF_VDD;
000014  2000              MOVS     r0,#0
000016  9002              STR      r0,[sp,#8]
;;;495    	ADC_Init(ADC, &ADC_Base_InitStruct);
000018  480e              LDR      r0,|L6.84|
00001a  f7fffffe          BL       ADC_Init
;;;496    	ADC_SetChannel(ADC,ADC_Channel_VDD_D4);
00001e  211f              MOVS     r1,#0x1f
000020  480c              LDR      r0,|L6.84|
000022  f7fffffe          BL       ADC_SetChannel
;;;497    	ADC_ITConfig(ADC,ADC_IT_ADCIF, DISABLE);
000026  2200              MOVS     r2,#0
000028  21ff              MOVS     r1,#0xff
00002a  3101              ADDS     r1,#1
00002c  4809              LDR      r0,|L6.84|
00002e  f7fffffe          BL       ADC_ITConfig
;;;498    	ADC_DMACmd(ADC,DISABLE);
000032  2100              MOVS     r1,#0
000034  4807              LDR      r0,|L6.84|
000036  f7fffffe          BL       ADC_DMACmd
;;;499    	NVIC_SetPriority(ADC_IRQn,3);
00003a  2103              MOVS     r1,#3
00003c  201d              MOVS     r0,#0x1d
00003e  f7fffffe          BL       __NVIC_SetPriority
;;;500    	NVIC_EnableIRQ(ADC_IRQn);
000042  201d              MOVS     r0,#0x1d
000044  f7fffffe          BL       __NVIC_EnableIRQ
;;;501    	ADC_Cmd(ADC,ENABLE);
000048  2101              MOVS     r1,#1
00004a  4802              LDR      r0,|L6.84|
00004c  f7fffffe          BL       ADC_Cmd
;;;502      
;;;503    }
000050  bd1f              POP      {r0-r4,pc}
;;;504    
                          ENDP
000052  0000              DCW      0x0000
                  |L6.84|
                          DCD      0x40022110
                          AREA ||i.SC_BTM_Init||, CODE, READONLY, ALIGN=1
                  SC_BTM_Init PROC
;;;766      */
;;;767    void SC_BTM_Init(void)
000000  4770              BX       lr
;;;768    {
;;;769      
;;;770        
;;;771      
;;;772    }
;;;773    
                          ENDP
                          AREA ||i.SC_CAN_Init||, CODE, READONLY, ALIGN=1
                  SC_CAN_Init PROC
;;;654      */
;;;655    void SC_CAN_Init(void)
000000  4770              BX       lr
;;;656    {
;;;657      
;;;658        
;;;659      
;;;660    }
;;;661    
                          ENDP
                          AREA ||i.SC_CRC_Init||, CODE, READONLY, ALIGN=1
                  SC_CRC_Init PROC
;;;778      */
;;;779    void SC_CRC_Init(void)
000000  4770              BX       lr
;;;780    {
;;;781      
;;;782        
;;;783      
;;;784    }
;;;785    
                          ENDP
                          AREA ||i.SC_DAC_Init||, CODE, READONLY, ALIGN=1
                  SC_DAC_Init PROC
;;;523      */
;;;524    void SC_DAC_Init(void)
000000  4770              BX       lr
;;;525    {
;;;526      
;;;527        
;;;528      
;;;529    }
;;;530    
                          ENDP
                          AREA ||i.SC_DMA0_Init||, CODE, READONLY, ALIGN=1
                  SC_DMA0_Init PROC
;;;790      */
;;;791    void SC_DMA0_Init(void)
000000  4770              BX       lr
;;;792    {
;;;793      
;;;794        
;;;795      
;;;796    }
;;;797    
                          ENDP
                          AREA ||i.SC_DMA1_Init||, CODE, READONLY, ALIGN=1
                  SC_DMA1_Init PROC
;;;802      */
;;;803    void SC_DMA1_Init(void)
000000  4770              BX       lr
;;;804    {
;;;805      
;;;806        
;;;807      
;;;808    }
;;;809    
                          ENDP
                          AREA ||i.SC_DMA2_Init||, CODE, READONLY, ALIGN=1
                  SC_DMA2_Init PROC
;;;815      */
;;;816    void SC_DMA2_Init(void)
000000  4770              BX       lr
;;;817    {
;;;818      
;;;819        
;;;820      
;;;821    }
;;;822    
                          ENDP
                          AREA ||i.SC_DMA3_Init||, CODE, READONLY, ALIGN=1
                  SC_DMA3_Init PROC
;;;827      */
;;;828    void SC_DMA3_Init(void)
000000  4770              BX       lr
;;;829    {
;;;830      
;;;831        
;;;832      
;;;833    }
;;;834    
                          ENDP
                          AREA ||i.SC_EPWM_Init||, CODE, READONLY, ALIGN=1
                  SC_EPWM_Init PROC
;;;560      */
;;;561    void SC_EPWM_Init(void)
000000  4770              BX       lr
;;;562    {
;;;563      
;;;564        
;;;565      
;;;566    }
;;;567    
                          ENDP
                          AREA ||i.SC_GPIO_Init||, CODE, READONLY, ALIGN=2
                  SC_GPIO_Init PROC
;;;120      */
;;;121    void SC_GPIO_Init(void)
000000  b500              PUSH     {lr}
;;;122    {
000002  b099              SUB      sp,sp,#0x64
;;;123      
;;;124        
;;;125    	GPIO_InitTypeDef GPIOInit_PC04_Struct;
;;;126    	GPIOInit_PC04_Struct.GPIO_Pin = GPIO_Pin_4;
000004  2110              MOVS     r1,#0x10
000006  a810              ADD      r0,sp,#0x40
000008  8381              STRH     r1,[r0,#0x1c]
;;;127    	GPIOInit_PC04_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
00000a  2102              MOVS     r1,#2
00000c  83c1              STRH     r1,[r0,#0x1e]
;;;128    	GPIOInit_PC04_Struct.GPIO_DriveLevel = 0;
00000e  2100              MOVS     r1,#0
000010  8401              STRH     r1,[r0,#0x20]
;;;129    	GPIO_Init(GPIOC,&GPIOInit_PC04_Struct);
000012  a917              ADD      r1,sp,#0x5c
000014  4840              LDR      r0,|L16.280|
000016  f7fffffe          BL       GPIO_Init
;;;130    	GPIO_InitTypeDef GPIOInit_PC05_Struct;
;;;131    	GPIOInit_PC05_Struct.GPIO_Pin = GPIO_Pin_5;
00001a  2120              MOVS     r1,#0x20
00001c  a810              ADD      r0,sp,#0x40
00001e  8281              STRH     r1,[r0,#0x14]
;;;132    	GPIOInit_PC05_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
000020  2102              MOVS     r1,#2
000022  82c1              STRH     r1,[r0,#0x16]
;;;133    	GPIOInit_PC05_Struct.GPIO_DriveLevel = 0;
000024  2100              MOVS     r1,#0
000026  8301              STRH     r1,[r0,#0x18]
;;;134    	GPIO_Init(GPIOC,&GPIOInit_PC05_Struct);
000028  a915              ADD      r1,sp,#0x54
00002a  483b              LDR      r0,|L16.280|
00002c  f7fffffe          BL       GPIO_Init
;;;135    	GPIO_InitTypeDef GPIOInit_PC10_Struct;
;;;136    	GPIOInit_PC10_Struct.GPIO_Pin = GPIO_Pin_10;
000030  2101              MOVS     r1,#1
000032  0289              LSLS     r1,r1,#10
000034  a810              ADD      r0,sp,#0x40
000036  8181              STRH     r1,[r0,#0xc]
;;;137    	GPIOInit_PC10_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
000038  2102              MOVS     r1,#2
00003a  81c1              STRH     r1,[r0,#0xe]
;;;138    	GPIOInit_PC10_Struct.GPIO_DriveLevel = 0;
00003c  2100              MOVS     r1,#0
00003e  8201              STRH     r1,[r0,#0x10]
;;;139    	GPIO_Init(GPIOC,&GPIOInit_PC10_Struct);
000040  a913              ADD      r1,sp,#0x4c
000042  4835              LDR      r0,|L16.280|
000044  f7fffffe          BL       GPIO_Init
;;;140    	GPIO_InitTypeDef GPIOInit_PC11_Struct;
;;;141    	GPIOInit_PC11_Struct.GPIO_Pin = GPIO_Pin_11;
000048  2101              MOVS     r1,#1
00004a  02c9              LSLS     r1,r1,#11
00004c  a810              ADD      r0,sp,#0x40
00004e  8081              STRH     r1,[r0,#4]
;;;142    	GPIOInit_PC11_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
000050  2102              MOVS     r1,#2
000052  80c1              STRH     r1,[r0,#6]
;;;143    	GPIOInit_PC11_Struct.GPIO_DriveLevel = 0;
000054  2100              MOVS     r1,#0
000056  8101              STRH     r1,[r0,#8]
;;;144    	GPIO_Init(GPIOC,&GPIOInit_PC11_Struct);
000058  a911              ADD      r1,sp,#0x44
00005a  482f              LDR      r0,|L16.280|
00005c  f7fffffe          BL       GPIO_Init
;;;145    	GPIO_InitTypeDef GPIOInit_PA07_Struct;
;;;146    	GPIOInit_PA07_Struct.GPIO_Pin = GPIO_Pin_7;
000060  2180              MOVS     r1,#0x80
000062  4668              MOV      r0,sp
000064  8781              STRH     r1,[r0,#0x3c]
;;;147    	GPIOInit_PA07_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
000066  2102              MOVS     r1,#2
000068  87c1              STRH     r1,[r0,#0x3e]
;;;148    	GPIOInit_PA07_Struct.GPIO_DriveLevel = 0;
00006a  2100              MOVS     r1,#0
00006c  a810              ADD      r0,sp,#0x40
00006e  8001              STRH     r1,[r0,#0]
;;;149    	GPIO_Init(GPIOA,&GPIOInit_PA07_Struct);
000070  a90f              ADD      r1,sp,#0x3c
000072  482a              LDR      r0,|L16.284|
000074  f7fffffe          BL       GPIO_Init
;;;150    	GPIO_InitTypeDef GPIOInit_PA08_Struct;
;;;151    	GPIOInit_PA08_Struct.GPIO_Pin = GPIO_Pin_8;
000078  21ff              MOVS     r1,#0xff
00007a  3101              ADDS     r1,#1
00007c  4668              MOV      r0,sp
00007e  8681              STRH     r1,[r0,#0x34]
;;;152    	GPIOInit_PA08_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
000080  2102              MOVS     r1,#2
000082  86c1              STRH     r1,[r0,#0x36]
;;;153    	GPIOInit_PA08_Struct.GPIO_DriveLevel = 0;
000084  2100              MOVS     r1,#0
000086  8701              STRH     r1,[r0,#0x38]
;;;154    	GPIO_Init(GPIOA,&GPIOInit_PA08_Struct);
000088  a90d              ADD      r1,sp,#0x34
00008a  4824              LDR      r0,|L16.284|
00008c  f7fffffe          BL       GPIO_Init
;;;155    	GPIO_InitTypeDef GPIOInit_PB01_Struct;
;;;156    	GPIOInit_PB01_Struct.GPIO_Pin = GPIO_Pin_1;
000090  2102              MOVS     r1,#2
000092  4668              MOV      r0,sp
000094  8581              STRH     r1,[r0,#0x2c]
;;;157    	GPIOInit_PB01_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
000096  85c1              STRH     r1,[r0,#0x2e]
;;;158    	GPIOInit_PB01_Struct.GPIO_DriveLevel = 0;
000098  2100              MOVS     r1,#0
00009a  8601              STRH     r1,[r0,#0x30]
;;;159    	GPIO_Init(GPIOB,&GPIOInit_PB01_Struct);
00009c  a90b              ADD      r1,sp,#0x2c
00009e  4820              LDR      r0,|L16.288|
0000a0  f7fffffe          BL       GPIO_Init
;;;160    	GPIO_InitTypeDef GPIOInit_PB02_Struct;
;;;161    	GPIOInit_PB02_Struct.GPIO_Pin = GPIO_Pin_2;
0000a4  2104              MOVS     r1,#4
0000a6  4668              MOV      r0,sp
0000a8  8481              STRH     r1,[r0,#0x24]
;;;162    	GPIOInit_PB02_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
0000aa  2102              MOVS     r1,#2
0000ac  84c1              STRH     r1,[r0,#0x26]
;;;163    	GPIOInit_PB02_Struct.GPIO_DriveLevel = 0;
0000ae  2100              MOVS     r1,#0
0000b0  8501              STRH     r1,[r0,#0x28]
;;;164    	GPIO_Init(GPIOB,&GPIOInit_PB02_Struct);
0000b2  a909              ADD      r1,sp,#0x24
0000b4  481a              LDR      r0,|L16.288|
0000b6  f7fffffe          BL       GPIO_Init
;;;165    	GPIO_InitTypeDef GPIOInit_PB03_Struct;
;;;166    	GPIOInit_PB03_Struct.GPIO_Pin = GPIO_Pin_3;
0000ba  2108              MOVS     r1,#8
0000bc  4668              MOV      r0,sp
0000be  8381              STRH     r1,[r0,#0x1c]
;;;167    	GPIOInit_PB03_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
0000c0  2102              MOVS     r1,#2
0000c2  83c1              STRH     r1,[r0,#0x1e]
;;;168    	GPIOInit_PB03_Struct.GPIO_DriveLevel = 0;
0000c4  2100              MOVS     r1,#0
0000c6  8401              STRH     r1,[r0,#0x20]
;;;169    	GPIO_Init(GPIOB,&GPIOInit_PB03_Struct);
0000c8  a907              ADD      r1,sp,#0x1c
0000ca  4815              LDR      r0,|L16.288|
0000cc  f7fffffe          BL       GPIO_Init
;;;170    	GPIO_InitTypeDef GPIOInit_PB04_Struct;
;;;171    	GPIOInit_PB04_Struct.GPIO_Pin = GPIO_Pin_4;
0000d0  2110              MOVS     r1,#0x10
0000d2  4668              MOV      r0,sp
0000d4  8281              STRH     r1,[r0,#0x14]
;;;172    	GPIOInit_PB04_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
0000d6  2102              MOVS     r1,#2
0000d8  82c1              STRH     r1,[r0,#0x16]
;;;173    	GPIOInit_PB04_Struct.GPIO_DriveLevel = 0;
0000da  2100              MOVS     r1,#0
0000dc  8301              STRH     r1,[r0,#0x18]
;;;174    	GPIO_Init(GPIOB,&GPIOInit_PB04_Struct);
0000de  a905              ADD      r1,sp,#0x14
0000e0  480f              LDR      r0,|L16.288|
0000e2  f7fffffe          BL       GPIO_Init
;;;175    	GPIO_InitTypeDef GPIOInit_PB05_Struct;
;;;176    	GPIOInit_PB05_Struct.GPIO_Pin = GPIO_Pin_5;
0000e6  2120              MOVS     r1,#0x20
0000e8  4668              MOV      r0,sp
0000ea  8181              STRH     r1,[r0,#0xc]
;;;177    	GPIOInit_PB05_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
0000ec  2102              MOVS     r1,#2
0000ee  81c1              STRH     r1,[r0,#0xe]
;;;178    	GPIOInit_PB05_Struct.GPIO_DriveLevel = 0;
0000f0  2100              MOVS     r1,#0
0000f2  8201              STRH     r1,[r0,#0x10]
;;;179    	GPIO_Init(GPIOB,&GPIOInit_PB05_Struct);
0000f4  a903              ADD      r1,sp,#0xc
0000f6  480a              LDR      r0,|L16.288|
0000f8  f7fffffe          BL       GPIO_Init
;;;180    	GPIO_InitTypeDef GPIOInit_PB06_Struct;
;;;181    	GPIOInit_PB06_Struct.GPIO_Pin = GPIO_Pin_6;
0000fc  2140              MOVS     r1,#0x40
0000fe  4668              MOV      r0,sp
000100  8081              STRH     r1,[r0,#4]
;;;182    	GPIOInit_PB06_Struct.GPIO_Mode = GPIO_Mode_OUT_PP;
000102  2102              MOVS     r1,#2
000104  80c1              STRH     r1,[r0,#6]
;;;183    	GPIOInit_PB06_Struct.GPIO_DriveLevel = 0;
000106  2100              MOVS     r1,#0
000108  8101              STRH     r1,[r0,#8]
;;;184    	GPIO_Init(GPIOB,&GPIOInit_PB06_Struct);
00010a  a901              ADD      r1,sp,#4
00010c  4804              LDR      r0,|L16.288|
00010e  f7fffffe          BL       GPIO_Init
;;;185      		
;;;186    }
000112  b019              ADD      sp,sp,#0x64
000114  bd00              POP      {pc}
;;;187    
                          ENDP
000116  0000              DCW      0x0000
                  |L16.280|
                          DCD      0x40011200
                  |L16.284|
                          DCD      0x40011000
                  |L16.288|
                          DCD      0x40011100
                          AREA ||i.SC_IAP_Init||, CODE, READONLY, ALIGN=1
                  SC_IAP_Init PROC
;;;667      */
;;;668    void SC_IAP_Init(void)
000000  4770              BX       lr
;;;669    {
;;;670      
;;;671        
;;;672      		
;;;673    }
;;;674    
                          ENDP
                          AREA ||i.SC_INT_Init||, CODE, READONLY, ALIGN=1
                  SC_INT_Init PROC
;;;473      */
;;;474    void SC_INT_Init(void)
000000  4770              BX       lr
;;;475    {
;;;476      
;;;477        
;;;478      
;;;479    }
;;;480    
                          ENDP
                          AREA ||i.SC_Init||, CODE, READONLY, ALIGN=1
                  SC_Init PROC
;;;30       */
;;;31     void SC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;32     {
;;;33       
;;;34         
;;;35     	SC_GPIO_Init();
000002  f7fffffe          BL       SC_GPIO_Init
;;;36     	SC_OPTION_Init();
000006  f7fffffe          BL       SC_OPTION_Init
;;;37     	SC_RCC_Init();
00000a  f7fffffe          BL       SC_RCC_Init
;;;38     	SC_SYSTICK_Init();
00000e  f7fffffe          BL       SC_SYSTICK_Init
;;;39     	SC_TWI0_Init();
000012  f7fffffe          BL       SC_TWI0_Init
;;;40     	SC_TIM1_Init();
000016  f7fffffe          BL       SC_TIM1_Init
;;;41     	SC_TIM2_Init();
00001a  f7fffffe          BL       SC_TIM2_Init
;;;42     	SC_PWM0_Init();
00001e  f7fffffe          BL       SC_PWM0_Init
;;;43     	SC_ADC_Init();
000022  f7fffffe          BL       SC_ADC_Init
;;;44       
;;;45     }
000026  bd10              POP      {r4,pc}
;;;46     
                          ENDP
                          AREA ||i.SC_LCD_Init||, CODE, READONLY, ALIGN=1
                  SC_LCD_Init PROC
;;;866    
;;;867    void SC_LCD_Init(void)
000000  4770              BX       lr
;;;868    {
;;;869      
;;;870        
;;;871      	
;;;872    }
;;;873    
                          ENDP
                          AREA ||i.SC_LEDPWM_Init||, CODE, READONLY, ALIGN=1
                  SC_LEDPWM_Init PROC
;;;460      */
;;;461    void SC_LEDPWM_Init(void)
000000  4770              BX       lr
;;;462    {
;;;463      
;;;464        
;;;465      	
;;;466    }
;;;467    
                          ENDP
                          AREA ||i.SC_LED_Init||, CODE, READONLY, ALIGN=1
                  SC_LED_Init PROC
;;;878      */
;;;879    void SC_LED_Init(void)
000000  4770              BX       lr
;;;880    {
;;;881      
;;;882        
;;;883      	
;;;884    }
;;;885    
                          ENDP
                          AREA ||i.SC_MR_Init||, CODE, READONLY, ALIGN=1
                  SC_MR_Init PROC
;;;892      */
;;;893    void SC_MR_Init(void)
000000  4770              BX       lr
;;;894    {
;;;895      
;;;896        
;;;897      		
;;;898    }
;;;899    
                          ENDP
                          AREA ||i.SC_NVIC_Init||, CODE, READONLY, ALIGN=1
                  SC_NVIC_Init PROC
;;;108      */
;;;109    void SC_NVIC_Init(void)
000000  4770              BX       lr
;;;110    {
;;;111      
;;;112        
;;;113      	
;;;114    }
;;;115    
                          ENDP
                          AREA ||i.SC_OP0_Init||, CODE, READONLY, ALIGN=1
                  SC_OP0_Init PROC
;;;590      */
;;;591    void SC_OP0_Init(void)
000000  4770              BX       lr
;;;592    {
;;;593      
;;;594        
;;;595      
;;;596    }
;;;597    
;;;602    void SC_OP1_Init(void)
000000  4770              BX       lr
;;;603    {
;;;604      
;;;605        
;;;606      
;;;607    }
;;;608    
                          ENDP
                          AREA ||i.SC_OP2_Init||, CODE, READONLY, ALIGN=1
                  SC_OP2_Init PROC
;;;613      */
;;;614    void SC_OP2_Init(void)
000000  4770              BX       lr
;;;615    {
;;;616      
;;;617        
;;;618      
;;;619    }
;;;620    
                          ENDP
                          AREA ||i.SC_OPTION_Init||, CODE, READONLY, ALIGN=2
                  SC_OPTION_Init PROC
;;;92       */
;;;93     void SC_OPTION_Init(void)
000000  b510              PUSH     {r4,lr}
;;;94     {
;;;95       
;;;96         
;;;97     	SC32F10xSx_NIO_Init();
000002  480c              LDR      r0,|L28.52|
000004  6a00              LDR      r0,[r0,#0x20]
000006  2106              MOVS     r1,#6
000008  4308              ORRS     r0,r0,r1
00000a  490a              LDR      r1,|L28.52|
00000c  6208              STR      r0,[r1,#0x20]
00000e  480a              LDR      r0,|L28.56|
000010  6a00              LDR      r0,[r0,#0x20]
000012  2109              MOVS     r1,#9
000014  0309              LSLS     r1,r1,#12
000016  4308              ORRS     r0,r0,r1
000018  4907              LDR      r1,|L28.56|
00001a  6208              STR      r0,[r1,#0x20]
;;;98     	OPTION_LVRConfig(OPTION_LVR_4_3V);
00001c  2003              MOVS     r0,#3
00001e  f7fffffe          BL       OPTION_LVRConfig
;;;99     	OPTION_JTAGCmd(DISABLE);
000022  2000              MOVS     r0,#0
000024  f7fffffe          BL       OPTION_JTAGCmd
;;;100    	RCC_AHBPeriphClockCmd(RCC_AHBPeriph_IFB,DISABLE);
000028  2100              MOVS     r1,#0
00002a  2004              MOVS     r0,#4
00002c  f7fffffe          BL       RCC_AHBPeriphClockCmd
;;;101      	
;;;102    }
000030  bd10              POP      {r4,pc}
;;;103    
                          ENDP
000032  0000              DCW      0x0000
                  |L28.52|
                          DCD      0x40011000
                  |L28.56|
                          DCD      0x40011100
                          AREA ||i.SC_OP_Init||, CODE, READONLY, ALIGN=1
                  SC_OP_Init PROC
;;;576      */
;;;577    void SC_OP_Init(void)
000000  4770              BX       lr
;;;578    {
;;;579      
;;;580        
;;;581      
;;;582    }
;;;583    
                          ENDP
                          AREA ||i.SC_PCAP_Init||, CODE, READONLY, ALIGN=1
                  SC_PCAP_Init PROC
;;;548      */
;;;549    void SC_PCAP_Init(void)
000000  4770              BX       lr
;;;550    {
;;;551      
;;;552        
;;;553      
;;;554    }
;;;555    
                          ENDP
                          AREA ||i.SC_PWM0_Init||, CODE, READONLY, ALIGN=2
                  SC_PWM0_Init PROC
;;;420      */
;;;421    void SC_PWM0_Init(void)
000000  b500              PUSH     {lr}
;;;422    {
000002  b087              SUB      sp,sp,#0x1c
;;;423      
;;;424        
;;;425    	RCC_Unlock(0xFF);
000004  20ff              MOVS     r0,#0xff
000006  f7fffffe          BL       RCC_Unlock
;;;426    	RCC_APB0PeriphClockCmd(RCC_APB0Periph_PWM0,ENABLE);
00000a  2101              MOVS     r1,#1
00000c  0208              LSLS     r0,r1,#8
00000e  f7fffffe          BL       RCC_APB0PeriphClockCmd
;;;427    	PWM_SetDuty(PWM0,PWM_Channel_0,0);
000012  2200              MOVS     r2,#0
000014  2101              MOVS     r1,#1
000016  4829              LDR      r0,|L31.188|
000018  f7fffffe          BL       PWM_SetDuty
;;;428    	PWM_SetDuty(PWM0,PWM_Channel_1,99);
00001c  2263              MOVS     r2,#0x63
00001e  2102              MOVS     r1,#2
000020  4826              LDR      r0,|L31.188|
000022  f7fffffe          BL       PWM_SetDuty
;;;429    	PWM_SetDuty(PWM0,PWM_Channel_2,99);
000026  2263              MOVS     r2,#0x63
000028  2104              MOVS     r1,#4
00002a  4824              LDR      r0,|L31.188|
00002c  f7fffffe          BL       PWM_SetDuty
;;;430    	PWM_SetDuty(PWM0,PWM_Channel_3,99);
000030  2263              MOVS     r2,#0x63
000032  2108              MOVS     r1,#8
000034  4821              LDR      r0,|L31.188|
000036  f7fffffe          BL       PWM_SetDuty
;;;431    	PWM_SetDuty(PWM0,PWM_Channel_4,0);
00003a  2200              MOVS     r2,#0
00003c  2110              MOVS     r1,#0x10
00003e  481f              LDR      r0,|L31.188|
000040  f7fffffe          BL       PWM_SetDuty
;;;432    	PWM_SetDuty(PWM0,PWM_Channel_5,0);
000044  2200              MOVS     r2,#0
000046  2120              MOVS     r1,#0x20
000048  481c              LDR      r0,|L31.188|
00004a  f7fffffe          BL       PWM_SetDuty
;;;433    	PWM_SetDuty(PWM0,PWM_Channel_6,0);
00004e  2200              MOVS     r2,#0
000050  2140              MOVS     r1,#0x40
000052  481a              LDR      r0,|L31.188|
000054  f7fffffe          BL       PWM_SetDuty
;;;434    	PWM_SetDuty(PWM0,PWM_Channel_7,0);
000058  2200              MOVS     r2,#0
00005a  2180              MOVS     r1,#0x80
00005c  4817              LDR      r0,|L31.188|
00005e  f7fffffe          BL       PWM_SetDuty
;;;435    	PWM_InitTypeDef PWM_InitStruct;
;;;436    	PWM_InitStruct.PWM_WorkMode = PWM_WorkMode_Independent;
000062  2100              MOVS     r1,#0
000064  4668              MOV      r0,sp
000066  8201              STRH     r1,[r0,#0x10]
;;;437    	PWM_InitStruct.PWM_Prescaler = PWM_PRESCALER_DIV8;
000068  2103              MOVS     r1,#3
00006a  8181              STRH     r1,[r0,#0xc]
;;;438    	PWM_InitStruct.PWM_Cycle = 99;
00006c  2163              MOVS     r1,#0x63
00006e  8241              STRH     r1,[r0,#0x12]
;;;439    	PWM_InitStruct.PWM_OutputChannel = PWMChannel_Less|PWM_Channel_1|PWM_Channel_2|PWM_Channel_3;
000070  200e              MOVS     r0,#0xe
000072  9005              STR      r0,[sp,#0x14]
;;;440    	PWM_InitStruct.PWM_LowPolarityChannl = PWMChannel_Less;
000074  2000              MOVS     r0,#0
000076  9006              STR      r0,[sp,#0x18]
;;;441    	PWM_InitStruct.PWM_AlignedMode = PWM_AlignmentMode_Edge;
000078  2100              MOVS     r1,#0
00007a  4668              MOV      r0,sp
00007c  81c1              STRH     r1,[r0,#0xe]
;;;442    	PWM_Init(PWM0,&PWM_InitStruct);
00007e  a903              ADD      r1,sp,#0xc
000080  480e              LDR      r0,|L31.188|
000082  f7fffffe          BL       PWM_Init
;;;443    	PWM_FDInitTypeDef PWM_FDInitStruct;
;;;444    	PWM_FDInitStruct.PWM_FDMode = PWM_FDMode_Immediate;
000086  2120              MOVS     r1,#0x20
000088  4668              MOV      r0,sp
00008a  8081              STRH     r1,[r0,#4]
;;;445    	PWM_FDInitStruct.PWM_FDVoltage = PWM_FDVoltage_Low;
00008c  2100              MOVS     r1,#0
00008e  80c1              STRH     r1,[r0,#6]
;;;446    	PWM_FDInitStruct.PWM_FDFilteringTime = PWM_FilteringTime_0us;
000090  8101              STRH     r1,[r0,#8]
;;;447    	PWM_FDInit(PWM0, &PWM_FDInitStruct);
000092  a901              ADD      r1,sp,#4
000094  4809              LDR      r0,|L31.188|
000096  f7fffffe          BL       PWM_FDInit
;;;448    	PWM_FDCmd(PWM0,DISABLE);
00009a  2100              MOVS     r1,#0
00009c  4807              LDR      r0,|L31.188|
00009e  f7fffffe          BL       PWM_FDCmd
;;;449    	PWM_ITConfig(PWM0,PWM_IT_INTEN,DISABLE);
0000a2  2200              MOVS     r2,#0
0000a4  21ff              MOVS     r1,#0xff
0000a6  3101              ADDS     r1,#1
0000a8  4804              LDR      r0,|L31.188|
0000aa  f7fffffe          BL       PWM_ITConfig
;;;450    	PWM_Cmd(PWM0,ENABLE);
0000ae  2101              MOVS     r1,#1
0000b0  4802              LDR      r0,|L31.188|
0000b2  f7fffffe          BL       PWM_Cmd
;;;451      	
;;;452    }
0000b6  b007              ADD      sp,sp,#0x1c
0000b8  bd00              POP      {pc}
;;;453    
                          ENDP
0000ba  0000              DCW      0x0000
                  |L31.188|
                          DCD      0x40020200
                          AREA ||i.SC_PWR_Init||, CODE, READONLY, ALIGN=1
                  SC_PWR_Init PROC
;;;852      */
;;;853    void SC_PWR_Init(void)
000000  4770              BX       lr
;;;854    {
;;;855      
;;;856        
;;;857      		
;;;858    }
;;;859    
                          ENDP
                          AREA ||i.SC_QEP0_Init||, CODE, READONLY, ALIGN=1
                  SC_QEP0_Init PROC
;;;627      */
;;;628    void SC_QEP0_Init(void)
000000  4770              BX       lr
;;;629    {
;;;630      
;;;631        
;;;632      
;;;633    }
;;;634    
                          ENDP
                          AREA ||i.SC_QEP1_Init||, CODE, READONLY, ALIGN=1
                  SC_QEP1_Init PROC
;;;639      */
;;;640    void SC_QEP1_Init(void)
000000  4770              BX       lr
;;;641    {
;;;642      
;;;643        
;;;644      
;;;645    }
;;;646    
                          ENDP
                          AREA ||i.SC_RCC_Init||, CODE, READONLY, ALIGN=2
                  SC_RCC_Init PROC
;;;51       */
;;;52     void SC_RCC_Init(void)
000000  b510              PUSH     {r4,lr}
;;;53     {
;;;54       
;;;55         
;;;56     	RCC_Unlock(0xFF);
000002  20ff              MOVS     r0,#0xff
000004  f7fffffe          BL       RCC_Unlock
;;;57     	RCC_HXTCmd(DISABLE);
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       RCC_HXTCmd
;;;58     	RCC_LXTCmd(DISABLE);
00000e  2000              MOVS     r0,#0
000010  f7fffffe          BL       RCC_LXTCmd
;;;59     	RCC_LIRCCmd(ENABLE);
000014  2001              MOVS     r0,#1
000016  f7fffffe          BL       RCC_LIRCCmd
;;;60     	RCC_HIRCCmd(ENABLE);
00001a  2001              MOVS     r0,#1
00001c  f7fffffe          BL       RCC_HIRCCmd
;;;61     	RCC_ITConfig(ENABLE);
000020  2001              MOVS     r0,#1
000022  f7fffffe          BL       RCC_ITConfig
;;;62     	RCC_SYSCLKConfig(RCC_SYSCLKSource_HIRC);
000026  4809              LDR      r0,|L35.76|
000028  f7fffffe          BL       RCC_SYSCLKConfig
;;;63     	RCC_HCLKConfig(RCC_SYSCLK_Div1);
00002c  2000              MOVS     r0,#0
00002e  f7fffffe          BL       RCC_HCLKConfig
;;;64     	RCC_APB0Config(RCC_HCLK_Div1);
000032  2000              MOVS     r0,#0
000034  f7fffffe          BL       RCC_APB0Config
;;;65     	RCC_APB0Cmd(ENABLE);
000038  2001              MOVS     r0,#1
00003a  f7fffffe          BL       RCC_APB0Cmd
;;;66     	RCC_APB2Config(RCC_HCLK_Div1);
00003e  2000              MOVS     r0,#0
000040  f7fffffe          BL       RCC_APB2Config
;;;67     	RCC_APB2Cmd(ENABLE);
000044  2001              MOVS     r0,#1
000046  f7fffffe          BL       RCC_APB2Cmd
;;;68       	
;;;69     }
00004a  bd10              POP      {r4,pc}
;;;70     
                          ENDP
                  |L35.76|
                          DCD      0x0000ff7f
                          AREA ||i.SC_SPI0_Init||, CODE, READONLY, ALIGN=1
                  SC_SPI0_Init PROC
;;;679      */
;;;680    void SC_SPI0_Init(void)
000000  4770              BX       lr
;;;681    {
;;;682      
;;;683        
;;;684      		
;;;685    }
;;;686    
                          ENDP
                          AREA ||i.SC_SPI1_Init||, CODE, READONLY, ALIGN=1
                  SC_SPI1_Init PROC
;;;691      */
;;;692    void SC_SPI1_Init(void)
000000  4770              BX       lr
;;;693    {
;;;694      
;;;695        
;;;696      		
;;;697    }
;;;698    
                          ENDP
                          AREA ||i.SC_SPI2_Init||, CODE, READONLY, ALIGN=1
                  SC_SPI2_Init PROC
;;;704      */
;;;705    void SC_SPI2_Init(void)
000000  4770              BX       lr
;;;706    {
;;;707      
;;;708        
;;;709      		
;;;710    }
;;;711    
                          ENDP
                          AREA ||i.SC_SYSTICK_Init||, CODE, READONLY, ALIGN=1
                  SC_SYSTICK_Init PROC
;;;75       */
;;;76     void SC_SYSTICK_Init(void)
000000  b510              PUSH     {r4,lr}
;;;77     {
;;;78       
;;;79         
;;;80     	RCC_Unlock(0xFF);
000002  20ff              MOVS     r0,#0xff
000004  f7fffffe          BL       RCC_Unlock
;;;81     	RCC_SystickCLKConfig(RCC_SysTickSource_HCLK_DIV8);
000008  2000              MOVS     r0,#0
00000a  f7fffffe          BL       RCC_SystickCLKConfig
;;;82     	RCC_SystickSetCounter(16000);
00000e  207d              MOVS     r0,#0x7d
000010  01c0              LSLS     r0,r0,#7
000012  f7fffffe          BL       RCC_SystickSetCounter
;;;83     	NVIC_SetPriority(SysTick_IRQn,0);
000016  2100              MOVS     r1,#0
000018  1e48              SUBS     r0,r1,#1
00001a  f7fffffe          BL       __NVIC_SetPriority
;;;84     	RCC_SystickCmd(ENABLE);
00001e  2001              MOVS     r0,#1
000020  f7fffffe          BL       RCC_SystickCmd
;;;85       
;;;86     }
000024  bd10              POP      {r4,pc}
;;;87     
                          ENDP
                          AREA ||i.SC_TIM0_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM0_Init PROC
;;;268      */
;;;269    void SC_TIM0_Init(void)
000000  4770              BX       lr
;;;270    {
;;;271      
;;;272        
;;;273      		
;;;274    }
;;;275    
                          ENDP
                          AREA ||i.SC_TIM1_Init||, CODE, READONLY, ALIGN=2
                  SC_TIM1_Init PROC
;;;280      */
;;;281    void SC_TIM1_Init(void)
000000  b500              PUSH     {lr}
;;;282    {
000002  b085              SUB      sp,sp,#0x14
;;;283      
;;;284        
;;;285    	RCC_APB0PeriphClockCmd(RCC_APB0Periph_TIM1,ENABLE);
000004  2101              MOVS     r1,#1
000006  2002              MOVS     r0,#2
000008  f7fffffe          BL       RCC_APB0PeriphClockCmd
;;;286    	TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;
;;;287    	TIM_TimeBaseInitStruct.TIM_WorkMode = TIM_WorkMode_Timer;
00000c  2100              MOVS     r1,#0
00000e  4668              MOV      r0,sp
000010  8141              STRH     r1,[r0,#0xa]
;;;288    	TIM_TimeBaseInitStruct.TIM_Prescaler = TIM_PRESCALER_32;
000012  2105              MOVS     r1,#5
000014  0209              LSLS     r1,r1,#8
000016  8101              STRH     r1,[r0,#8]
;;;289    	TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;
000018  2100              MOVS     r1,#0
00001a  8181              STRH     r1,[r0,#0xc]
;;;290    	TIM_TimeBaseInitStruct.TIM_Preload = 33536;
00001c  2183              MOVS     r1,#0x83
00001e  0209              LSLS     r1,r1,#8
000020  8201              STRH     r1,[r0,#0x10]
;;;291    	TIM_TimeBaseInitStruct.TIM_EXENX = TIM_EXENX_Disable;
000022  2100              MOVS     r1,#0
000024  81c1              STRH     r1,[r0,#0xe]
;;;292    	TIM_TIMBaseInit(TIM1, &TIM_TimeBaseInitStruct);
000026  a902              ADD      r1,sp,#8
000028  4822              LDR      r0,|L41.180|
00002a  f7fffffe          BL       TIM_TIMBaseInit
;;;293    	TIM_IC_InitTypeDef TIM_IC_InitStruct;
;;;294    	TIM_IC_InitStruct.TIM_RICPIN = TIM_RICPin_Disable;
00002e  2100              MOVS     r1,#0
000030  4668              MOV      r0,sp
000032  8081              STRH     r1,[r0,#4]
;;;295    	TIM_IC_InitStruct.TIM_FICPIN = TIM_FICPin_Disable;
000034  80c1              STRH     r1,[r0,#6]
;;;296    	TIM_ICInit(TIM1, &TIM_IC_InitStruct);
000036  a901              ADD      r1,sp,#4
000038  481e              LDR      r0,|L41.180|
00003a  f7fffffe          BL       TIM_ICInit
;;;297    	TIM_ICCmd(TIM1, DISABLE);
00003e  2100              MOVS     r1,#0
000040  481c              LDR      r0,|L41.180|
000042  f7fffffe          BL       TIM_ICCmd
;;;298    	TIM_PWM_InitTypeDef TIM_PWM_InitStruct;
;;;299    	TIM_PWM_InitStruct.TIM_PWMOutputChannl = TIM_PWMChannel_Less;
000046  2100              MOVS     r1,#0
000048  4668              MOV      r0,sp
00004a  8001              STRH     r1,[r0,#0]
;;;300    	TIM_PWM_InitStruct.TIM_PWMLowPolarityChannl = TIM_PWMChannel_Less;
00004c  8041              STRH     r1,[r0,#2]
;;;301    	TIM_PWMInit(TIM1, &TIM_PWM_InitStruct);
00004e  4669              MOV      r1,sp
000050  4818              LDR      r0,|L41.180|
000052  f7fffffe          BL       TIM_PWMInit
;;;302    	TIM_PWMSetDuty(TIM1, TIM_PWMChannel_PWMA,50);
000056  2232              MOVS     r2,#0x32
000058  2102              MOVS     r1,#2
00005a  4816              LDR      r0,|L41.180|
00005c  f7fffffe          BL       TIM_PWMSetDuty
;;;303    	TIM_ITConfig(TIM1,TIM_IT_INTEN, DISABLE);
000060  2200              MOVS     r2,#0
000062  2101              MOVS     r1,#1
000064  4813              LDR      r0,|L41.180|
000066  f7fffffe          BL       TIM_ITConfig
;;;304    	TIM_ITConfig(TIM1,TIM_IT_EXR,DISABLE);
00006a  2200              MOVS     r2,#0
00006c  2104              MOVS     r1,#4
00006e  4811              LDR      r0,|L41.180|
000070  f7fffffe          BL       TIM_ITConfig
;;;305    	TIM_ITConfig(TIM1,TIM_IT_EXF,DISABLE);
000074  2200              MOVS     r2,#0
000076  2108              MOVS     r1,#8
000078  480e              LDR      r0,|L41.180|
00007a  f7fffffe          BL       TIM_ITConfig
;;;306    	TIM_ITConfig(TIM1,TIM_IT_TI,DISABLE);
00007e  2200              MOVS     r2,#0
000080  2102              MOVS     r1,#2
000082  480c              LDR      r0,|L41.180|
000084  f7fffffe          BL       TIM_ITConfig
;;;307    	TIM_DMACmd(TIM1,TIM_DMAReq_CAPR,ENABLE);
000088  2201              MOVS     r2,#1
00008a  2120              MOVS     r1,#0x20
00008c  4809              LDR      r0,|L41.180|
00008e  f7fffffe          BL       TIM_DMACmd
;;;308    	TIM_DMACmd(TIM1,TIM_DMAReq_CAPF,ENABLE);
000092  2201              MOVS     r2,#1
000094  2140              MOVS     r1,#0x40
000096  4807              LDR      r0,|L41.180|
000098  f7fffffe          BL       TIM_DMACmd
;;;309    	TIM_DMACmd(TIM1,TIM_DMAReq_TI,ENABLE);
00009c  2201              MOVS     r2,#1
00009e  2110              MOVS     r1,#0x10
0000a0  4804              LDR      r0,|L41.180|
0000a2  f7fffffe          BL       TIM_DMACmd
;;;310    	TIM_Cmd(TIM1,ENABLE);
0000a6  2101              MOVS     r1,#1
0000a8  4802              LDR      r0,|L41.180|
0000aa  f7fffffe          BL       TIM_Cmd
;;;311      	
;;;312    }
0000ae  b005              ADD      sp,sp,#0x14
0000b0  bd00              POP      {pc}
;;;313    
                          ENDP
0000b2  0000              DCW      0x0000
                  |L41.180|
                          DCD      0x40020140
                          AREA ||i.SC_TIM2_Init||, CODE, READONLY, ALIGN=2
                  SC_TIM2_Init PROC
;;;318      */
;;;319    void SC_TIM2_Init(void)
000000  b500              PUSH     {lr}
;;;320    {
000002  b085              SUB      sp,sp,#0x14
;;;321      
;;;322        
;;;323    	RCC_APB0PeriphClockCmd(RCC_APB0Periph_TIM2,ENABLE);
000004  2101              MOVS     r1,#1
000006  2004              MOVS     r0,#4
000008  f7fffffe          BL       RCC_APB0PeriphClockCmd
;;;324    	TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStruct;
;;;325    	TIM_TimeBaseInitStruct.TIM_WorkMode = TIM_WorkMode_Timer;
00000c  2100              MOVS     r1,#0
00000e  4668              MOV      r0,sp
000010  8141              STRH     r1,[r0,#0xa]
;;;326    	TIM_TimeBaseInitStruct.TIM_Prescaler = TIM_PRESCALER_32;
000012  2105              MOVS     r1,#5
000014  0209              LSLS     r1,r1,#8
000016  8101              STRH     r1,[r0,#8]
;;;327    	TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;
000018  2100              MOVS     r1,#0
00001a  8181              STRH     r1,[r0,#0xc]
;;;328    	TIM_TimeBaseInitStruct.TIM_Preload = 32768 - 221;
00001c  4927              LDR      r1,|L42.188|
00001e  8201              STRH     r1,[r0,#0x10]
;;;329    	TIM_TimeBaseInitStruct.TIM_EXENX = TIM_EXENX_Disable;
000020  2100              MOVS     r1,#0
000022  81c1              STRH     r1,[r0,#0xe]
;;;330    	TIM_TIMBaseInit(TIM2, &TIM_TimeBaseInitStruct);
000024  a902              ADD      r1,sp,#8
000026  4826              LDR      r0,|L42.192|
000028  f7fffffe          BL       TIM_TIMBaseInit
;;;331    	TIM_IC_InitTypeDef TIM_IC_InitStruct;
;;;332    	TIM_IC_InitStruct.TIM_RICPIN = TIM_RICPin_Disable;
00002c  2100              MOVS     r1,#0
00002e  4668              MOV      r0,sp
000030  8081              STRH     r1,[r0,#4]
;;;333    	TIM_IC_InitStruct.TIM_FICPIN = TIM_FICPin_Disable;
000032  80c1              STRH     r1,[r0,#6]
;;;334    	TIM_ICInit(TIM2, &TIM_IC_InitStruct);
000034  a901              ADD      r1,sp,#4
000036  4822              LDR      r0,|L42.192|
000038  f7fffffe          BL       TIM_ICInit
;;;335    	TIM_ICCmd(TIM2, DISABLE);
00003c  2100              MOVS     r1,#0
00003e  4820              LDR      r0,|L42.192|
000040  f7fffffe          BL       TIM_ICCmd
;;;336    	TIM_PWM_InitTypeDef TIM_PWM_InitStruct;
;;;337    	TIM_PWM_InitStruct.TIM_PWMOutputChannl = TIM_PWMChannel_PWMA;
000044  2102              MOVS     r1,#2
000046  4668              MOV      r0,sp
000048  8001              STRH     r1,[r0,#0]
;;;338    	TIM_PWM_InitStruct.TIM_PWMLowPolarityChannl = TIM_PWMChannel_Less;
00004a  2100              MOVS     r1,#0
00004c  8041              STRH     r1,[r0,#2]
;;;339    	TIM_PWMInit(TIM2, &TIM_PWM_InitStruct);
00004e  4669              MOV      r1,sp
000050  481b              LDR      r0,|L42.192|
000052  f7fffffe          BL       TIM_PWMInit
;;;340    	TIM_PinRemapConfig(TIM2, TIM_PinRemap_Default);
000056  2100              MOVS     r1,#0
000058  4819              LDR      r0,|L42.192|
00005a  f7fffffe          BL       TIM_PinRemapConfig
;;;341    	TIM_PWMSetDuty(TIM2, TIM_PWMChannel_PWMA,50);
00005e  2232              MOVS     r2,#0x32
000060  2102              MOVS     r1,#2
000062  4817              LDR      r0,|L42.192|
000064  f7fffffe          BL       TIM_PWMSetDuty
;;;342    	TIM_ITConfig(TIM2,TIM_IT_INTEN, DISABLE);
000068  2200              MOVS     r2,#0
00006a  2101              MOVS     r1,#1
00006c  4814              LDR      r0,|L42.192|
00006e  f7fffffe          BL       TIM_ITConfig
;;;343    	TIM_ITConfig(TIM2,TIM_IT_EXR,DISABLE);
000072  2200              MOVS     r2,#0
000074  2104              MOVS     r1,#4
000076  4812              LDR      r0,|L42.192|
000078  f7fffffe          BL       TIM_ITConfig
;;;344    	TIM_ITConfig(TIM2,TIM_IT_EXF,DISABLE);
00007c  2200              MOVS     r2,#0
00007e  2108              MOVS     r1,#8
000080  480f              LDR      r0,|L42.192|
000082  f7fffffe          BL       TIM_ITConfig
;;;345    	TIM_ITConfig(TIM2,TIM_IT_TI,DISABLE);
000086  2200              MOVS     r2,#0
000088  2102              MOVS     r1,#2
00008a  480d              LDR      r0,|L42.192|
00008c  f7fffffe          BL       TIM_ITConfig
;;;346    	TIM_DMACmd(TIM2,TIM_DMAReq_CAPR,DISABLE);
000090  2200              MOVS     r2,#0
000092  2120              MOVS     r1,#0x20
000094  480a              LDR      r0,|L42.192|
000096  f7fffffe          BL       TIM_DMACmd
;;;347    	TIM_DMACmd(TIM2,TIM_DMAReq_CAPF,DISABLE);
00009a  2200              MOVS     r2,#0
00009c  2140              MOVS     r1,#0x40
00009e  4808              LDR      r0,|L42.192|
0000a0  f7fffffe          BL       TIM_DMACmd
;;;348    	TIM_DMACmd(TIM2,TIM_DMAReq_TI,DISABLE);
0000a4  2200              MOVS     r2,#0
0000a6  2110              MOVS     r1,#0x10
0000a8  4805              LDR      r0,|L42.192|
0000aa  f7fffffe          BL       TIM_DMACmd
;;;349    	TIM_Cmd(TIM2,ENABLE);
0000ae  2101              MOVS     r1,#1
0000b0  4803              LDR      r0,|L42.192|
0000b2  f7fffffe          BL       TIM_Cmd
;;;350      	
;;;351    }
0000b6  b005              ADD      sp,sp,#0x14
0000b8  bd00              POP      {pc}
;;;352    
                          ENDP
0000ba  0000              DCW      0x0000
                  |L42.188|
                          DCD      0x00007f23
                  |L42.192|
                          DCD      0x40020180
                          AREA ||i.SC_TIM3_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM3_Init PROC
;;;357      */
;;;358    void SC_TIM3_Init(void)
000000  4770              BX       lr
;;;359    {
;;;360      
;;;361        
;;;362      	
;;;363    }
;;;364    
                          ENDP
                          AREA ||i.SC_TIM4_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM4_Init PROC
;;;370      */
;;;371    void SC_TIM4_Init(void)
000000  4770              BX       lr
;;;372    {
;;;373      
;;;374        
;;;375      	
;;;376    }
;;;377    
                          ENDP
                          AREA ||i.SC_TIM5_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM5_Init PROC
;;;382      */
;;;383    void SC_TIM5_Init(void)
000000  4770              BX       lr
;;;384    {
;;;385      
;;;386        
;;;387      	
;;;388    }
;;;389    
                          ENDP
                          AREA ||i.SC_TIM6_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM6_Init PROC
;;;394      */
;;;395    void SC_TIM6_Init(void)
000000  4770              BX       lr
;;;396    {
;;;397      
;;;398        
;;;399      	
;;;400    }
;;;401    
                          ENDP
                          AREA ||i.SC_TIM7_Init||, CODE, READONLY, ALIGN=1
                  SC_TIM7_Init PROC
;;;406      */
;;;407    void SC_TIM7_Init(void)
000000  4770              BX       lr
;;;408    {
;;;409      
;;;410        
;;;411      	
;;;412    }
;;;413    
                          ENDP
                          AREA ||i.SC_TWI0_Init||, CODE, READONLY, ALIGN=2
                  SC_TWI0_Init PROC
;;;717      */
;;;718    void SC_TWI0_Init(void)
000000  b500              PUSH     {lr}
;;;719    {
000002  b087              SUB      sp,sp,#0x1c
;;;720      
;;;721        
;;;722    	GPIO_InitTypeDef GPIOInit_PA05_Struct;
;;;723    	GPIOInit_PA05_Struct.GPIO_Pin = GPIO_Pin_5;
000004  2120              MOVS     r1,#0x20
000006  4668              MOV      r0,sp
000008  8281              STRH     r1,[r0,#0x14]
;;;724    	GPIOInit_PA05_Struct.GPIO_Mode = GPIO_Mode_IN_PU;
00000a  2101              MOVS     r1,#1
00000c  82c1              STRH     r1,[r0,#0x16]
;;;725    	GPIOInit_PA05_Struct.GPIO_DriveLevel = 0;
00000e  2100              MOVS     r1,#0
000010  8301              STRH     r1,[r0,#0x18]
;;;726    	GPIO_Init(GPIOA,&GPIOInit_PA05_Struct);
000012  a905              ADD      r1,sp,#0x14
000014  4821              LDR      r0,|L48.156|
000016  f7fffffe          BL       GPIO_Init
;;;727    	GPIO_InitTypeDef GPIOInit_PA06_Struct;
;;;728    	GPIOInit_PA06_Struct.GPIO_Pin = GPIO_Pin_6;
00001a  2140              MOVS     r1,#0x40
00001c  4668              MOV      r0,sp
00001e  8181              STRH     r1,[r0,#0xc]
;;;729    	GPIOInit_PA06_Struct.GPIO_Mode = GPIO_Mode_IN_PU;
000020  2101              MOVS     r1,#1
000022  81c1              STRH     r1,[r0,#0xe]
;;;730    	GPIOInit_PA06_Struct.GPIO_DriveLevel = 0;
000024  2100              MOVS     r1,#0
000026  8201              STRH     r1,[r0,#0x10]
;;;731    	GPIO_Init(GPIOA,&GPIOInit_PA06_Struct);
000028  a903              ADD      r1,sp,#0xc
00002a  481c              LDR      r0,|L48.156|
00002c  f7fffffe          BL       GPIO_Init
;;;732    	RCC_APB0PeriphClockCmd(RCC_APB0Periph_TWI0, ENABLE);
000030  2101              MOVS     r1,#1
000032  2010              MOVS     r0,#0x10
000034  f7fffffe          BL       RCC_APB0PeriphClockCmd
;;;733    	TWI_InitTypeDef TWI_InitStruct;
;;;734    	TWI_InitStruct.TWI_Ack = TWI_Ack_Enable;
000038  2102              MOVS     r1,#2
00003a  4668              MOV      r0,sp
00003c  8001              STRH     r1,[r0,#0]
;;;735    	TWI_InitStruct.TWI_Prescaler = TWI_PRESCALER_128;
00003e  2105              MOVS     r1,#5
000040  0209              LSLS     r1,r1,#8
000042  8041              STRH     r1,[r0,#2]
;;;736    	TWI_InitStruct.TWI_Stretch = TWI_Stretch_Disable;
000044  2100              MOVS     r1,#0
000046  8081              STRH     r1,[r0,#4]
;;;737    	TWI_InitStruct.TWI_SlaveAdress = 0x50;
000048  2050              MOVS     r0,#0x50
00004a  9002              STR      r0,[sp,#8]
;;;738    	TWI_InitStruct.TWI_GeneralCall = TWI_GeneralCall_Disable;
00004c  4668              MOV      r0,sp
00004e  80c1              STRH     r1,[r0,#6]
;;;739    	TWI_Init(TWI0, &TWI_InitStruct);
000050  4669              MOV      r1,sp
000052  4813              LDR      r0,|L48.160|
000054  f7fffffe          BL       TWI_Init
;;;740    	TWI_PinRemapConfig(TWI0,TWI_PinRemap_B);
000058  2101              MOVS     r1,#1
00005a  03c9              LSLS     r1,r1,#15
00005c  4810              LDR      r0,|L48.160|
00005e  f7fffffe          BL       TWI_PinRemapConfig
;;;741    	TWI_ITConfig(TWI0,TWI_IT_INT,ENABLE);
000062  2201              MOVS     r2,#1
000064  4611              MOV      r1,r2
000066  480e              LDR      r0,|L48.160|
000068  f7fffffe          BL       TWI_ITConfig
;;;742    	TWI_DMACmd(TWI0,TWI_DMAReq_TX,DISABLE);
00006c  2200              MOVS     r2,#0
00006e  2180              MOVS     r1,#0x80
000070  480b              LDR      r0,|L48.160|
000072  f7fffffe          BL       TWI_DMACmd
;;;743    	TWI_DMACmd(TWI0,TWI_DMAReq_RX,DISABLE);
000076  2200              MOVS     r2,#0
000078  2140              MOVS     r1,#0x40
00007a  4809              LDR      r0,|L48.160|
00007c  f7fffffe          BL       TWI_DMACmd
;;;744    	NVIC_SetPriority(TWI0_IRQn,3);
000080  2103              MOVS     r1,#3
000082  2017              MOVS     r0,#0x17
000084  f7fffffe          BL       __NVIC_SetPriority
;;;745    	NVIC_EnableIRQ(TWI0_IRQn);
000088  2017              MOVS     r0,#0x17
00008a  f7fffffe          BL       __NVIC_EnableIRQ
;;;746    	TWI_Cmd(TWI0,ENABLE);
00008e  2101              MOVS     r1,#1
000090  4803              LDR      r0,|L48.160|
000092  f7fffffe          BL       TWI_Cmd
;;;747      		
;;;748    }
000096  b007              ADD      sp,sp,#0x1c
000098  bd00              POP      {pc}
;;;749    
                          ENDP
00009a  0000              DCW      0x0000
                  |L48.156|
                          DCD      0x40011000
                  |L48.160|
                          DCD      0x40020060
                          AREA ||i.SC_TWI1_Init||, CODE, READONLY, ALIGN=1
                  SC_TWI1_Init PROC
;;;754      */
;;;755    void SC_TWI1_Init(void)
000000  4770              BX       lr
;;;756    {
;;;757      
;;;758        
;;;759      		
;;;760    }
;;;761    
                          ENDP
                          AREA ||i.SC_TemperSensor_Init||, CODE, READONLY, ALIGN=1
                  SC_TemperSensor_Init PROC
;;;535      */
;;;536    void SC_TemperSensor_Init(void)
000000  4770              BX       lr
;;;537    {
;;;538      
;;;539        
;;;540      
;;;541    }
;;;542    
                          ENDP
                          AREA ||i.SC_UART0_Init||, CODE, READONLY, ALIGN=1
                  SC_UART0_Init PROC
;;;192      */
;;;193    void SC_UART0_Init(void)
000000  4770              BX       lr
;;;194    {
;;;195      
;;;196        
;;;197      		
;;;198    }
;;;199    
                          ENDP
                          AREA ||i.SC_UART1_Init||, CODE, READONLY, ALIGN=1
                  SC_UART1_Init PROC
;;;204      */
;;;205    void SC_UART1_Init(void)
000000  4770              BX       lr
;;;206    {
;;;207      
;;;208        
;;;209      		
;;;210    }
;;;211    
                          ENDP
                          AREA ||i.SC_UART2_Init||, CODE, READONLY, ALIGN=1
                  SC_UART2_Init PROC
;;;216      */
;;;217    void SC_UART2_Init(void)
000000  4770              BX       lr
;;;218    {
;;;219      
;;;220        
;;;221      		
;;;222    }
;;;223    
                          ENDP
                          AREA ||i.SC_UART3_Init||, CODE, READONLY, ALIGN=1
                  SC_UART3_Init PROC
;;;229      */
;;;230    void SC_UART3_Init(void)
000000  4770              BX       lr
;;;231    {
;;;232      
;;;233        
;;;234      		
;;;235    }
;;;236    
                          ENDP
                          AREA ||i.SC_UART4_Init||, CODE, READONLY, ALIGN=1
                  SC_UART4_Init PROC
;;;243      */
;;;244    void SC_UART4_Init(void)
000000  4770              BX       lr
;;;245    {
;;;246      
;;;247        
;;;248      		
;;;249    }
;;;250    
                          ENDP
                          AREA ||i.SC_UART5_Init||, CODE, READONLY, ALIGN=1
                  SC_UART5_Init PROC
;;;255      */
;;;256    void SC_UART5_Init(void)
000000  4770              BX       lr
;;;257    {
;;;258      
;;;259        
;;;260      		
;;;261    }
;;;262    
                          ENDP
                          AREA ||i.SC_VREF_Init||, CODE, READONLY, ALIGN=1
                  SC_VREF_Init PROC
;;;511      */
;;;512    void SC_VREF_Init(void)
000000  4770              BX       lr
;;;513    {
;;;514      
;;;515        
;;;516      
;;;517    }
;;;518    
                          ENDP
                          AREA ||i.SC_WDT_Init||, CODE, READONLY, ALIGN=1
                  SC_WDT_Init PROC
;;;840      */
;;;841    void SC_WDT_Init(void)
000000  4770              BX       lr
;;;842    {
;;;843      
;;;844        
;;;845      	
;;;846    }
;;;847    
                          ENDP
                          AREA ||i.__NVIC_EnableIRQ||, CODE, READONLY, ALIGN=2
                  __NVIC_EnableIRQ PROC
;;;740     */
;;;741    __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
000000  2800              CMP      r0,#0
;;;742    {
;;;743      if ((int32_t)(IRQn) >= 0)
000002  db05              BLT      |L59.16|
;;;744      {
;;;745        NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
000004  06c2              LSLS     r2,r0,#27
000006  0ed2              LSRS     r2,r2,#27
000008  2101              MOVS     r1,#1
00000a  4091              LSLS     r1,r1,r2
00000c  4a01              LDR      r2,|L59.20|
00000e  6011              STR      r1,[r2,#0]
                  |L59.16|
;;;746      }
;;;747    }
000010  4770              BX       lr
;;;748    
                          ENDP
000012  0000              DCW      0x0000
                  |L59.20|
                          DCD      0xe000e100
                          AREA ||i.__NVIC_SetPriority||, CODE, READONLY, ALIGN=2
                  __NVIC_SetPriority PROC
;;;847     */
;;;848    __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
000000  b510              PUSH     {r4,lr}
;;;849    {
;;;850      if ((int32_t)(IRQn) >= 0)
000002  2800              CMP      r0,#0
000004  db19              BLT      |L60.58|
;;;851      {
;;;852        NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
000006  4a1a              LDR      r2,|L60.112|
000008  2303              MOVS     r3,#3
00000a  021b              LSLS     r3,r3,#8
00000c  18d2              ADDS     r2,r2,r3
00000e  0883              LSRS     r3,r0,#2
000010  009b              LSLS     r3,r3,#2
000012  58d2              LDR      r2,[r2,r3]
000014  0783              LSLS     r3,r0,#30
000016  0edc              LSRS     r4,r3,#27
000018  23ff              MOVS     r3,#0xff
00001a  40a3              LSLS     r3,r3,r4
00001c  439a              BICS     r2,r2,r3
00001e  078b              LSLS     r3,r1,#30
000020  0e1b              LSRS     r3,r3,#24
000022  0784              LSLS     r4,r0,#30
000024  0ee4              LSRS     r4,r4,#27
000026  40a3              LSLS     r3,r3,r4
000028  431a              ORRS     r2,r2,r3
00002a  4b11              LDR      r3,|L60.112|
00002c  2403              MOVS     r4,#3
00002e  0224              LSLS     r4,r4,#8
000030  191b              ADDS     r3,r3,r4
000032  0884              LSRS     r4,r0,#2
000034  00a4              LSLS     r4,r4,#2
000036  511a              STR      r2,[r3,r4]
000038  e018              B        |L60.108|
                  |L60.58|
;;;853           (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
;;;854      }
;;;855      else
;;;856      {
;;;857        SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
00003a  4a0e              LDR      r2,|L60.116|
00003c  0703              LSLS     r3,r0,#28
00003e  0f1b              LSRS     r3,r3,#28
000040  3b08              SUBS     r3,r3,#8
000042  089b              LSRS     r3,r3,#2
000044  009b              LSLS     r3,r3,#2
000046  58d2              LDR      r2,[r2,r3]
000048  0783              LSLS     r3,r0,#30
00004a  0edc              LSRS     r4,r3,#27
00004c  23ff              MOVS     r3,#0xff
00004e  40a3              LSLS     r3,r3,r4
000050  439a              BICS     r2,r2,r3
000052  078b              LSLS     r3,r1,#30
000054  0e1b              LSRS     r3,r3,#24
000056  0784              LSLS     r4,r0,#30
000058  0ee4              LSRS     r4,r4,#27
00005a  40a3              LSLS     r3,r3,r4
00005c  431a              ORRS     r2,r2,r3
00005e  4b05              LDR      r3,|L60.116|
000060  0704              LSLS     r4,r0,#28
000062  0f24              LSRS     r4,r4,#28
000064  3c08              SUBS     r4,r4,#8
000066  08a4              LSRS     r4,r4,#2
000068  00a4              LSLS     r4,r4,#2
00006a  511a              STR      r2,[r3,r4]
                  |L60.108|
;;;858           (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
;;;859      }
;;;860    }
00006c  bd10              POP      {r4,pc}
;;;861    
                          ENDP
00006e  0000              DCW      0x0000
                  |L60.112|
                          DCD      0xe000e100
                  |L60.116|
                          DCD      0xe000ed1c
;*** Start embedded assembler ***
#line 1 "..\\User\\SC_Init.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_SC_Init_c_SC_Init____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___9_SC_Init_c_SC_Init____REV16| PROC
#line 464
 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_SC_Init_c_SC_Init____REVSH|
#line 478
|__asm___9_SC_Init_c_SC_Init____REVSH| PROC
#line 479
 revsh r0, r0
 bx lr
	ENDP
;*** End   embedded assembler ***
