; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\output\sc_it.o --asm_dir=..\List\ --list_dir=..\List\ --depend=..\output\sc_it.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -I..\Buzz\Inc -I..\Drivers\TKDriver\C -I..\ADC_IAP\Inc -ID:\keil\ARM\PACK\Keil\SC32F1xxx_DFP\1.0.6\Device\SC32F10xx\FWLib\SC32_Lib\inc -D__MICROLIB -D__UVISION_VERSION=534 -DSC32F10xx -DSC32f10xx --omf_browse=..\output\sc_it.crf ..\User\SC_it.c]
                          THUMB

                          AREA ||i.ADC_IRQHandler||, CODE, READONLY, ALIGN=2

                  ADC_IRQHandler PROC
;;;242    
;;;243    void ADC_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;244    {
;;;245        /*<Generated by EasyCodeCube begin>*/
;;;246        /*<Generated by EasyCodeCube end>*/
;;;247    	ADC_ClearFlag(ADC, ADC_Flag_ADCIF);//Generated by EasyCodeCube, forbid editing!!!
000002  2101              MOVS     r1,#1
000004  4801              LDR      r0,|L1.12|
000006  f7fffffe          BL       ADC_ClearFlag
;;;248    }
00000a  bd10              POP      {r4,pc}
;;;249    
                          ENDP

                  |L1.12|
                          DCD      0x40022110

                          AREA ||i.BTM_IRQHandler||, CODE, READONLY, ALIGN=1

                  BTM_IRQHandler PROC
;;;97     #if !defined (TK_USE_BTM)
;;;98     void BTM_IRQHandler(void)
000000  4770              BX       lr
;;;99     {
;;;100        /*<Generated by EasyCodeCube begin>*/
;;;101        /*<Generated by EasyCodeCube end>*/
;;;102    }
;;;103    #endif
                          ENDP


                          AREA ||i.CAN_IRQHandler||, CODE, READONLY, ALIGN=1

                  CAN_IRQHandler PROC
;;;198    
;;;199    void CAN_IRQHandler(void)
000000  4770              BX       lr
;;;200    {
;;;201        /*<Generated by EasyCodeCube begin>*/
;;;202        /*<Generated by EasyCodeCube end>*/
;;;203    }
;;;204    
                          ENDP


                          AREA ||i.CMP0_1_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP0_1_2_IRQHandler PROC
;;;249    
;;;250    void CMP0_1_2_IRQHandler(void)
000000  4770              BX       lr
;;;251    {
;;;252        /*<Generated by EasyCodeCube begin>*/
;;;253        /*<Generated by EasyCodeCube end>*/
;;;254    }
;;;255    
                          ENDP


                          AREA ||i.CMP3_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP3_IRQHandler PROC
;;;255    
;;;256    void CMP3_IRQHandler(void)
000000  4770              BX       lr
;;;257    {
;;;258        /*<Generated by EasyCodeCube begin>*/
;;;259        /*<Generated by EasyCodeCube end>*/
;;;260    }
;;;261    
                          ENDP


                          AREA ||i.CMP_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP_IRQHandler PROC
;;;261    
;;;262    void CMP_IRQHandler(void)
000000  4770              BX       lr
;;;263    {
;;;264        /*<Generated by EasyCodeCube begin>*/
;;;265        /*<Generated by EasyCodeCube end>*/
;;;266    }
;;;267    
                          ENDP


                          AREA ||i.DMA0_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA0_IRQHandler PROC
;;;104    
;;;105    void DMA0_IRQHandler(void)
000000  4770              BX       lr
;;;106    {
;;;107        /*<Generated by EasyCodeCube begin>*/
;;;108        /*<UserCodeStart>*//*<SinOne-Tag><79>*/
;;;109        /*<UserCodeEnd>*//*<SinOne-Tag><79>*/
;;;110        /*<Generated by EasyCodeCube end>*/
;;;111    }
;;;112    
                          ENDP


                          AREA ||i.DMA1_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA1_IRQHandler PROC
;;;112    
;;;113    void DMA1_IRQHandler(void)
000000  4770              BX       lr
;;;114    {
;;;115        /*<Generated by EasyCodeCube begin>*/
;;;116        /*<Generated by EasyCodeCube end>*/
;;;117    }
;;;118    
                          ENDP


                          AREA ||i.DMA2_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA2_IRQHandler PROC
;;;119    
;;;120    void DMA2_IRQHandler(void)
000000  4770              BX       lr
;;;121    {
;;;122        /*<Generated by EasyCodeCube begin>*/
;;;123        /*<Generated by EasyCodeCube end>*/
;;;124    }
;;;125    
                          ENDP


                          AREA ||i.DMA3_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA3_IRQHandler PROC
;;;125    
;;;126    void DMA3_IRQHandler(void)
000000  4770              BX       lr
;;;127    {
;;;128        /*<Generated by EasyCodeCube begin>*/
;;;129        /*<Generated by EasyCodeCube end>*/
;;;130    }
;;;131    
                          ENDP


                          AREA ||i.EPWM_IRQHandler||, CODE, READONLY, ALIGN=1

                  EPWM_IRQHandler PROC
;;;204    
;;;205    void EPWM_IRQHandler(void)
000000  4770              BX       lr
;;;206    {
;;;207        /*<Generated by EasyCodeCube begin>*/
;;;208        /*<Generated by EasyCodeCube end>*/
;;;209    }
;;;210    
                          ENDP


                          AREA ||i.INT0_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT0_IRQHandler PROC
;;;26     
;;;27     void INT0_IRQHandler(void)
000000  4770              BX       lr
;;;28     {
;;;29         /*<Generated by EasyCodeCube begin>*/
;;;30         /*<Generated by EasyCodeCube end>*/
;;;31     }
;;;32     
                          ENDP


                          AREA ||i.INT12_15_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT12_15_IRQHandler PROC
;;;44     
;;;45     void INT12_15_IRQHandler(void)
000000  4770              BX       lr
;;;46     {
;;;47         /*<Generated by EasyCodeCube begin>*/
;;;48         /*<Generated by EasyCodeCube end>*/
;;;49     }
;;;50     
                          ENDP


                          AREA ||i.INT1_7_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT1_7_IRQHandler PROC
;;;32     
;;;33     void INT1_7_IRQHandler(void)
000000  4770              BX       lr
;;;34     {
;;;35         /*<Generated by EasyCodeCube begin>*/
;;;36         /*<Generated by EasyCodeCube end>*/
;;;37     }
;;;38     
                          ENDP


                          AREA ||i.INT8_11_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT8_11_IRQHandler PROC
;;;38     
;;;39     void INT8_11_IRQHandler(void)
000000  4770              BX       lr
;;;40     {
;;;41         /*<Generated by EasyCodeCube begin>*/
;;;42         /*<Generated by EasyCodeCube end>*/
;;;43     }
;;;44     
                          ENDP


                          AREA ||i.LEDPWM_IRQHandler||, CODE, READONLY, ALIGN=1

                  LEDPWM_IRQHandler PROC
;;;236    
;;;237    void LEDPWM_IRQHandler(void)
000000  4770              BX       lr
;;;238    {
;;;239        /*<Generated by EasyCodeCube begin>*/
;;;240        /*<Generated by EasyCodeCube end>*/
;;;241    }
;;;242    
                          ENDP


                          AREA ||i.OP1_OP2_IRQHandler||, CODE, READONLY, ALIGN=1

                  OP1_OP2_IRQHandler PROC
;;;186    
;;;187    void OP1_OP2_IRQHandler(void)
000000  4770              BX       lr
;;;188    {
;;;189        /*<Generated by EasyCodeCube begin>*/
;;;190        /*<Generated by EasyCodeCube end>*/
;;;191    }
;;;192    
                          ENDP


                          AREA ||i.PCAP_IRQHandler||, CODE, READONLY, ALIGN=1

                  PCAP_IRQHandler PROC
;;;210    
;;;211    void PCAP_IRQHandler(void)
000000  4770              BX       lr
;;;212    {
;;;213        /*<Generated by EasyCodeCube begin>*/
;;;214        /*<Generated by EasyCodeCube end>*/
;;;215    }
;;;216    
                          ENDP


                          AREA ||i.PWM0_IRQHandler||, CODE, READONLY, ALIGN=2

                  PWM0_IRQHandler PROC
;;;229    
;;;230    void PWM0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;231    {
;;;232        /*<Generated by EasyCodeCube begin>*/
;;;233        /*<Generated by EasyCodeCube end>*/
;;;234    	PWM_ClearFlag(PWM0, PWM_Flag_PWMIF|PWM_Flag_FLTSTA);//Generated by EasyCodeCube, forbid editing!!!
000002  2103              MOVS     r1,#3
000004  4801              LDR      r0,|L19.12|
000006  f7fffffe          BL       PWM_ClearFlag
;;;235    }
00000a  bd10              POP      {r4,pc}
;;;236    
                          ENDP

                  |L19.12|
                          DCD      0x40020200

                          AREA ||i.QEP0_IRQHandler||, CODE, READONLY, ALIGN=1

                  QEP0_IRQHandler PROC
;;;174    
;;;175    void QEP0_IRQHandler(void)
000000  4770              BX       lr
;;;176    {
;;;177        /*<Generated by EasyCodeCube begin>*/
;;;178        /*<Generated by EasyCodeCube end>*/
;;;179    }
;;;180    
                          ENDP


                          AREA ||i.QEP1_IRQHandler||, CODE, READONLY, ALIGN=1

                  QEP1_IRQHandler PROC
;;;180    
;;;181    void QEP1_IRQHandler(void)
000000  4770              BX       lr
;;;182    {
;;;183        /*<Generated by EasyCodeCube begin>*/
;;;184        /*<Generated by EasyCodeCube end>*/
;;;185    }
;;;186    
                          ENDP


                          AREA ||i.RCC_IRQHandler||, CODE, READONLY, ALIGN=1

                  RCC_IRQHandler PROC
;;;50     
;;;51     void RCC_IRQHandler(void)
000000  4770              BX       lr
;;;52     {
;;;53         /*<Generated by EasyCodeCube begin>*/
;;;54         /*<Generated by EasyCodeCube end>*/
;;;55     }
;;;56     
                          ENDP


                          AREA ||i.SPI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI0_IRQHandler PROC
;;;274    
;;;275    void SPI0_IRQHandler(void)
000000  4770              BX       lr
;;;276    {
;;;277        /*<Generated by EasyCodeCube begin>*/
;;;278        /*<Generated by EasyCodeCube end>*/
;;;279    }
;;;280    
                          ENDP


                          AREA ||i.SPI1_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_2_IRQHandler PROC
;;;286    
;;;287    void SPI1_2_IRQHandler(void)
000000  4770              BX       lr
;;;288    {
;;;289        /*<Generated by EasyCodeCube begin>*/
;;;290        /*<Generated by EasyCodeCube end>*/
;;;291    }
                          ENDP


                          AREA ||i.SPI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_IRQHandler PROC
;;;280    
;;;281    void SPI1_IRQHandler(void)
000000  4770              BX       lr
;;;282    {
;;;283        /*<Generated by EasyCodeCube begin>*/
;;;284        /*<Generated by EasyCodeCube end>*/
;;;285    }
;;;286    
                          ENDP


                          AREA ||i.SPI1_TWI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_TWI1_IRQHandler PROC
;;;192    
;;;193    void SPI1_TWI1_IRQHandler(void)
000000  4770              BX       lr
;;;194    {
;;;195        /*<Generated by EasyCodeCube begin>*/
;;;196        /*<Generated by EasyCodeCube end>*/
;;;197    }
;;;198    
                          ENDP


                          AREA ||i.SysTick_IRQHandler||, CODE, READONLY, ALIGN=1

                  SysTick_IRQHandler PROC
;;;268    
;;;269    void SysTick_IRQHandler(void)
000000  4770              BX       lr
;;;270    {
;;;271        /*<Generated by EasyCodeCube begin>*/
;;;272        /*<Generated by EasyCodeCube end>*/
;;;273    }
;;;274    
                          ENDP


                          AREA ||i.TIMER0_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER0_IRQHandler PROC
;;;132    
;;;133    void TIMER0_IRQHandler(void)
000000  4770              BX       lr
;;;134    {
;;;135        /*<Generated by EasyCodeCube begin>*/
;;;136        /*<Generated by EasyCodeCube end>*/
;;;137    }
;;;138    
                          ENDP


                          AREA ||i.TIMER1_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER1_IRQHandler PROC
;;;138    
;;;139    void TIMER1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;140    {
;;;141        /*<Generated by EasyCodeCube begin>*/
;;;142        /*<Generated by EasyCodeCube end>*/
;;;143    	TIM_ClearFlag(TIM1, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000002  2107              MOVS     r1,#7
000004  4801              LDR      r0,|L29.12|
000006  f7fffffe          BL       TIM_ClearFlag
;;;144    }
00000a  bd10              POP      {r4,pc}
;;;145    
                          ENDP

                  |L29.12|
                          DCD      0x40020140

                          AREA ||i.TIMER2_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER2_IRQHandler PROC
;;;145    
;;;146    void TIMER2_IRQHandler(void)
000000  4770              BX       lr
;;;147    {
;;;148        /*<Generated by EasyCodeCube begin>*/
;;;149        /*<Generated by EasyCodeCube end>*/
;;;150    }
;;;151    
                          ENDP


                          AREA ||i.TIMER3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER3_IRQHandler PROC
;;;151    
;;;152    void TIMER3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;153    {
;;;154        /*<Generated by EasyCodeCube begin>*/
;;;155        /*<Generated by EasyCodeCube end>*/
;;;156        checkPowerLoss(0);
000002  2000              MOVS     r0,#0
000004  f7fffffe          BL       checkPowerLoss
;;;157    	TIM_ClearFlag(TIM3, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000008  2107              MOVS     r1,#7
00000a  4802              LDR      r0,|L31.20|
00000c  f7fffffe          BL       TIM_ClearFlag
;;;158    }
000010  bd10              POP      {r4,pc}
;;;159    
                          ENDP

000012  0000              DCW      0x0000
                  |L31.20|
                          DCD      0x400201c0

                          AREA ||i.TIMER4_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER4_5_IRQHandler PROC
;;;160    
;;;161    void TIMER4_5_IRQHandler(void)
000000  4770              BX       lr
;;;162    {
;;;163        /*<Generated by EasyCodeCube begin>*/
;;;164        /*<Generated by EasyCodeCube end>*/
;;;165    }
;;;166    
                          ENDP


                          AREA ||i.TIMER6_7_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER6_7_IRQHandler PROC
;;;166    
;;;167    void TIMER6_7_IRQHandler(void)
000000  4770              BX       lr
;;;168    {
;;;169        /*<Generated by EasyCodeCube begin>*/
;;;170        /*<Generated by EasyCodeCube end>*/
;;;171    }
;;;172    
                          ENDP


                          AREA ||i.TWI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  TWI0_IRQHandler PROC
;;;217    
;;;218    void TWI0_IRQHandler(void)
000000  4770              BX       lr
;;;219    {
;;;220        /*<Generated by EasyCodeCube begin>*/
;;;221        /*<Generated by EasyCodeCube end>*/
;;;222    }
;;;223    
                          ENDP


                          AREA ||i.TWI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  TWI1_IRQHandler PROC
;;;223    
;;;224    void TWI1_IRQHandler(void)
000000  4770              BX       lr
;;;225    {
;;;226        /*<Generated by EasyCodeCube begin>*/
;;;227        /*<Generated by EasyCodeCube end>*/
;;;228    }
;;;229    
                          ENDP


                          AREA ||i.UART0_2_4_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART0_2_4_IRQHandler PROC
;;;88     #if !defined (TK_USE_UART0_2_4)
;;;89     void UART0_2_4_IRQHandler(void)
000000  4770              BX       lr
;;;90     {
;;;91         /*<Generated by EasyCodeCube begin>*/
;;;92         /*<Generated by EasyCodeCube end>*/
;;;93     }
;;;94     #endif
                          ENDP


                          AREA ||i.UART0_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART0_2_IRQHandler PROC
;;;80     #if !defined (TK_USE_UART0_2)
;;;81     void UART0_2_IRQHandler(void)
000000  4770              BX       lr
;;;82     {
;;;83         /*<Generated by EasyCodeCube begin>*/
;;;84         /*<Generated by EasyCodeCube end>*/
;;;85     }
;;;86     #endif
                          ENDP


                          AREA ||i.UART1_3_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART1_3_5_IRQHandler PROC
;;;72     #if !defined (TK_USE_UART1_3_5)
;;;73     void UART1_3_5_IRQHandler(void)
000000  4770              BX       lr
;;;74     {
;;;75         /*<Generated by EasyCodeCube begin>*/
;;;76         /*<Generated by EasyCodeCube end>*/
;;;77     }
;;;78     #endif
                          ENDP


                          AREA ||i.UART1_3_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART1_3_IRQHandler PROC
;;;64     #if !defined (TK_USE_UART1_3)
;;;65     void UART1_3_IRQHandler(void)
000000  4770              BX       lr
;;;66     {
;;;67         /*<Generated by EasyCodeCube begin>*/
;;;68         /*<Generated by EasyCodeCube end>*/
;;;69     }
;;;70     #endif
                          ENDP


                          AREA ||i.UART1_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART1_IRQHandler PROC
;;;57     
;;;58     void UART1_IRQHandler(void)
000000  4770              BX       lr
;;;59     {
;;;60         /*<Generated by EasyCodeCube begin>*/
;;;61         /*<Generated by EasyCodeCube end>*/
;;;62     }
;;;63     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\User\\SC_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_SC_it_c_b1e5ca68____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___7_SC_it_c_b1e5ca68____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_SC_it_c_b1e5ca68____REVSH|
#line 478
|__asm___7_SC_it_c_b1e5ca68____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
