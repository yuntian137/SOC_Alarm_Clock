; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\output\sc_it.o --asm_dir=..\List\ --list_dir=..\List\ --depend=..\output\sc_it.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -I..\Buzz\Inc -I..\Drivers\TKDriver\C -I..\Mqtt\Inc -ID:\keil\ARM\PACK\Keil\SC32F1xxx_DFP\1.0.6\Device\SC32F10xx\FWLib\SC32_Lib\inc -D__MICROLIB -D__UVISION_VERSION=534 -DSC32F10xx -DSC32f10xx --omf_browse=..\output\sc_it.crf ..\User\SC_it.c]
                          THUMB

                          AREA ||i.ADC_IRQHandler||, CODE, READONLY, ALIGN=2

                  ADC_IRQHandler PROC
;;;261    
;;;262    void ADC_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;263    {
;;;264        /*<Generated by EasyCodeCube begin>*/
;;;265        /*<Generated by EasyCodeCube end>*/
;;;266    	ADC_ClearFlag(ADC, ADC_Flag_ADCIF);//Generated by EasyCodeCube, forbid editing!!!
000002  2101              MOVS     r1,#1
000004  4801              LDR      r0,|L1.12|
000006  f7fffffe          BL       ADC_ClearFlag
;;;267    }
00000a  bd10              POP      {r4,pc}
;;;268    
                          ENDP

                  |L1.12|
                          DCD      0x40022110

                          AREA ||i.BTM_IRQHandler||, CODE, READONLY, ALIGN=1

                  BTM_IRQHandler PROC
;;;104    #if !defined (TK_USE_BTM)
;;;105    void BTM_IRQHandler(void)
000000  4770              BX       lr
;;;106    {
;;;107        /*<Generated by EasyCodeCube begin>*/
;;;108        /*<Generated by EasyCodeCube end>*/
;;;109    }
;;;110    #endif
                          ENDP


                          AREA ||i.CAN_IRQHandler||, CODE, READONLY, ALIGN=1

                  CAN_IRQHandler PROC
;;;217    
;;;218    void CAN_IRQHandler(void)
000000  4770              BX       lr
;;;219    {
;;;220        /*<Generated by EasyCodeCube begin>*/
;;;221        /*<Generated by EasyCodeCube end>*/
;;;222    }
;;;223    
                          ENDP


                          AREA ||i.CMP0_1_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP0_1_2_IRQHandler PROC
;;;268    
;;;269    void CMP0_1_2_IRQHandler(void)
000000  4770              BX       lr
;;;270    {
;;;271        /*<Generated by EasyCodeCube begin>*/
;;;272        /*<Generated by EasyCodeCube end>*/
;;;273    }
;;;274    
                          ENDP


                          AREA ||i.CMP3_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP3_IRQHandler PROC
;;;274    
;;;275    void CMP3_IRQHandler(void)
000000  4770              BX       lr
;;;276    {
;;;277        /*<Generated by EasyCodeCube begin>*/
;;;278        /*<Generated by EasyCodeCube end>*/
;;;279    }
;;;280    
                          ENDP


                          AREA ||i.CMP_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP_IRQHandler PROC
;;;280    
;;;281    void CMP_IRQHandler(void)
000000  4770              BX       lr
;;;282    {
;;;283        /*<Generated by EasyCodeCube begin>*/
;;;284        /*<Generated by EasyCodeCube end>*/
;;;285    }
;;;286    
                          ENDP


                          AREA ||i.DMA0_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA0_IRQHandler PROC
;;;111    
;;;112    void DMA0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;113    {
;;;114        /*<Generated by EasyCodeCube begin>*/
;;;115        /*<UserCodeStart>*//*<SinOne-Tag><79>*/
;;;116        /*<UserCodeEnd>*//*<SinOne-Tag><79>*/
;;;117        /*<UserCodeStart>*//*<SinOne-Tag><455>*/
;;;118        TIM_TI_DMA_DMA0Handler();
000002  f7fffffe          BL       TIM_TI_DMA_DMA0Handler
;;;119        /*<UserCodeEnd>*//*<SinOne-Tag><455>*/
;;;120        /*<UserCodeStart>*//*<SinOne-Tag><483>*/
;;;121        //UART_Communication_DMA_DAM0Handler();
;;;122        /*<UserCodeEnd>*//*<SinOne-Tag><483>*/
;;;123        /*<Generated by EasyCodeCube end>*/
;;;124    	DMA_ClearFlag(DMA0, DMA_FLAG_GIF|DMA_FLAG_TCIF|DMA_FLAG_HTIF|DMA_FLAG_TEIF);//Generated by EasyCodeCube, forbid editing!!!
000006  210f              MOVS     r1,#0xf
000008  4801              LDR      r0,|L7.16|
00000a  f7fffffe          BL       DMA_ClearFlag
;;;125    }
00000e  bd10              POP      {r4,pc}
;;;126    
                          ENDP

                  |L7.16|
                          DCD      0x40010800

                          AREA ||i.DMA1_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA1_IRQHandler PROC
;;;126    
;;;127    void DMA1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;128    {
;;;129        /*<Generated by EasyCodeCube begin>*/
;;;130        /*<UserCodeStart>*//*<SinOne-Tag><487>*/
;;;131        //UART_Communication_DMA_DAM1Handler();
;;;132        /*<UserCodeEnd>*//*<SinOne-Tag><487>*/
;;;133        /*<Generated by EasyCodeCube end>*/
;;;134    	DMA_ClearFlag(DMA1, DMA_FLAG_GIF|DMA_FLAG_TCIF|DMA_FLAG_HTIF|DMA_FLAG_TEIF);//Generated by EasyCodeCube, forbid editing!!!
000002  210f              MOVS     r1,#0xf
000004  4801              LDR      r0,|L8.12|
000006  f7fffffe          BL       DMA_ClearFlag
;;;135    }
00000a  bd10              POP      {r4,pc}
;;;136    
                          ENDP

                  |L8.12|
                          DCD      0x40010840

                          AREA ||i.DMA2_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA2_IRQHandler PROC
;;;137    
;;;138    void DMA2_IRQHandler(void)
000000  4770              BX       lr
;;;139    {
;;;140        /*<Generated by EasyCodeCube begin>*/
;;;141        /*<Generated by EasyCodeCube end>*/
;;;142    }
;;;143    
                          ENDP


                          AREA ||i.DMA3_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA3_IRQHandler PROC
;;;143    
;;;144    void DMA3_IRQHandler(void)
000000  4770              BX       lr
;;;145    {
;;;146        /*<Generated by EasyCodeCube begin>*/
;;;147        /*<Generated by EasyCodeCube end>*/
;;;148    }
;;;149    
                          ENDP


                          AREA ||i.EPWM_IRQHandler||, CODE, READONLY, ALIGN=1

                  EPWM_IRQHandler PROC
;;;223    
;;;224    void EPWM_IRQHandler(void)
000000  4770              BX       lr
;;;225    {
;;;226        /*<Generated by EasyCodeCube begin>*/
;;;227        /*<Generated by EasyCodeCube end>*/
;;;228    }
;;;229    
                          ENDP


                          AREA ||i.INT0_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT0_IRQHandler PROC
;;;26     
;;;27     void INT0_IRQHandler(void)
000000  4770              BX       lr
;;;28     {
;;;29         /*<Generated by EasyCodeCube begin>*/
;;;30         /*<Generated by EasyCodeCube end>*/
;;;31     }
;;;32     
                          ENDP


                          AREA ||i.INT12_15_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT12_15_IRQHandler PROC
;;;44     
;;;45     void INT12_15_IRQHandler(void)
000000  4770              BX       lr
;;;46     {
;;;47         /*<Generated by EasyCodeCube begin>*/
;;;48         /*<Generated by EasyCodeCube end>*/
;;;49     }
;;;50     
                          ENDP


                          AREA ||i.INT1_7_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT1_7_IRQHandler PROC
;;;32     
;;;33     void INT1_7_IRQHandler(void)
000000  4770              BX       lr
;;;34     {
;;;35         /*<Generated by EasyCodeCube begin>*/
;;;36         /*<Generated by EasyCodeCube end>*/
;;;37     }
;;;38     
                          ENDP


                          AREA ||i.INT8_11_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT8_11_IRQHandler PROC
;;;38     
;;;39     void INT8_11_IRQHandler(void)
000000  4770              BX       lr
;;;40     {
;;;41         /*<Generated by EasyCodeCube begin>*/
;;;42         /*<Generated by EasyCodeCube end>*/
;;;43     }
;;;44     
                          ENDP


                          AREA ||i.LEDPWM_IRQHandler||, CODE, READONLY, ALIGN=1

                  LEDPWM_IRQHandler PROC
;;;255    
;;;256    void LEDPWM_IRQHandler(void)
000000  4770              BX       lr
;;;257    {
;;;258        /*<Generated by EasyCodeCube begin>*/
;;;259        /*<Generated by EasyCodeCube end>*/
;;;260    }
;;;261    
                          ENDP


                          AREA ||i.OP1_OP2_IRQHandler||, CODE, READONLY, ALIGN=1

                  OP1_OP2_IRQHandler PROC
;;;205    
;;;206    void OP1_OP2_IRQHandler(void)
000000  4770              BX       lr
;;;207    {
;;;208        /*<Generated by EasyCodeCube begin>*/
;;;209        /*<Generated by EasyCodeCube end>*/
;;;210    }
;;;211    
                          ENDP


                          AREA ||i.PCAP_IRQHandler||, CODE, READONLY, ALIGN=1

                  PCAP_IRQHandler PROC
;;;229    
;;;230    void PCAP_IRQHandler(void)
000000  4770              BX       lr
;;;231    {
;;;232        /*<Generated by EasyCodeCube begin>*/
;;;233        /*<Generated by EasyCodeCube end>*/
;;;234    }
;;;235    
                          ENDP


                          AREA ||i.PWM0_IRQHandler||, CODE, READONLY, ALIGN=2

                  PWM0_IRQHandler PROC
;;;248    
;;;249    void PWM0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;250    {
;;;251        /*<Generated by EasyCodeCube begin>*/
;;;252        /*<Generated by EasyCodeCube end>*/
;;;253    	PWM_ClearFlag(PWM0, PWM_Flag_PWMIF|PWM_Flag_FLTSTA);//Generated by EasyCodeCube, forbid editing!!!
000002  2103              MOVS     r1,#3
000004  4801              LDR      r0,|L19.12|
000006  f7fffffe          BL       PWM_ClearFlag
;;;254    }
00000a  bd10              POP      {r4,pc}
;;;255    
                          ENDP

                  |L19.12|
                          DCD      0x40020200

                          AREA ||i.QEP0_IRQHandler||, CODE, READONLY, ALIGN=1

                  QEP0_IRQHandler PROC
;;;193    
;;;194    void QEP0_IRQHandler(void)
000000  4770              BX       lr
;;;195    {
;;;196        /*<Generated by EasyCodeCube begin>*/
;;;197        /*<Generated by EasyCodeCube end>*/
;;;198    }
;;;199    
                          ENDP


                          AREA ||i.QEP1_IRQHandler||, CODE, READONLY, ALIGN=1

                  QEP1_IRQHandler PROC
;;;199    
;;;200    void QEP1_IRQHandler(void)
000000  4770              BX       lr
;;;201    {
;;;202        /*<Generated by EasyCodeCube begin>*/
;;;203        /*<Generated by EasyCodeCube end>*/
;;;204    }
;;;205    
                          ENDP


                          AREA ||i.RCC_IRQHandler||, CODE, READONLY, ALIGN=1

                  RCC_IRQHandler PROC
;;;50     
;;;51     void RCC_IRQHandler(void)
000000  4770              BX       lr
;;;52     {
;;;53         /*<Generated by EasyCodeCube begin>*/
;;;54         /*<Generated by EasyCodeCube end>*/
;;;55     }
;;;56     
                          ENDP


                          AREA ||i.SPI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI0_IRQHandler PROC
;;;293    
;;;294    void SPI0_IRQHandler(void)
000000  4770              BX       lr
;;;295    {
;;;296        /*<Generated by EasyCodeCube begin>*/
;;;297        /*<Generated by EasyCodeCube end>*/
;;;298    }
;;;299    
                          ENDP


                          AREA ||i.SPI1_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_2_IRQHandler PROC
;;;305    
;;;306    void SPI1_2_IRQHandler(void)
000000  4770              BX       lr
;;;307    {
;;;308        /*<Generated by EasyCodeCube begin>*/
;;;309        /*<Generated by EasyCodeCube end>*/
;;;310    }
                          ENDP


                          AREA ||i.SPI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_IRQHandler PROC
;;;299    
;;;300    void SPI1_IRQHandler(void)
000000  4770              BX       lr
;;;301    {
;;;302        /*<Generated by EasyCodeCube begin>*/
;;;303        /*<Generated by EasyCodeCube end>*/
;;;304    }
;;;305    
                          ENDP


                          AREA ||i.SPI1_TWI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_TWI1_IRQHandler PROC
;;;211    
;;;212    void SPI1_TWI1_IRQHandler(void)
000000  4770              BX       lr
;;;213    {
;;;214        /*<Generated by EasyCodeCube begin>*/
;;;215        /*<Generated by EasyCodeCube end>*/
;;;216    }
;;;217    
                          ENDP


                          AREA ||i.SysTick_IRQHandler||, CODE, READONLY, ALIGN=1

                  SysTick_IRQHandler PROC
;;;287    
;;;288    void SysTick_IRQHandler(void)
000000  4770              BX       lr
;;;289    {
;;;290        /*<Generated by EasyCodeCube begin>*/
;;;291        /*<Generated by EasyCodeCube end>*/
;;;292    }
;;;293    
                          ENDP


                          AREA ||i.TIMER0_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER0_IRQHandler PROC
;;;150    
;;;151    void TIMER0_IRQHandler(void)
000000  4770              BX       lr
;;;152    {
;;;153        /*<Generated by EasyCodeCube begin>*/
;;;154        /*<Generated by EasyCodeCube end>*/
;;;155    }
;;;156    
                          ENDP


                          AREA ||i.TIMER1_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER1_IRQHandler PROC
;;;156    
;;;157    void TIMER1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;158    {
;;;159        /*<Generated by EasyCodeCube begin>*/
;;;160        /*<Generated by EasyCodeCube end>*/
;;;161    	TIM_ClearFlag(TIM1, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000002  2107              MOVS     r1,#7
000004  4801              LDR      r0,|L29.12|
000006  f7fffffe          BL       TIM_ClearFlag
;;;162    }
00000a  bd10              POP      {r4,pc}
;;;163    
                          ENDP

                  |L29.12|
                          DCD      0x40020140

                          AREA ||i.TIMER2_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER2_IRQHandler PROC
;;;163    
;;;164    void TIMER2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;165    {
;;;166        /*<Generated by EasyCodeCube begin>*/
;;;167        /*<Generated by EasyCodeCube end>*/
;;;168    	TIM_ClearFlag(TIM2, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000002  2107              MOVS     r1,#7
000004  4801              LDR      r0,|L30.12|
000006  f7fffffe          BL       TIM_ClearFlag
;;;169    }
00000a  bd10              POP      {r4,pc}
;;;170    
                          ENDP

                  |L30.12|
                          DCD      0x40020180

                          AREA ||i.TIMER3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER3_IRQHandler PROC
;;;170    
;;;171    void TIMER3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;172    {
;;;173        /*<Generated by EasyCodeCube begin>*/
;;;174        TIM3_IRQHandler();
000002  f7fffffe          BL       TIM3_IRQHandler
;;;175        /*<Generated by EasyCodeCube end>*/
;;;176    	TIM_ClearFlag(TIM3, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000006  2107              MOVS     r1,#7
000008  4801              LDR      r0,|L31.16|
00000a  f7fffffe          BL       TIM_ClearFlag
;;;177    }
00000e  bd10              POP      {r4,pc}
;;;178    
                          ENDP

                  |L31.16|
                          DCD      0x400201c0

                          AREA ||i.TIMER4_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER4_5_IRQHandler PROC
;;;179    
;;;180    void TIMER4_5_IRQHandler(void)
000000  4770              BX       lr
;;;181    {
;;;182        /*<Generated by EasyCodeCube begin>*/
;;;183        /*<Generated by EasyCodeCube end>*/
;;;184    }
;;;185    
                          ENDP


                          AREA ||i.TIMER6_7_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER6_7_IRQHandler PROC
;;;185    
;;;186    void TIMER6_7_IRQHandler(void)
000000  4770              BX       lr
;;;187    {
;;;188        /*<Generated by EasyCodeCube begin>*/
;;;189        /*<Generated by EasyCodeCube end>*/
;;;190    }
;;;191    
                          ENDP


                          AREA ||i.TWI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  TWI0_IRQHandler PROC
;;;236    
;;;237    void TWI0_IRQHandler(void)
000000  4770              BX       lr
;;;238    {
;;;239        /*<Generated by EasyCodeCube begin>*/
;;;240        /*<Generated by EasyCodeCube end>*/
;;;241    }
;;;242    
                          ENDP


                          AREA ||i.TWI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  TWI1_IRQHandler PROC
;;;242    
;;;243    void TWI1_IRQHandler(void)
000000  4770              BX       lr
;;;244    {
;;;245        /*<Generated by EasyCodeCube begin>*/
;;;246        /*<Generated by EasyCodeCube end>*/
;;;247    }
;;;248    
                          ENDP


                          AREA ||i.UART0_2_4_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART0_2_4_IRQHandler PROC
;;;95     #if !defined (TK_USE_UART0_2_4)
;;;96     void UART0_2_4_IRQHandler(void)
000000  4770              BX       lr
;;;97     {
;;;98         /*<Generated by EasyCodeCube begin>*/
;;;99         /*<Generated by EasyCodeCube end>*/
;;;100    }
;;;101    #endif
                          ENDP


                          AREA ||i.UART0_2_IRQHandler||, CODE, READONLY, ALIGN=2

                  UART0_2_IRQHandler PROC
;;;83     #if !defined (TK_USE_UART0_2)
;;;84     void UART0_2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;85     {
;;;86         /*<Generated by EasyCodeCube begin>*/
;;;87         /*<UserCodeStart>*//*<SinOne-Tag><471>*/
;;;88         UART2_Handler();
000002  f7fffffe          BL       UART2_Handler
;;;89         /*<UserCodeEnd>*//*<SinOne-Tag><471>*/
;;;90         /*<Generated by EasyCodeCube end>*/
;;;91     	UART_ClearFlag(UART2,UART_Flag_RX | UART_Flag_TX);//Generated by EasyCodeCube, forbid editing!!!
000006  2103              MOVS     r1,#3
000008  4801              LDR      r0,|L37.16|
00000a  f7fffffe          BL       UART_ClearFlag
;;;92     }
00000e  bd10              POP      {r4,pc}
;;;93     #endif
                          ENDP

                  |L37.16|
                          DCD      0x40021020

                          AREA ||i.UART1_3_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART1_3_5_IRQHandler PROC
;;;75     #if !defined (TK_USE_UART1_3_5)
;;;76     void UART1_3_5_IRQHandler(void)
000000  4770              BX       lr
;;;77     {
;;;78         /*<Generated by EasyCodeCube begin>*/
;;;79         /*<Generated by EasyCodeCube end>*/
;;;80     }
;;;81     #endif
                          ENDP


                          AREA ||i.UART1_3_IRQHandler||, CODE, READONLY, ALIGN=2

                  UART1_3_IRQHandler PROC
;;;64     #if !defined (TK_USE_UART1_3)
;;;65     void UART1_3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;66     {
;;;67         /*<Generated by EasyCodeCube begin>*/
;;;68         UART1_Handler();//WIFI
000002  f7fffffe          BL       UART1_Handler
;;;69         //UART1_IRQHandler_DMA();//测试DMA
;;;70         /*<Generated by EasyCodeCube end>*/
;;;71     	UART_ClearFlag(UART1,UART_Flag_RX | UART_Flag_TX);//Generated by EasyCodeCube, forbid editing!!!
000006  2103              MOVS     r1,#3
000008  4801              LDR      r0,|L39.16|
00000a  f7fffffe          BL       UART_ClearFlag
;;;72     }
00000e  bd10              POP      {r4,pc}
;;;73     #endif
                          ENDP

                  |L39.16|
                          DCD      0x40020080

                          AREA ||i.UART1_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART1_IRQHandler PROC
;;;57     
;;;58     void UART1_IRQHandler(void)
000000  4770              BX       lr
;;;59     {
;;;60         /*<Generated by EasyCodeCube begin>*/
;;;61         /*<Generated by EasyCodeCube end>*/
;;;62     }
;;;63     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\User\\SC_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_SC_it_c_b1e5ca68____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___7_SC_it_c_b1e5ca68____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_SC_it_c_b1e5ca68____REVSH|
#line 478
|__asm___7_SC_it_c_b1e5ca68____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
