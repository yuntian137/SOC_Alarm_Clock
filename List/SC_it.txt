; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\output\sc_it.o --asm_dir=..\List\ --list_dir=..\List\ --depend=..\output\sc_it.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -I..\Buzz\Inc -I..\Drivers\TKDriver\C -I..\Mqtt\Inc -ID:\keil\ARM\PACK\Keil\SC32F1xxx_DFP\1.0.6\Device\SC32F10xx\FWLib\SC32_Lib\inc -D__MICROLIB -D__UVISION_VERSION=534 -DSC32F10xx -DSC32f10xx --omf_browse=..\output\sc_it.crf ..\User\SC_it.c]
                          THUMB

                          AREA ||i.ADC_IRQHandler||, CODE, READONLY, ALIGN=2

                  ADC_IRQHandler PROC
;;;256    
;;;257    void ADC_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;258    {
;;;259        /*<Generated by EasyCodeCube begin>*/
;;;260        /*<Generated by EasyCodeCube end>*/
;;;261    	ADC_ClearFlag(ADC, ADC_Flag_ADCIF);//Generated by EasyCodeCube, forbid editing!!!
000002  2101              MOVS     r1,#1
000004  4801              LDR      r0,|L1.12|
000006  f7fffffe          BL       ADC_ClearFlag
;;;262    }
00000a  bd10              POP      {r4,pc}
;;;263    
                          ENDP

                  |L1.12|
                          DCD      0x40022110

                          AREA ||i.BTM_IRQHandler||, CODE, READONLY, ALIGN=1

                  BTM_IRQHandler PROC
;;;103    #if !defined (TK_USE_BTM)
;;;104    void BTM_IRQHandler(void)
000000  4770              BX       lr
;;;105    {
;;;106        /*<Generated by EasyCodeCube begin>*/
;;;107        /*<Generated by EasyCodeCube end>*/
;;;108    }
;;;109    #endif
                          ENDP


                          AREA ||i.CAN_IRQHandler||, CODE, READONLY, ALIGN=1

                  CAN_IRQHandler PROC
;;;212    
;;;213    void CAN_IRQHandler(void)
000000  4770              BX       lr
;;;214    {
;;;215        /*<Generated by EasyCodeCube begin>*/
;;;216        /*<Generated by EasyCodeCube end>*/
;;;217    }
;;;218    
                          ENDP


                          AREA ||i.CMP0_1_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP0_1_2_IRQHandler PROC
;;;263    
;;;264    void CMP0_1_2_IRQHandler(void)
000000  4770              BX       lr
;;;265    {
;;;266        /*<Generated by EasyCodeCube begin>*/
;;;267        /*<Generated by EasyCodeCube end>*/
;;;268    }
;;;269    
                          ENDP


                          AREA ||i.CMP3_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP3_IRQHandler PROC
;;;269    
;;;270    void CMP3_IRQHandler(void)
000000  4770              BX       lr
;;;271    {
;;;272        /*<Generated by EasyCodeCube begin>*/
;;;273        /*<Generated by EasyCodeCube end>*/
;;;274    }
;;;275    
                          ENDP


                          AREA ||i.CMP_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP_IRQHandler PROC
;;;275    
;;;276    void CMP_IRQHandler(void)
000000  4770              BX       lr
;;;277    {
;;;278        /*<Generated by EasyCodeCube begin>*/
;;;279        /*<Generated by EasyCodeCube end>*/
;;;280    }
;;;281    
                          ENDP


                          AREA ||i.DMA0_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA0_IRQHandler PROC
;;;110    
;;;111    void DMA0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;112    {
;;;113        /*<Generated by EasyCodeCube begin>*/
;;;114        /*<UserCodeStart>*//*<SinOne-Tag><79>*/
;;;115        /*<UserCodeEnd>*//*<SinOne-Tag><79>*/
;;;116        /*<UserCodeStart>*//*<SinOne-Tag><483>*/
;;;117        UART_Communication_DMA_DAM0Handler();
000002  f7fffffe          BL       UART_Communication_DMA_DAM0Handler
;;;118        /*<UserCodeEnd>*//*<SinOne-Tag><483>*/
;;;119        /*<Generated by EasyCodeCube end>*/
;;;120    	DMA_ClearFlag(DMA0, DMA_FLAG_GIF|DMA_FLAG_TCIF|DMA_FLAG_HTIF|DMA_FLAG_TEIF);//Generated by EasyCodeCube, forbid editing!!!
000006  210f              MOVS     r1,#0xf
000008  4801              LDR      r0,|L7.16|
00000a  f7fffffe          BL       DMA_ClearFlag
;;;121    }
00000e  bd10              POP      {r4,pc}
;;;122    
                          ENDP

                  |L7.16|
                          DCD      0x40010800

                          AREA ||i.DMA1_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA1_IRQHandler PROC
;;;122    
;;;123    void DMA1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;124    {
;;;125        /*<Generated by EasyCodeCube begin>*/
;;;126        /*<UserCodeStart>*//*<SinOne-Tag><487>*/
;;;127        UART_Communication_DMA_DAM1Handler();
000002  f7fffffe          BL       UART_Communication_DMA_DAM1Handler
;;;128        /*<UserCodeEnd>*//*<SinOne-Tag><487>*/
;;;129        /*<Generated by EasyCodeCube end>*/
;;;130    	DMA_ClearFlag(DMA1, DMA_FLAG_GIF|DMA_FLAG_TCIF|DMA_FLAG_HTIF|DMA_FLAG_TEIF);//Generated by EasyCodeCube, forbid editing!!!
000006  210f              MOVS     r1,#0xf
000008  4801              LDR      r0,|L8.16|
00000a  f7fffffe          BL       DMA_ClearFlag
;;;131    }
00000e  bd10              POP      {r4,pc}
;;;132    
                          ENDP

                  |L8.16|
                          DCD      0x40010840

                          AREA ||i.DMA2_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA2_IRQHandler PROC
;;;133    
;;;134    void DMA2_IRQHandler(void)
000000  4770              BX       lr
;;;135    {
;;;136        /*<Generated by EasyCodeCube begin>*/
;;;137        /*<Generated by EasyCodeCube end>*/
;;;138    }
;;;139    
                          ENDP


                          AREA ||i.DMA3_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA3_IRQHandler PROC
;;;139    
;;;140    void DMA3_IRQHandler(void)
000000  4770              BX       lr
;;;141    {
;;;142        /*<Generated by EasyCodeCube begin>*/
;;;143        /*<Generated by EasyCodeCube end>*/
;;;144    }
;;;145    
                          ENDP


                          AREA ||i.EPWM_IRQHandler||, CODE, READONLY, ALIGN=1

                  EPWM_IRQHandler PROC
;;;218    
;;;219    void EPWM_IRQHandler(void)
000000  4770              BX       lr
;;;220    {
;;;221        /*<Generated by EasyCodeCube begin>*/
;;;222        /*<Generated by EasyCodeCube end>*/
;;;223    }
;;;224    
                          ENDP


                          AREA ||i.INT0_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT0_IRQHandler PROC
;;;26     
;;;27     void INT0_IRQHandler(void)
000000  4770              BX       lr
;;;28     {
;;;29         /*<Generated by EasyCodeCube begin>*/
;;;30         /*<Generated by EasyCodeCube end>*/
;;;31     }
;;;32     
                          ENDP


                          AREA ||i.INT12_15_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT12_15_IRQHandler PROC
;;;44     
;;;45     void INT12_15_IRQHandler(void)
000000  4770              BX       lr
;;;46     {
;;;47         /*<Generated by EasyCodeCube begin>*/
;;;48         /*<Generated by EasyCodeCube end>*/
;;;49     }
;;;50     
                          ENDP


                          AREA ||i.INT1_7_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT1_7_IRQHandler PROC
;;;32     
;;;33     void INT1_7_IRQHandler(void)
000000  4770              BX       lr
;;;34     {
;;;35         /*<Generated by EasyCodeCube begin>*/
;;;36         /*<Generated by EasyCodeCube end>*/
;;;37     }
;;;38     
                          ENDP


                          AREA ||i.INT8_11_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT8_11_IRQHandler PROC
;;;38     
;;;39     void INT8_11_IRQHandler(void)
000000  4770              BX       lr
;;;40     {
;;;41         /*<Generated by EasyCodeCube begin>*/
;;;42         /*<Generated by EasyCodeCube end>*/
;;;43     }
;;;44     
                          ENDP


                          AREA ||i.LEDPWM_IRQHandler||, CODE, READONLY, ALIGN=1

                  LEDPWM_IRQHandler PROC
;;;250    
;;;251    void LEDPWM_IRQHandler(void)
000000  4770              BX       lr
;;;252    {
;;;253        /*<Generated by EasyCodeCube begin>*/
;;;254        /*<Generated by EasyCodeCube end>*/
;;;255    }
;;;256    
                          ENDP


                          AREA ||i.OP1_OP2_IRQHandler||, CODE, READONLY, ALIGN=1

                  OP1_OP2_IRQHandler PROC
;;;200    
;;;201    void OP1_OP2_IRQHandler(void)
000000  4770              BX       lr
;;;202    {
;;;203        /*<Generated by EasyCodeCube begin>*/
;;;204        /*<Generated by EasyCodeCube end>*/
;;;205    }
;;;206    
                          ENDP


                          AREA ||i.PCAP_IRQHandler||, CODE, READONLY, ALIGN=1

                  PCAP_IRQHandler PROC
;;;224    
;;;225    void PCAP_IRQHandler(void)
000000  4770              BX       lr
;;;226    {
;;;227        /*<Generated by EasyCodeCube begin>*/
;;;228        /*<Generated by EasyCodeCube end>*/
;;;229    }
;;;230    
                          ENDP


                          AREA ||i.PWM0_IRQHandler||, CODE, READONLY, ALIGN=2

                  PWM0_IRQHandler PROC
;;;243    
;;;244    void PWM0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;245    {
;;;246        /*<Generated by EasyCodeCube begin>*/
;;;247        /*<Generated by EasyCodeCube end>*/
;;;248    	PWM_ClearFlag(PWM0, PWM_Flag_PWMIF|PWM_Flag_FLTSTA);//Generated by EasyCodeCube, forbid editing!!!
000002  2103              MOVS     r1,#3
000004  4801              LDR      r0,|L19.12|
000006  f7fffffe          BL       PWM_ClearFlag
;;;249    }
00000a  bd10              POP      {r4,pc}
;;;250    
                          ENDP

                  |L19.12|
                          DCD      0x40020200

                          AREA ||i.QEP0_IRQHandler||, CODE, READONLY, ALIGN=1

                  QEP0_IRQHandler PROC
;;;188    
;;;189    void QEP0_IRQHandler(void)
000000  4770              BX       lr
;;;190    {
;;;191        /*<Generated by EasyCodeCube begin>*/
;;;192        /*<Generated by EasyCodeCube end>*/
;;;193    }
;;;194    
                          ENDP


                          AREA ||i.QEP1_IRQHandler||, CODE, READONLY, ALIGN=1

                  QEP1_IRQHandler PROC
;;;194    
;;;195    void QEP1_IRQHandler(void)
000000  4770              BX       lr
;;;196    {
;;;197        /*<Generated by EasyCodeCube begin>*/
;;;198        /*<Generated by EasyCodeCube end>*/
;;;199    }
;;;200    
                          ENDP


                          AREA ||i.RCC_IRQHandler||, CODE, READONLY, ALIGN=1

                  RCC_IRQHandler PROC
;;;50     
;;;51     void RCC_IRQHandler(void)
000000  4770              BX       lr
;;;52     {
;;;53         /*<Generated by EasyCodeCube begin>*/
;;;54         /*<Generated by EasyCodeCube end>*/
;;;55     }
;;;56     
                          ENDP


                          AREA ||i.SPI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI0_IRQHandler PROC
;;;288    
;;;289    void SPI0_IRQHandler(void)
000000  4770              BX       lr
;;;290    {
;;;291        /*<Generated by EasyCodeCube begin>*/
;;;292        /*<Generated by EasyCodeCube end>*/
;;;293    }
;;;294    
                          ENDP


                          AREA ||i.SPI1_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_2_IRQHandler PROC
;;;300    
;;;301    void SPI1_2_IRQHandler(void)
000000  4770              BX       lr
;;;302    {
;;;303        /*<Generated by EasyCodeCube begin>*/
;;;304        /*<Generated by EasyCodeCube end>*/
;;;305    }
                          ENDP


                          AREA ||i.SPI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_IRQHandler PROC
;;;294    
;;;295    void SPI1_IRQHandler(void)
000000  4770              BX       lr
;;;296    {
;;;297        /*<Generated by EasyCodeCube begin>*/
;;;298        /*<Generated by EasyCodeCube end>*/
;;;299    }
;;;300    
                          ENDP


                          AREA ||i.SPI1_TWI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_TWI1_IRQHandler PROC
;;;206    
;;;207    void SPI1_TWI1_IRQHandler(void)
000000  4770              BX       lr
;;;208    {
;;;209        /*<Generated by EasyCodeCube begin>*/
;;;210        /*<Generated by EasyCodeCube end>*/
;;;211    }
;;;212    
                          ENDP


                          AREA ||i.SysTick_IRQHandler||, CODE, READONLY, ALIGN=1

                  SysTick_IRQHandler PROC
;;;282    
;;;283    void SysTick_IRQHandler(void)
000000  4770              BX       lr
;;;284    {
;;;285        /*<Generated by EasyCodeCube begin>*/
;;;286        /*<Generated by EasyCodeCube end>*/
;;;287    }
;;;288    
                          ENDP


                          AREA ||i.TIMER0_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER0_IRQHandler PROC
;;;146    
;;;147    void TIMER0_IRQHandler(void)
000000  4770              BX       lr
;;;148    {
;;;149        /*<Generated by EasyCodeCube begin>*/
;;;150        /*<Generated by EasyCodeCube end>*/
;;;151    }
;;;152    
                          ENDP


                          AREA ||i.TIMER1_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER1_IRQHandler PROC
;;;152    
;;;153    void TIMER1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;154    {
;;;155        /*<Generated by EasyCodeCube begin>*/
;;;156        /*<Generated by EasyCodeCube end>*/
;;;157    	TIM_ClearFlag(TIM1, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000002  2107              MOVS     r1,#7
000004  4801              LDR      r0,|L29.12|
000006  f7fffffe          BL       TIM_ClearFlag
;;;158    }
00000a  bd10              POP      {r4,pc}
;;;159    
                          ENDP

                  |L29.12|
                          DCD      0x40020140

                          AREA ||i.TIMER2_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER2_IRQHandler PROC
;;;159    
;;;160    void TIMER2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;161    {
;;;162        /*<Generated by EasyCodeCube begin>*/
;;;163        /*<Generated by EasyCodeCube end>*/
;;;164    	TIM_ClearFlag(TIM2, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000002  2107              MOVS     r1,#7
000004  4801              LDR      r0,|L30.12|
000006  f7fffffe          BL       TIM_ClearFlag
;;;165    }
00000a  bd10              POP      {r4,pc}
;;;166    
                          ENDP

                  |L30.12|
                          DCD      0x40020180

                          AREA ||i.TIMER3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER3_IRQHandler PROC
;;;166    
;;;167    void TIMER3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;168    {
;;;169        /*<Generated by EasyCodeCube begin>*/
;;;170        /*<Generated by EasyCodeCube end>*/
;;;171    	TIM_ClearFlag(TIM3, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000002  2107              MOVS     r1,#7
000004  4801              LDR      r0,|L31.12|
000006  f7fffffe          BL       TIM_ClearFlag
;;;172    }
00000a  bd10              POP      {r4,pc}
;;;173    
                          ENDP

                  |L31.12|
                          DCD      0x400201c0

                          AREA ||i.TIMER4_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER4_5_IRQHandler PROC
;;;174    
;;;175    void TIMER4_5_IRQHandler(void)
000000  4770              BX       lr
;;;176    {
;;;177        /*<Generated by EasyCodeCube begin>*/
;;;178        /*<Generated by EasyCodeCube end>*/
;;;179    }
;;;180    
                          ENDP


                          AREA ||i.TIMER6_7_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER6_7_IRQHandler PROC
;;;180    
;;;181    void TIMER6_7_IRQHandler(void)
000000  4770              BX       lr
;;;182    {
;;;183        /*<Generated by EasyCodeCube begin>*/
;;;184        /*<Generated by EasyCodeCube end>*/
;;;185    }
;;;186    
                          ENDP


                          AREA ||i.TWI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  TWI0_IRQHandler PROC
;;;231    
;;;232    void TWI0_IRQHandler(void)
000000  4770              BX       lr
;;;233    {
;;;234        /*<Generated by EasyCodeCube begin>*/
;;;235        /*<Generated by EasyCodeCube end>*/
;;;236    }
;;;237    
                          ENDP


                          AREA ||i.TWI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  TWI1_IRQHandler PROC
;;;237    
;;;238    void TWI1_IRQHandler(void)
000000  4770              BX       lr
;;;239    {
;;;240        /*<Generated by EasyCodeCube begin>*/
;;;241        /*<Generated by EasyCodeCube end>*/
;;;242    }
;;;243    
                          ENDP


                          AREA ||i.UART0_2_4_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART0_2_4_IRQHandler PROC
;;;94     #if !defined (TK_USE_UART0_2_4)
;;;95     void UART0_2_4_IRQHandler(void)
000000  4770              BX       lr
;;;96     {
;;;97         /*<Generated by EasyCodeCube begin>*/
;;;98         /*<Generated by EasyCodeCube end>*/
;;;99     }
;;;100    #endif
                          ENDP


                          AREA ||i.UART0_2_IRQHandler||, CODE, READONLY, ALIGN=2

                  UART0_2_IRQHandler PROC
;;;82     #if !defined (TK_USE_UART0_2)
;;;83     void UART0_2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;84     {
;;;85         /*<Generated by EasyCodeCube begin>*/
;;;86         /*<UserCodeStart>*//*<SinOne-Tag><471>*/
;;;87         UART2_Handler();
000002  f7fffffe          BL       UART2_Handler
;;;88         /*<UserCodeEnd>*//*<SinOne-Tag><471>*/
;;;89         /*<Generated by EasyCodeCube end>*/
;;;90     	UART_ClearFlag(UART2,UART_Flag_RX | UART_Flag_TX);//Generated by EasyCodeCube, forbid editing!!!
000006  2103              MOVS     r1,#3
000008  4801              LDR      r0,|L37.16|
00000a  f7fffffe          BL       UART_ClearFlag
;;;91     }
00000e  bd10              POP      {r4,pc}
;;;92     #endif
                          ENDP

                  |L37.16|
                          DCD      0x40021020

                          AREA ||i.UART1_3_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART1_3_5_IRQHandler PROC
;;;74     #if !defined (TK_USE_UART1_3_5)
;;;75     void UART1_3_5_IRQHandler(void)
000000  4770              BX       lr
;;;76     {
;;;77         /*<Generated by EasyCodeCube begin>*/
;;;78         /*<Generated by EasyCodeCube end>*/
;;;79     }
;;;80     #endif
                          ENDP


                          AREA ||i.UART1_3_IRQHandler||, CODE, READONLY, ALIGN=2

                  UART1_3_IRQHandler PROC
;;;64     #if !defined (TK_USE_UART1_3)
;;;65     void UART1_3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;66     {
;;;67         /*<Generated by EasyCodeCube begin>*/
;;;68         UART1_Handler();
000002  f7fffffe          BL       UART1_Handler
;;;69         /*<Generated by EasyCodeCube end>*/
;;;70     	UART_ClearFlag(UART1,UART_Flag_RX | UART_Flag_TX);//Generated by EasyCodeCube, forbid editing!!!
000006  2103              MOVS     r1,#3
000008  4801              LDR      r0,|L39.16|
00000a  f7fffffe          BL       UART_ClearFlag
;;;71     }
00000e  bd10              POP      {r4,pc}
;;;72     #endif
                          ENDP

                  |L39.16|
                          DCD      0x40020080

                          AREA ||i.UART1_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART1_IRQHandler PROC
;;;57     
;;;58     void UART1_IRQHandler(void)
000000  4770              BX       lr
;;;59     {
;;;60         /*<Generated by EasyCodeCube begin>*/
;;;61         /*<Generated by EasyCodeCube end>*/
;;;62     }
;;;63     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\User\\SC_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_SC_it_c_b1e5ca68____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___7_SC_it_c_b1e5ca68____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_SC_it_c_b1e5ca68____REVSH|
#line 478
|__asm___7_SC_it_c_b1e5ca68____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
