; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\output\sc_it.o --asm_dir=..\List\ --list_dir=..\List\ --depend=..\output\sc_it.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -I..\Buzz\Inc -I..\Drivers\TKDriver\C -ID:\keil\ARM\PACK\Keil\SC32F1xxx_DFP\1.0.6\Device\SC32F10xx\FWLib\SC32_Lib\inc -D__MICROLIB -D__UVISION_VERSION=534 -DSC32F10xx -DSC32f10xx --omf_browse=..\output\sc_it.crf ..\User\SC_it.c]
                          THUMB

                          AREA ||i.ADC_IRQHandler||, CODE, READONLY, ALIGN=2

                  ADC_IRQHandler PROC
;;;252    
;;;253    void ADC_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;254    {
;;;255        /*<Generated by EasyCodeCube begin>*/
;;;256        /*<Generated by EasyCodeCube end>*/
;;;257    	ADC_ClearFlag(ADC, ADC_Flag_ADCIF);//Generated by EasyCodeCube, forbid editing!!!
000002  2101              MOVS     r1,#1
000004  4801              LDR      r0,|L1.12|
000006  f7fffffe          BL       ADC_ClearFlag
;;;258    }
00000a  bd10              POP      {r4,pc}
;;;259    
                          ENDP

                  |L1.12|
                          DCD      0x40022110

                          AREA ||i.BTM_IRQHandler||, CODE, READONLY, ALIGN=1

                  BTM_IRQHandler PROC
;;;104    #if !defined (TK_USE_BTM)
;;;105    void BTM_IRQHandler(void)
000000  4770              BX       lr
;;;106    {
;;;107        /*<Generated by EasyCodeCube begin>*/
;;;108        /*<Generated by EasyCodeCube end>*/
;;;109    }
;;;110    #endif
                          ENDP


                          AREA ||i.CAN_IRQHandler||, CODE, READONLY, ALIGN=1

                  CAN_IRQHandler PROC
;;;208    
;;;209    void CAN_IRQHandler(void)
000000  4770              BX       lr
;;;210    {
;;;211        /*<Generated by EasyCodeCube begin>*/
;;;212        /*<Generated by EasyCodeCube end>*/
;;;213    }
;;;214    
                          ENDP


                          AREA ||i.CMP0_1_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP0_1_2_IRQHandler PROC
;;;259    
;;;260    void CMP0_1_2_IRQHandler(void)
000000  4770              BX       lr
;;;261    {
;;;262        /*<Generated by EasyCodeCube begin>*/
;;;263        /*<Generated by EasyCodeCube end>*/
;;;264    }
;;;265    
                          ENDP


                          AREA ||i.CMP3_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP3_IRQHandler PROC
;;;265    
;;;266    void CMP3_IRQHandler(void)
000000  4770              BX       lr
;;;267    {
;;;268        /*<Generated by EasyCodeCube begin>*/
;;;269        /*<Generated by EasyCodeCube end>*/
;;;270    }
;;;271    
                          ENDP


                          AREA ||i.CMP_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP_IRQHandler PROC
;;;271    
;;;272    void CMP_IRQHandler(void)
000000  4770              BX       lr
;;;273    {
;;;274        /*<Generated by EasyCodeCube begin>*/
;;;275        /*<Generated by EasyCodeCube end>*/
;;;276    }
;;;277    
                          ENDP


                          AREA ||i.DMA0_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA0_IRQHandler PROC
;;;111    
;;;112    void DMA0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;113    {
;;;114        /*<Generated by EasyCodeCube begin>*/
;;;115        /*<UserCodeStart>*//*<SinOne-Tag><79>*/
;;;116        /*<UserCodeEnd>*//*<SinOne-Tag><79>*/
;;;117        /*<UserCodeStart>*//*<SinOne-Tag><455>*/
;;;118        TIM_TI_DMA_DMA0Handler();
000002  f7fffffe          BL       TIM_TI_DMA_DMA0Handler
;;;119        /*<UserCodeEnd>*//*<SinOne-Tag><455>*/
;;;120        /*<Generated by EasyCodeCube end>*/
;;;121    }
000006  bd10              POP      {r4,pc}
;;;122    
                          ENDP


                          AREA ||i.DMA1_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA1_IRQHandler PROC
;;;122    
;;;123    void DMA1_IRQHandler(void)
000000  4770              BX       lr
;;;124    {
;;;125        /*<Generated by EasyCodeCube begin>*/
;;;126        /*<Generated by EasyCodeCube end>*/
;;;127    }
;;;128    
                          ENDP


                          AREA ||i.DMA2_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA2_IRQHandler PROC
;;;129    
;;;130    void DMA2_IRQHandler(void)
000000  4770              BX       lr
;;;131    {
;;;132        /*<Generated by EasyCodeCube begin>*/
;;;133        /*<Generated by EasyCodeCube end>*/
;;;134    }
;;;135    
                          ENDP


                          AREA ||i.DMA3_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA3_IRQHandler PROC
;;;135    
;;;136    void DMA3_IRQHandler(void)
000000  4770              BX       lr
;;;137    {
;;;138        /*<Generated by EasyCodeCube begin>*/
;;;139        /*<Generated by EasyCodeCube end>*/
;;;140    }
;;;141    
                          ENDP


                          AREA ||i.EPWM_IRQHandler||, CODE, READONLY, ALIGN=1

                  EPWM_IRQHandler PROC
;;;214    
;;;215    void EPWM_IRQHandler(void)
000000  4770              BX       lr
;;;216    {
;;;217        /*<Generated by EasyCodeCube begin>*/
;;;218        /*<Generated by EasyCodeCube end>*/
;;;219    }
;;;220    
                          ENDP


                          AREA ||i.INT0_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT0_IRQHandler PROC
;;;26     
;;;27     void INT0_IRQHandler(void)
000000  4770              BX       lr
;;;28     {
;;;29         /*<Generated by EasyCodeCube begin>*/
;;;30         /*<Generated by EasyCodeCube end>*/
;;;31     }
;;;32     
                          ENDP


                          AREA ||i.INT12_15_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT12_15_IRQHandler PROC
;;;44     
;;;45     void INT12_15_IRQHandler(void)
000000  4770              BX       lr
;;;46     {
;;;47         /*<Generated by EasyCodeCube begin>*/
;;;48         /*<Generated by EasyCodeCube end>*/
;;;49     }
;;;50     
                          ENDP


                          AREA ||i.INT1_7_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT1_7_IRQHandler PROC
;;;32     
;;;33     void INT1_7_IRQHandler(void)
000000  4770              BX       lr
;;;34     {
;;;35         /*<Generated by EasyCodeCube begin>*/
;;;36         /*<Generated by EasyCodeCube end>*/
;;;37     }
;;;38     
                          ENDP


                          AREA ||i.INT8_11_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT8_11_IRQHandler PROC
;;;38     
;;;39     void INT8_11_IRQHandler(void)
000000  4770              BX       lr
;;;40     {
;;;41         /*<Generated by EasyCodeCube begin>*/
;;;42         /*<Generated by EasyCodeCube end>*/
;;;43     }
;;;44     
                          ENDP


                          AREA ||i.LEDPWM_IRQHandler||, CODE, READONLY, ALIGN=1

                  LEDPWM_IRQHandler PROC
;;;246    
;;;247    void LEDPWM_IRQHandler(void)
000000  4770              BX       lr
;;;248    {
;;;249        /*<Generated by EasyCodeCube begin>*/
;;;250        /*<Generated by EasyCodeCube end>*/
;;;251    }
;;;252    
                          ENDP


                          AREA ||i.OP1_OP2_IRQHandler||, CODE, READONLY, ALIGN=1

                  OP1_OP2_IRQHandler PROC
;;;196    
;;;197    void OP1_OP2_IRQHandler(void)
000000  4770              BX       lr
;;;198    {
;;;199        /*<Generated by EasyCodeCube begin>*/
;;;200        /*<Generated by EasyCodeCube end>*/
;;;201    }
;;;202    
                          ENDP


                          AREA ||i.PCAP_IRQHandler||, CODE, READONLY, ALIGN=1

                  PCAP_IRQHandler PROC
;;;220    
;;;221    void PCAP_IRQHandler(void)
000000  4770              BX       lr
;;;222    {
;;;223        /*<Generated by EasyCodeCube begin>*/
;;;224        /*<Generated by EasyCodeCube end>*/
;;;225    }
;;;226    
                          ENDP


                          AREA ||i.PWM0_IRQHandler||, CODE, READONLY, ALIGN=2

                  PWM0_IRQHandler PROC
;;;239    
;;;240    void PWM0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;241    {
;;;242        /*<Generated by EasyCodeCube begin>*/
;;;243        /*<Generated by EasyCodeCube end>*/
;;;244    	PWM_ClearFlag(PWM0, PWM_Flag_PWMIF|PWM_Flag_FLTSTA);//Generated by EasyCodeCube, forbid editing!!!
000002  2103              MOVS     r1,#3
000004  4801              LDR      r0,|L19.12|
000006  f7fffffe          BL       PWM_ClearFlag
;;;245    }
00000a  bd10              POP      {r4,pc}
;;;246    
                          ENDP

                  |L19.12|
                          DCD      0x40020200

                          AREA ||i.QEP0_IRQHandler||, CODE, READONLY, ALIGN=1

                  QEP0_IRQHandler PROC
;;;184    
;;;185    void QEP0_IRQHandler(void)
000000  4770              BX       lr
;;;186    {
;;;187        /*<Generated by EasyCodeCube begin>*/
;;;188        /*<Generated by EasyCodeCube end>*/
;;;189    }
;;;190    
                          ENDP


                          AREA ||i.QEP1_IRQHandler||, CODE, READONLY, ALIGN=1

                  QEP1_IRQHandler PROC
;;;190    
;;;191    void QEP1_IRQHandler(void)
000000  4770              BX       lr
;;;192    {
;;;193        /*<Generated by EasyCodeCube begin>*/
;;;194        /*<Generated by EasyCodeCube end>*/
;;;195    }
;;;196    
                          ENDP


                          AREA ||i.RCC_IRQHandler||, CODE, READONLY, ALIGN=1

                  RCC_IRQHandler PROC
;;;50     
;;;51     void RCC_IRQHandler(void)
000000  4770              BX       lr
;;;52     {
;;;53         /*<Generated by EasyCodeCube begin>*/
;;;54         /*<Generated by EasyCodeCube end>*/
;;;55     }
;;;56     
                          ENDP


                          AREA ||i.SPI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI0_IRQHandler PROC
;;;284    
;;;285    void SPI0_IRQHandler(void)
000000  4770              BX       lr
;;;286    {
;;;287        /*<Generated by EasyCodeCube begin>*/
;;;288        /*<Generated by EasyCodeCube end>*/
;;;289    }
;;;290    
                          ENDP


                          AREA ||i.SPI1_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_2_IRQHandler PROC
;;;296    
;;;297    void SPI1_2_IRQHandler(void)
000000  4770              BX       lr
;;;298    {
;;;299        /*<Generated by EasyCodeCube begin>*/
;;;300        /*<Generated by EasyCodeCube end>*/
;;;301    }
                          ENDP


                          AREA ||i.SPI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_IRQHandler PROC
;;;290    
;;;291    void SPI1_IRQHandler(void)
000000  4770              BX       lr
;;;292    {
;;;293        /*<Generated by EasyCodeCube begin>*/
;;;294        /*<Generated by EasyCodeCube end>*/
;;;295    }
;;;296    
                          ENDP


                          AREA ||i.SPI1_TWI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_TWI1_IRQHandler PROC
;;;202    
;;;203    void SPI1_TWI1_IRQHandler(void)
000000  4770              BX       lr
;;;204    {
;;;205        /*<Generated by EasyCodeCube begin>*/
;;;206        /*<Generated by EasyCodeCube end>*/
;;;207    }
;;;208    
                          ENDP


                          AREA ||i.SysTick_IRQHandler||, CODE, READONLY, ALIGN=1

                  SysTick_IRQHandler PROC
;;;278    
;;;279    void SysTick_IRQHandler(void)
000000  4770              BX       lr
;;;280    {
;;;281        /*<Generated by EasyCodeCube begin>*/
;;;282        /*<Generated by EasyCodeCube end>*/
;;;283    }
;;;284    
                          ENDP


                          AREA ||i.TIMER0_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER0_IRQHandler PROC
;;;142    
;;;143    void TIMER0_IRQHandler(void)
000000  4770              BX       lr
;;;144    {
;;;145        /*<Generated by EasyCodeCube begin>*/
;;;146        /*<Generated by EasyCodeCube end>*/
;;;147    }
;;;148    
                          ENDP


                          AREA ||i.TIMER1_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER1_IRQHandler PROC
;;;148    
;;;149    void TIMER1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;150    {
;;;151        /*<Generated by EasyCodeCube begin>*/
;;;152        /*<Generated by EasyCodeCube end>*/
;;;153    	TIM_ClearFlag(TIM1, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000002  2107              MOVS     r1,#7
000004  4801              LDR      r0,|L29.12|
000006  f7fffffe          BL       TIM_ClearFlag
;;;154    }
00000a  bd10              POP      {r4,pc}
;;;155    
                          ENDP

                  |L29.12|
                          DCD      0x40020140

                          AREA ||i.TIMER2_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER2_IRQHandler PROC
;;;155    
;;;156    void TIMER2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;157    {
;;;158        /*<Generated by EasyCodeCube begin>*/
;;;159        /*<Generated by EasyCodeCube end>*/
;;;160    	TIM_ClearFlag(TIM2, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000002  2107              MOVS     r1,#7
000004  4801              LDR      r0,|L30.12|
000006  f7fffffe          BL       TIM_ClearFlag
;;;161    }
00000a  bd10              POP      {r4,pc}
;;;162    
                          ENDP

                  |L30.12|
                          DCD      0x40020180

                          AREA ||i.TIMER3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER3_IRQHandler PROC
;;;162    
;;;163    void TIMER3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;164    {
;;;165        /*<Generated by EasyCodeCube begin>*/
;;;166        /*<Generated by EasyCodeCube end>*/
;;;167    	TIM_ClearFlag(TIM3, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000002  2107              MOVS     r1,#7
000004  4801              LDR      r0,|L31.12|
000006  f7fffffe          BL       TIM_ClearFlag
;;;168    }
00000a  bd10              POP      {r4,pc}
;;;169    
                          ENDP

                  |L31.12|
                          DCD      0x400201c0

                          AREA ||i.TIMER4_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER4_5_IRQHandler PROC
;;;170    
;;;171    void TIMER4_5_IRQHandler(void)
000000  4770              BX       lr
;;;172    {
;;;173        /*<Generated by EasyCodeCube begin>*/
;;;174        /*<Generated by EasyCodeCube end>*/
;;;175    }
;;;176    
                          ENDP


                          AREA ||i.TIMER6_7_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER6_7_IRQHandler PROC
;;;176    
;;;177    void TIMER6_7_IRQHandler(void)
000000  4770              BX       lr
;;;178    {
;;;179        /*<Generated by EasyCodeCube begin>*/
;;;180        /*<Generated by EasyCodeCube end>*/
;;;181    }
;;;182    
                          ENDP


                          AREA ||i.TWI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  TWI0_IRQHandler PROC
;;;227    
;;;228    void TWI0_IRQHandler(void)
000000  4770              BX       lr
;;;229    {
;;;230        /*<Generated by EasyCodeCube begin>*/
;;;231        /*<Generated by EasyCodeCube end>*/
;;;232    }
;;;233    
                          ENDP


                          AREA ||i.TWI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  TWI1_IRQHandler PROC
;;;233    
;;;234    void TWI1_IRQHandler(void)
000000  4770              BX       lr
;;;235    {
;;;236        /*<Generated by EasyCodeCube begin>*/
;;;237        /*<Generated by EasyCodeCube end>*/
;;;238    }
;;;239    
                          ENDP


                          AREA ||i.UART0_2_4_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART0_2_4_IRQHandler PROC
;;;95     #if !defined (TK_USE_UART0_2_4)
;;;96     void UART0_2_4_IRQHandler(void)
000000  4770              BX       lr
;;;97     {
;;;98         /*<Generated by EasyCodeCube begin>*/
;;;99         /*<Generated by EasyCodeCube end>*/
;;;100    }
;;;101    #endif
                          ENDP


                          AREA ||i.UART0_2_IRQHandler||, CODE, READONLY, ALIGN=2

                  UART0_2_IRQHandler PROC
;;;82     #if !defined (TK_USE_UART0_2)
;;;83     void UART0_2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;84     {
;;;85         /*<Generated by EasyCodeCube begin>*/
;;;86         /*<UserCodeStart>*//*<SinOne-Tag><471>*/
;;;87         //UART_Communication_UART2Handler();
;;;88         UART_Handler();
000002  f7fffffe          BL       UART_Handler
;;;89         /*<UserCodeEnd>*//*<SinOne-Tag><471>*/
;;;90         /*<Generated by EasyCodeCube end>*/
;;;91     	UART_ClearFlag(UART2,UART_Flag_RX | UART_Flag_TX);//Generated by EasyCodeCube, forbid editing!!!
000006  2103              MOVS     r1,#3
000008  4801              LDR      r0,|L37.16|
00000a  f7fffffe          BL       UART_ClearFlag
;;;92     }
00000e  bd10              POP      {r4,pc}
;;;93     #endif
                          ENDP

                  |L37.16|
                          DCD      0x40021020

                          AREA ||i.UART1_3_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART1_3_5_IRQHandler PROC
;;;74     #if !defined (TK_USE_UART1_3_5)
;;;75     void UART1_3_5_IRQHandler(void)
000000  4770              BX       lr
;;;76     {
;;;77         /*<Generated by EasyCodeCube begin>*/
;;;78         /*<Generated by EasyCodeCube end>*/
;;;79     }
;;;80     #endif
                          ENDP


                          AREA ||i.UART1_3_IRQHandler||, CODE, READONLY, ALIGN=2

                  UART1_3_IRQHandler PROC
;;;64     #if !defined (TK_USE_UART1_3)
;;;65     void UART1_3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;66     {
;;;67         /*<Generated by EasyCodeCube begin>*/
;;;68         UART_Communication_UART1Handler();
000002  f7fffffe          BL       UART_Communication_UART1Handler
;;;69         /*<Generated by EasyCodeCube end>*/
;;;70     	UART_ClearFlag(UART1,UART_Flag_RX | UART_Flag_TX);//Generated by EasyCodeCube, forbid editing!!!
000006  2103              MOVS     r1,#3
000008  4801              LDR      r0,|L39.16|
00000a  f7fffffe          BL       UART_ClearFlag
;;;71     }
00000e  bd10              POP      {r4,pc}
;;;72     #endif
                          ENDP

                  |L39.16|
                          DCD      0x40020080

                          AREA ||i.UART1_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART1_IRQHandler PROC
;;;57     
;;;58     void UART1_IRQHandler(void)
000000  4770              BX       lr
;;;59     {
;;;60         /*<Generated by EasyCodeCube begin>*/
;;;61         /*<Generated by EasyCodeCube end>*/
;;;62     }
;;;63     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\User\\SC_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_SC_it_c_b1e5ca68____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___7_SC_it_c_b1e5ca68____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_SC_it_c_b1e5ca68____REVSH|
#line 478
|__asm___7_SC_it_c_b1e5ca68____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
