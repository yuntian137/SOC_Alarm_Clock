; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\output\sc_it.o --asm_dir=..\List\ --list_dir=..\List\ --depend=..\output\sc_it.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -I..\Buzz\Inc -I..\Drivers\TKDriver\C -I..\Mqtt\Inc -ID:\keil\ARM\PACK\Keil\SC32F1xxx_DFP\1.0.6\Device\SC32F10xx\FWLib\SC32_Lib\inc -D__MICROLIB -D__UVISION_VERSION=534 -DSC32F10xx -DSC32f10xx --omf_browse=..\output\sc_it.crf ..\User\SC_it.c]
                          THUMB

                          AREA ||i.ADC_IRQHandler||, CODE, READONLY, ALIGN=2

                  ADC_IRQHandler PROC
;;;259    
;;;260    void ADC_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;261    {
;;;262        /*<Generated by EasyCodeCube begin>*/
;;;263        /*<Generated by EasyCodeCube end>*/
;;;264    	ADC_ClearFlag(ADC, ADC_Flag_ADCIF);//Generated by EasyCodeCube, forbid editing!!!
000002  2101              MOVS     r1,#1
000004  4801              LDR      r0,|L1.12|
000006  f7fffffe          BL       ADC_ClearFlag
;;;265    }
00000a  bd10              POP      {r4,pc}
;;;266    
                          ENDP

                  |L1.12|
                          DCD      0x40022110

                          AREA ||i.BTM_IRQHandler||, CODE, READONLY, ALIGN=1

                  BTM_IRQHandler PROC
;;;105    #if !defined (TK_USE_BTM)
;;;106    void BTM_IRQHandler(void)
000000  4770              BX       lr
;;;107    {
;;;108        /*<Generated by EasyCodeCube begin>*/
;;;109        /*<Generated by EasyCodeCube end>*/
;;;110    }
;;;111    #endif
                          ENDP


                          AREA ||i.CAN_IRQHandler||, CODE, READONLY, ALIGN=1

                  CAN_IRQHandler PROC
;;;215    
;;;216    void CAN_IRQHandler(void)
000000  4770              BX       lr
;;;217    {
;;;218        /*<Generated by EasyCodeCube begin>*/
;;;219        /*<Generated by EasyCodeCube end>*/
;;;220    }
;;;221    
                          ENDP


                          AREA ||i.CMP0_1_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP0_1_2_IRQHandler PROC
;;;266    
;;;267    void CMP0_1_2_IRQHandler(void)
000000  4770              BX       lr
;;;268    {
;;;269        /*<Generated by EasyCodeCube begin>*/
;;;270        /*<Generated by EasyCodeCube end>*/
;;;271    }
;;;272    
                          ENDP


                          AREA ||i.CMP3_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP3_IRQHandler PROC
;;;272    
;;;273    void CMP3_IRQHandler(void)
000000  4770              BX       lr
;;;274    {
;;;275        /*<Generated by EasyCodeCube begin>*/
;;;276        /*<Generated by EasyCodeCube end>*/
;;;277    }
;;;278    
                          ENDP


                          AREA ||i.CMP_IRQHandler||, CODE, READONLY, ALIGN=1

                  CMP_IRQHandler PROC
;;;278    
;;;279    void CMP_IRQHandler(void)
000000  4770              BX       lr
;;;280    {
;;;281        /*<Generated by EasyCodeCube begin>*/
;;;282        /*<Generated by EasyCodeCube end>*/
;;;283    }
;;;284    
                          ENDP


                          AREA ||i.DMA0_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA0_IRQHandler PROC
;;;112    
;;;113    void DMA0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;114    {
;;;115        /*<Generated by EasyCodeCube begin>*/
;;;116        /*<UserCodeStart>*//*<SinOne-Tag><79>*/
;;;117        /*<UserCodeEnd>*//*<SinOne-Tag><79>*/
;;;118        /*<UserCodeStart>*//*<SinOne-Tag><483>*/
;;;119        //UART_Communication_DMA_DAM0Handler();
;;;120        /*<UserCodeEnd>*//*<SinOne-Tag><483>*/
;;;121        /*<Generated by EasyCodeCube end>*/
;;;122    	DMA_ClearFlag(DMA0, DMA_FLAG_GIF|DMA_FLAG_TCIF|DMA_FLAG_HTIF|DMA_FLAG_TEIF);//Generated by EasyCodeCube, forbid editing!!!
000002  210f              MOVS     r1,#0xf
000004  4801              LDR      r0,|L7.12|
000006  f7fffffe          BL       DMA_ClearFlag
;;;123    }
00000a  bd10              POP      {r4,pc}
;;;124    
                          ENDP

                  |L7.12|
                          DCD      0x40010800

                          AREA ||i.DMA1_IRQHandler||, CODE, READONLY, ALIGN=2

                  DMA1_IRQHandler PROC
;;;124    
;;;125    void DMA1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;126    {
;;;127        /*<Generated by EasyCodeCube begin>*/
;;;128        /*<UserCodeStart>*//*<SinOne-Tag><487>*/
;;;129        //UART_Communication_DMA_DAM1Handler();
;;;130        /*<UserCodeEnd>*//*<SinOne-Tag><487>*/
;;;131        /*<Generated by EasyCodeCube end>*/
;;;132    	DMA_ClearFlag(DMA1, DMA_FLAG_GIF|DMA_FLAG_TCIF|DMA_FLAG_HTIF|DMA_FLAG_TEIF);//Generated by EasyCodeCube, forbid editing!!!
000002  210f              MOVS     r1,#0xf
000004  4801              LDR      r0,|L8.12|
000006  f7fffffe          BL       DMA_ClearFlag
;;;133    }
00000a  bd10              POP      {r4,pc}
;;;134    
                          ENDP

                  |L8.12|
                          DCD      0x40010840

                          AREA ||i.DMA2_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA2_IRQHandler PROC
;;;135    
;;;136    void DMA2_IRQHandler(void)
000000  4770              BX       lr
;;;137    {
;;;138        /*<Generated by EasyCodeCube begin>*/
;;;139        /*<Generated by EasyCodeCube end>*/
;;;140    }
;;;141    
                          ENDP


                          AREA ||i.DMA3_IRQHandler||, CODE, READONLY, ALIGN=1

                  DMA3_IRQHandler PROC
;;;141    
;;;142    void DMA3_IRQHandler(void)
000000  4770              BX       lr
;;;143    {
;;;144        /*<Generated by EasyCodeCube begin>*/
;;;145        /*<Generated by EasyCodeCube end>*/
;;;146    }
;;;147    
                          ENDP


                          AREA ||i.EPWM_IRQHandler||, CODE, READONLY, ALIGN=1

                  EPWM_IRQHandler PROC
;;;221    
;;;222    void EPWM_IRQHandler(void)
000000  4770              BX       lr
;;;223    {
;;;224        /*<Generated by EasyCodeCube begin>*/
;;;225        /*<Generated by EasyCodeCube end>*/
;;;226    }
;;;227    
                          ENDP


                          AREA ||i.INT0_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT0_IRQHandler PROC
;;;26     
;;;27     void INT0_IRQHandler(void)
000000  4770              BX       lr
;;;28     {
;;;29         /*<Generated by EasyCodeCube begin>*/
;;;30         /*<Generated by EasyCodeCube end>*/
;;;31     }
;;;32     
                          ENDP


                          AREA ||i.INT12_15_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT12_15_IRQHandler PROC
;;;44     
;;;45     void INT12_15_IRQHandler(void)
000000  4770              BX       lr
;;;46     {
;;;47         /*<Generated by EasyCodeCube begin>*/
;;;48         /*<Generated by EasyCodeCube end>*/
;;;49     }
;;;50     
                          ENDP


                          AREA ||i.INT1_7_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT1_7_IRQHandler PROC
;;;32     
;;;33     void INT1_7_IRQHandler(void)
000000  4770              BX       lr
;;;34     {
;;;35         /*<Generated by EasyCodeCube begin>*/
;;;36         /*<Generated by EasyCodeCube end>*/
;;;37     }
;;;38     
                          ENDP


                          AREA ||i.INT8_11_IRQHandler||, CODE, READONLY, ALIGN=1

                  INT8_11_IRQHandler PROC
;;;38     
;;;39     void INT8_11_IRQHandler(void)
000000  4770              BX       lr
;;;40     {
;;;41         /*<Generated by EasyCodeCube begin>*/
;;;42         /*<Generated by EasyCodeCube end>*/
;;;43     }
;;;44     
                          ENDP


                          AREA ||i.LEDPWM_IRQHandler||, CODE, READONLY, ALIGN=1

                  LEDPWM_IRQHandler PROC
;;;253    
;;;254    void LEDPWM_IRQHandler(void)
000000  4770              BX       lr
;;;255    {
;;;256        /*<Generated by EasyCodeCube begin>*/
;;;257        /*<Generated by EasyCodeCube end>*/
;;;258    }
;;;259    
                          ENDP


                          AREA ||i.OP1_OP2_IRQHandler||, CODE, READONLY, ALIGN=1

                  OP1_OP2_IRQHandler PROC
;;;203    
;;;204    void OP1_OP2_IRQHandler(void)
000000  4770              BX       lr
;;;205    {
;;;206        /*<Generated by EasyCodeCube begin>*/
;;;207        /*<Generated by EasyCodeCube end>*/
;;;208    }
;;;209    
                          ENDP


                          AREA ||i.PCAP_IRQHandler||, CODE, READONLY, ALIGN=1

                  PCAP_IRQHandler PROC
;;;227    
;;;228    void PCAP_IRQHandler(void)
000000  4770              BX       lr
;;;229    {
;;;230        /*<Generated by EasyCodeCube begin>*/
;;;231        /*<Generated by EasyCodeCube end>*/
;;;232    }
;;;233    
                          ENDP


                          AREA ||i.PWM0_IRQHandler||, CODE, READONLY, ALIGN=2

                  PWM0_IRQHandler PROC
;;;246    
;;;247    void PWM0_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;248    {
;;;249        /*<Generated by EasyCodeCube begin>*/
;;;250        /*<Generated by EasyCodeCube end>*/
;;;251    	PWM_ClearFlag(PWM0, PWM_Flag_PWMIF|PWM_Flag_FLTSTA);//Generated by EasyCodeCube, forbid editing!!!
000002  2103              MOVS     r1,#3
000004  4801              LDR      r0,|L19.12|
000006  f7fffffe          BL       PWM_ClearFlag
;;;252    }
00000a  bd10              POP      {r4,pc}
;;;253    
                          ENDP

                  |L19.12|
                          DCD      0x40020200

                          AREA ||i.QEP0_IRQHandler||, CODE, READONLY, ALIGN=1

                  QEP0_IRQHandler PROC
;;;191    
;;;192    void QEP0_IRQHandler(void)
000000  4770              BX       lr
;;;193    {
;;;194        /*<Generated by EasyCodeCube begin>*/
;;;195        /*<Generated by EasyCodeCube end>*/
;;;196    }
;;;197    
                          ENDP


                          AREA ||i.QEP1_IRQHandler||, CODE, READONLY, ALIGN=1

                  QEP1_IRQHandler PROC
;;;197    
;;;198    void QEP1_IRQHandler(void)
000000  4770              BX       lr
;;;199    {
;;;200        /*<Generated by EasyCodeCube begin>*/
;;;201        /*<Generated by EasyCodeCube end>*/
;;;202    }
;;;203    
                          ENDP


                          AREA ||i.RCC_IRQHandler||, CODE, READONLY, ALIGN=1

                  RCC_IRQHandler PROC
;;;50     
;;;51     void RCC_IRQHandler(void)
000000  4770              BX       lr
;;;52     {
;;;53         /*<Generated by EasyCodeCube begin>*/
;;;54         /*<Generated by EasyCodeCube end>*/
;;;55     }
;;;56     
                          ENDP


                          AREA ||i.SPI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI0_IRQHandler PROC
;;;291    
;;;292    void SPI0_IRQHandler(void)
000000  4770              BX       lr
;;;293    {
;;;294        /*<Generated by EasyCodeCube begin>*/
;;;295        /*<Generated by EasyCodeCube end>*/
;;;296    }
;;;297    
                          ENDP


                          AREA ||i.SPI1_2_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_2_IRQHandler PROC
;;;303    
;;;304    void SPI1_2_IRQHandler(void)
000000  4770              BX       lr
;;;305    {
;;;306        /*<Generated by EasyCodeCube begin>*/
;;;307        /*<Generated by EasyCodeCube end>*/
;;;308    }
                          ENDP


                          AREA ||i.SPI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_IRQHandler PROC
;;;297    
;;;298    void SPI1_IRQHandler(void)
000000  4770              BX       lr
;;;299    {
;;;300        /*<Generated by EasyCodeCube begin>*/
;;;301        /*<Generated by EasyCodeCube end>*/
;;;302    }
;;;303    
                          ENDP


                          AREA ||i.SPI1_TWI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  SPI1_TWI1_IRQHandler PROC
;;;209    
;;;210    void SPI1_TWI1_IRQHandler(void)
000000  4770              BX       lr
;;;211    {
;;;212        /*<Generated by EasyCodeCube begin>*/
;;;213        /*<Generated by EasyCodeCube end>*/
;;;214    }
;;;215    
                          ENDP


                          AREA ||i.SysTick_IRQHandler||, CODE, READONLY, ALIGN=1

                  SysTick_IRQHandler PROC
;;;285    
;;;286    void SysTick_IRQHandler(void)
000000  4770              BX       lr
;;;287    {
;;;288        /*<Generated by EasyCodeCube begin>*/
;;;289        /*<Generated by EasyCodeCube end>*/
;;;290    }
;;;291    
                          ENDP


                          AREA ||i.TIMER0_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER0_IRQHandler PROC
;;;148    
;;;149    void TIMER0_IRQHandler(void)
000000  4770              BX       lr
;;;150    {
;;;151        /*<Generated by EasyCodeCube begin>*/
;;;152        /*<Generated by EasyCodeCube end>*/
;;;153    }
;;;154    
                          ENDP


                          AREA ||i.TIMER1_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER1_IRQHandler PROC
;;;154    
;;;155    void TIMER1_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;156    {
;;;157        /*<Generated by EasyCodeCube begin>*/
;;;158        /*<Generated by EasyCodeCube end>*/
;;;159    	TIM_ClearFlag(TIM1, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000002  2107              MOVS     r1,#7
000004  4801              LDR      r0,|L29.12|
000006  f7fffffe          BL       TIM_ClearFlag
;;;160    }
00000a  bd10              POP      {r4,pc}
;;;161    
                          ENDP

                  |L29.12|
                          DCD      0x40020140

                          AREA ||i.TIMER2_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER2_IRQHandler PROC
;;;161    
;;;162    void TIMER2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;163    {
;;;164        /*<Generated by EasyCodeCube begin>*/
;;;165        /*<Generated by EasyCodeCube end>*/
;;;166    	TIM_ClearFlag(TIM2, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000002  2107              MOVS     r1,#7
000004  4801              LDR      r0,|L30.12|
000006  f7fffffe          BL       TIM_ClearFlag
;;;167    }
00000a  bd10              POP      {r4,pc}
;;;168    
                          ENDP

                  |L30.12|
                          DCD      0x40020180

                          AREA ||i.TIMER3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIMER3_IRQHandler PROC
;;;168    
;;;169    void TIMER3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;170    {
;;;171        /*<Generated by EasyCodeCube begin>*/
;;;172            TIM3_IRQHandler();
000002  f7fffffe          BL       TIM3_IRQHandler
;;;173        /*<Generated by EasyCodeCube end>*/
;;;174    	TIM_ClearFlag(TIM3, TIM_Flag_TI|TIM_Flag_EXR|TIM_Flag_EXF);//Generated by EasyCodeCube, forbid editing!!!
000006  2107              MOVS     r1,#7
000008  4801              LDR      r0,|L31.16|
00000a  f7fffffe          BL       TIM_ClearFlag
;;;175    }
00000e  bd10              POP      {r4,pc}
;;;176    
                          ENDP

                  |L31.16|
                          DCD      0x400201c0

                          AREA ||i.TIMER4_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER4_5_IRQHandler PROC
;;;177    
;;;178    void TIMER4_5_IRQHandler(void)
000000  4770              BX       lr
;;;179    {
;;;180        /*<Generated by EasyCodeCube begin>*/
;;;181        /*<Generated by EasyCodeCube end>*/
;;;182    }
;;;183    
                          ENDP


                          AREA ||i.TIMER6_7_IRQHandler||, CODE, READONLY, ALIGN=1

                  TIMER6_7_IRQHandler PROC
;;;183    
;;;184    void TIMER6_7_IRQHandler(void)
000000  4770              BX       lr
;;;185    {
;;;186        /*<Generated by EasyCodeCube begin>*/
;;;187        /*<Generated by EasyCodeCube end>*/
;;;188    }
;;;189    
                          ENDP


                          AREA ||i.TWI0_IRQHandler||, CODE, READONLY, ALIGN=1

                  TWI0_IRQHandler PROC
;;;234    
;;;235    void TWI0_IRQHandler(void)
000000  4770              BX       lr
;;;236    {
;;;237        /*<Generated by EasyCodeCube begin>*/
;;;238        /*<Generated by EasyCodeCube end>*/
;;;239    }
;;;240    
                          ENDP


                          AREA ||i.TWI1_IRQHandler||, CODE, READONLY, ALIGN=1

                  TWI1_IRQHandler PROC
;;;240    
;;;241    void TWI1_IRQHandler(void)
000000  4770              BX       lr
;;;242    {
;;;243        /*<Generated by EasyCodeCube begin>*/
;;;244        /*<Generated by EasyCodeCube end>*/
;;;245    }
;;;246    
                          ENDP


                          AREA ||i.UART0_2_4_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART0_2_4_IRQHandler PROC
;;;96     #if !defined (TK_USE_UART0_2_4)
;;;97     void UART0_2_4_IRQHandler(void)
000000  4770              BX       lr
;;;98     {
;;;99         /*<Generated by EasyCodeCube begin>*/
;;;100        /*<Generated by EasyCodeCube end>*/
;;;101    }
;;;102    #endif
                          ENDP


                          AREA ||i.UART0_2_IRQHandler||, CODE, READONLY, ALIGN=2

                  UART0_2_IRQHandler PROC
;;;84     #if !defined (TK_USE_UART0_2)
;;;85     void UART0_2_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;86     {
;;;87         /*<Generated by EasyCodeCube begin>*/
;;;88         /*<UserCodeStart>*//*<SinOne-Tag><471>*/
;;;89         UART2_Handler();
000002  f7fffffe          BL       UART2_Handler
;;;90         /*<UserCodeEnd>*//*<SinOne-Tag><471>*/
;;;91         /*<Generated by EasyCodeCube end>*/
;;;92     	UART_ClearFlag(UART2,UART_Flag_RX | UART_Flag_TX);//Generated by EasyCodeCube, forbid editing!!!
000006  2103              MOVS     r1,#3
000008  4801              LDR      r0,|L37.16|
00000a  f7fffffe          BL       UART_ClearFlag
;;;93     }
00000e  bd10              POP      {r4,pc}
;;;94     #endif
                          ENDP

                  |L37.16|
                          DCD      0x40021020

                          AREA ||i.UART1_3_5_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART1_3_5_IRQHandler PROC
;;;76     #if !defined (TK_USE_UART1_3_5)
;;;77     void UART1_3_5_IRQHandler(void)
000000  4770              BX       lr
;;;78     {
;;;79         /*<Generated by EasyCodeCube begin>*/
;;;80         /*<Generated by EasyCodeCube end>*/
;;;81     }
;;;82     #endif
                          ENDP


                          AREA ||i.UART1_3_IRQHandler||, CODE, READONLY, ALIGN=2

                  UART1_3_IRQHandler PROC
;;;64     #if !defined (TK_USE_UART1_3)
;;;65     void UART1_3_IRQHandler(void)
000000  b510              PUSH     {r4,lr}
;;;66     {
;;;67         /*<Generated by EasyCodeCube begin>*/
;;;68         //UART1_Handler();//WIFI
;;;69         UART1_IRQHandler_DMA();//测试DMA
000002  f7fffffe          BL       UART1_IRQHandler_DMA
;;;70     
;;;71         /*<Generated by EasyCodeCube end>*/
;;;72     	UART_ClearFlag(UART1,UART_Flag_RX | UART_Flag_TX);//Generated by EasyCodeCube, forbid editing!!!
000006  2103              MOVS     r1,#3
000008  4801              LDR      r0,|L39.16|
00000a  f7fffffe          BL       UART_ClearFlag
;;;73     }
00000e  bd10              POP      {r4,pc}
;;;74     #endif
                          ENDP

                  |L39.16|
                          DCD      0x40020080

                          AREA ||i.UART1_IRQHandler||, CODE, READONLY, ALIGN=1

                  UART1_IRQHandler PROC
;;;57     
;;;58     void UART1_IRQHandler(void)
000000  4770              BX       lr
;;;59     {
;;;60         /*<Generated by EasyCodeCube begin>*/
;;;61         /*<Generated by EasyCodeCube end>*/
;;;62     }
;;;63     
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\User\\SC_it.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_SC_it_c_b1e5ca68____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___7_SC_it_c_b1e5ca68____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_SC_it_c_b1e5ca68____REVSH|
#line 478
|__asm___7_SC_it_c_b1e5ca68____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
