; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\output\main.o --asm_dir=..\List\ --list_dir=..\List\ --depend=..\output\main.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -I..\Buzz\Inc -I..\Drivers\TKDriver\C -ID:\keil\ARM\PACK\Keil\SC32F1xxx_DFP\1.0.6\Device\SC32F10xx\FWLib\SC32_Lib\inc -D__MICROLIB -D__UVISION_VERSION=534 -DSC32F10xx -DSC32f10xx --omf_browse=..\output\main.crf ..\User\main.c]
                          THUMB
                          AREA ||i.DataProcessing||, CODE, READONLY, ALIGN=2
                  DataProcessing PROC
;;;34     float Light;
;;;35     void DataProcessing(uint32_t value)
000000  490a              LDR      r1,|L1.44|
;;;36     {
;;;37         switch (TK_exKeyValueFlag)
000002  6809              LDR      r1,[r1,#0]  ; TK_exKeyValueFlag
000004  2201              MOVS     r2,#1
000006  0452              LSLS     r2,r2,#17
000008  1a89              SUBS     r1,r1,r2
00000a  d005              BEQ      |L1.24|
00000c  1a89              SUBS     r1,r1,r2
00000e  d107              BNE      |L1.32|
;;;38         {
;;;39             case 0x00040000:
;;;40             exKeyValue = 18;
000010  2112              MOVS     r1,#0x12
000012  4a07              LDR      r2,|L1.48|
000014  7011              STRB     r1,[r2,#0]
;;;41             break;
000016  e007              B        |L1.40|
                  |L1.24|
;;;42             case 0x00020000:
;;;43             exKeyValue = 17;
000018  2111              MOVS     r1,#0x11
00001a  4a05              LDR      r2,|L1.48|
00001c  7011              STRB     r1,[r2,#0]
;;;44             break;
00001e  e003              B        |L1.40|
                  |L1.32|
;;;45             default:
;;;46             exKeyValue = 0xff;
000020  21ff              MOVS     r1,#0xff
000022  4a03              LDR      r2,|L1.48|
000024  7011              STRB     r1,[r2,#0]
;;;47             break;
000026  bf00              NOP      
                  |L1.40|
000028  bf00              NOP                            ;41
;;;48         }
;;;49     }
00002a  4770              BX       lr
;;;50     uint8_t first_Press;
                          ENDP
                  |L1.44|
                          DCD      TK_exKeyValueFlag
                  |L1.48|
                          DCD      exKeyValue
                          AREA ||i.Delay_ms||, CODE, READONLY, ALIGN=1
                  Delay_ms PROC
;;;166    
;;;167    void Delay_ms(uint16_t xms)
000000  b570              PUSH     {r4-r6,lr}
;;;168    {
000002  4604              MOV      r4,r0
;;;169        int i;
;;;170        for (i = 0; i < xms; i++)
000004  2500              MOVS     r5,#0
000006  e004              B        |L2.18|
                  |L2.8|
;;;171        {
;;;172            Delay_us(1000);
000008  207d              MOVS     r0,#0x7d
00000a  00c0              LSLS     r0,r0,#3
00000c  f7fffffe          BL       Delay_us
000010  1c6d              ADDS     r5,r5,#1              ;170
                  |L2.18|
000012  42a5              CMP      r5,r4                 ;170
000014  dbf8              BLT      |L2.8|
;;;173        }
;;;174    }
000016  bd70              POP      {r4-r6,pc}
;;;175    
                          ENDP
                          AREA ||i.Delay_us||, CODE, READONLY, ALIGN=2
                  Delay_us PROC
;;;158    
;;;159    void Delay_us(uint16_t xus)
000000  b510              PUSH     {r4,lr}
;;;160    {
000002  4604              MOV      r4,r0
;;;161        TIM_Cmd(TIM1,ENABLE); 
000004  2101              MOVS     r1,#1
000006  4808              LDR      r0,|L3.40|
000008  f7fffffe          BL       TIM_Cmd
;;;162        while(TIM1->TIM_CNT < xus);
00000c  bf00              NOP      
                  |L3.14|
00000e  4806              LDR      r0,|L3.40|
000010  6840              LDR      r0,[r0,#4]
000012  42a0              CMP      r0,r4
000014  d3fb              BCC      |L3.14|
;;;163        TIM1->TIM_CNT = 0;
000016  2000              MOVS     r0,#0
000018  4903              LDR      r1,|L3.40|
00001a  6048              STR      r0,[r1,#4]
;;;164        TIM_Cmd(TIM1,DISABLE); 
00001c  2100              MOVS     r1,#0
00001e  4802              LDR      r0,|L3.40|
000020  f7fffffe          BL       TIM_Cmd
;;;165    }
000024  bd10              POP      {r4,pc}
;;;166    
                          ENDP
000026  0000              DCW      0x0000
                  |L3.40|
                          DCD      0x40020140
                          AREA ||i.UpdateDisplay||, CODE, READONLY, ALIGN=2
                  UpdateDisplay PROC
;;;50     uint8_t first_Press;
;;;51     void UpdateDisplay(uint8_t KeyValue)
000000  b510              PUSH     {r4,lr}
;;;52     {
000002  4604              MOV      r4,r0
;;;53         if (exKeyValue != 0XFF) 
000004  4816              LDR      r0,|L4.96|
000006  7800              LDRB     r0,[r0,#0]  ; exKeyValue
000008  28ff              CMP      r0,#0xff
00000a  d023              BEQ      |L4.84|
;;;54         {
;;;55             gTkIsValid = 1;
00000c  2001              MOVS     r0,#1
00000e  4915              LDR      r1,|L4.100|
000010  7008              STRB     r0,[r1,#0]
;;;56             KeyValue = exKeyValue;
000012  4813              LDR      r0,|L4.96|
000014  7804              LDRB     r4,[r0,#0]  ; exKeyValue
;;;57             if (first_Press == 0)
000016  4814              LDR      r0,|L4.104|
000018  7800              LDRB     r0,[r0,#0]  ; first_Press
00001a  2800              CMP      r0,#0
00001c  d11f              BNE      |L4.94|
;;;58             {
;;;59                 if (KeyValue == 17)
00001e  2c11              CMP      r4,#0x11
000020  d109              BNE      |L4.54|
;;;60                 {
;;;61                     GPIO_TogglePins(GPIOC, GPIO_Pin_4);  
000022  2110              MOVS     r1,#0x10
000024  4811              LDR      r0,|L4.108|
000026  f7fffffe          BL       GPIO_TogglePins
;;;62                     GPIO_TogglePins(GPIOC, GPIO_Pin_10); 
00002a  2101              MOVS     r1,#1
00002c  0289              LSLS     r1,r1,#10
00002e  480f              LDR      r0,|L4.108|
000030  f7fffffe          BL       GPIO_TogglePins
000034  e00a              B        |L4.76|
                  |L4.54|
;;;63                 }
;;;64                 else if (KeyValue == 18)
000036  2c12              CMP      r4,#0x12
000038  d108              BNE      |L4.76|
;;;65                 {
;;;66                     GPIO_TogglePins(GPIOC, GPIO_Pin_5);  
00003a  2120              MOVS     r1,#0x20
00003c  480b              LDR      r0,|L4.108|
00003e  f7fffffe          BL       GPIO_TogglePins
;;;67                     GPIO_TogglePins(GPIOC, GPIO_Pin_11); 
000042  2101              MOVS     r1,#1
000044  02c9              LSLS     r1,r1,#11
000046  4809              LDR      r0,|L4.108|
000048  f7fffffe          BL       GPIO_TogglePins
                  |L4.76|
;;;68                 }
;;;69                 first_Press = 1;
00004c  2001              MOVS     r0,#1
00004e  4906              LDR      r1,|L4.104|
000050  7008              STRB     r0,[r1,#0]
000052  e004              B        |L4.94|
                  |L4.84|
;;;70             }
;;;71         }
;;;72         else
;;;73         {
;;;74             gTkIsValid = 0;
000054  2000              MOVS     r0,#0
000056  4903              LDR      r1,|L4.100|
000058  7008              STRB     r0,[r1,#0]
;;;75             first_Press = 0;
00005a  4903              LDR      r1,|L4.104|
00005c  7008              STRB     r0,[r1,#0]
                  |L4.94|
;;;76         }
;;;77     }
00005e  bd10              POP      {r4,pc}
;;;78     
;;;83     int main(void)
000000  f7fffffe          BL       IcResourceInit
;;;84     {
;;;85         
;;;86         
;;;87         IcResourceInit();
;;;88         TIM_Cmd(TIM2, DISABLE);
000004  2100              MOVS     r1,#0
000006  483c              LDR      r0,|L5.248|
000008  f7fffffe          BL       TIM_Cmd
;;;89         Buzzer_SetVolume(50);
00000c  2032              MOVS     r0,#0x32
00000e  f7fffffe          BL       Buzzer_SetVolume
;;;90         TK_Init();                    
000012  f7fffffe          BL       TK_Init
;;;91         
;;;92         
;;;93         
;;;94         
;;;95         while(1)
000016  e06d              B        |L5.244|
                  |L5.24|
;;;96         {
;;;97             
;;;98             
;;;99             
;;;100            switch(Task_state)
000018  4838              LDR      r0,|L5.252|
00001a  7800              LDRB     r0,[r0,#0]  ; Task_state
00001c  0003              MOVS     r3,r0
00001e  f7fffffe          BL       __ARM_common_switch8
000022  0504              DCB      0x05,0x04
000024  1f405354          DCB      0x1f,0x40,0x53,0x54
000028  6800              DCB      0x68,0x00
;;;101            {
;;;102                case 0:                                 
;;;103                GPIO_ResetBits(GPIOC, GPIO_Pin_4);  
00002a  2110              MOVS     r1,#0x10
00002c  4834              LDR      r0,|L5.256|
00002e  f7fffffe          BL       GPIO_ResetBits
;;;104                GPIO_ResetBits(GPIOC, GPIO_Pin_10); 
000032  2101              MOVS     r1,#1
000034  0289              LSLS     r1,r1,#10
000036  4832              LDR      r0,|L5.256|
000038  f7fffffe          BL       GPIO_ResetBits
;;;105                GPIO_ResetBits(GPIOC, GPIO_Pin_11); 
00003c  2101              MOVS     r1,#1
00003e  02c9              LSLS     r1,r1,#11
000040  482f              LDR      r0,|L5.256|
000042  f7fffffe          BL       GPIO_ResetBits
;;;106                GPIO_ResetBits(GPIOA, GPIO_Pin_7);  
000046  2180              MOVS     r1,#0x80
000048  482e              LDR      r0,|L5.260|
00004a  f7fffffe          BL       GPIO_ResetBits
;;;107                GPIO_ResetBits(GPIOA, GPIO_Pin_8);  
00004e  21ff              MOVS     r1,#0xff
000050  3101              ADDS     r1,#1
000052  482c              LDR      r0,|L5.260|
000054  f7fffffe          BL       GPIO_ResetBits
;;;108                Task_state = 1;
000058  2001              MOVS     r0,#1
00005a  4928              LDR      r1,|L5.252|
00005c  7008              STRB     r0,[r1,#0]
;;;109                break;
00005e  e048              B        |L5.242|
;;;110                case 1:                             
;;;111                WDT->WDT_CON |= WDT_CON_CLRWDT; 
000060  4829              LDR      r0,|L5.264|
000062  6bc0              LDR      r0,[r0,#0x3c]
000064  2101              MOVS     r1,#1
000066  4308              ORRS     r0,r0,r1
000068  4927              LDR      r1,|L5.264|
00006a  63c8              STR      r0,[r1,#0x3c]
;;;112                
;;;113                
;;;114                if (TK_TouchKeyStatus & 0x80)
00006c  4827              LDR      r0,|L5.268|
00006e  7800              LDRB     r0,[r0,#0]  ; TK_TouchKeyStatus
000070  2180              MOVS     r1,#0x80
000072  4008              ANDS     r0,r0,r1
000074  2800              CMP      r0,#0
000076  d013              BEQ      |L5.160|
;;;115                { 
;;;116                    TK_TouchKeyStatus &= 0x7f;
000078  4824              LDR      r0,|L5.268|
00007a  7800              LDRB     r0,[r0,#0]  ; TK_TouchKeyStatus
00007c  0640              LSLS     r0,r0,#25
00007e  0e40              LSRS     r0,r0,#25
000080  4922              LDR      r1,|L5.268|
000082  7008              STRB     r0,[r1,#0]
;;;117                    
;;;118                    TK_exKeyValueFlag = TK_TouchKeyScan();
000084  f7fffffe          BL       TK_TouchKeyScan
000088  4921              LDR      r1,|L5.272|
00008a  6008              STR      r0,[r1,#0]  ; TK_exKeyValueFlag
;;;119                    DataProcessing(TK_exKeyValueFlag); 
00008c  4608              MOV      r0,r1
00008e  6800              LDR      r0,[r0,#0]  ; TK_exKeyValueFlag
000090  f7fffffe          BL       DataProcessing
;;;120                    
;;;121                    UpdateDisplay(exKeyValue);
000094  481f              LDR      r0,|L5.276|
000096  7800              LDRB     r0,[r0,#0]  ; exKeyValue
000098  f7fffffe          BL       UpdateDisplay
;;;122                    TK_Restart(); 
00009c  f7fffffe          BL       TK_Restart
                  |L5.160|
;;;123                }
;;;124                break;
0000a0  e027              B        |L5.242|
;;;125                case 2: 
;;;126                Delay_ms(1000);
0000a2  207d              MOVS     r0,#0x7d
0000a4  00c0              LSLS     r0,r0,#3
0000a6  f7fffffe          BL       Delay_ms
;;;127                GPIO_ResetBits(GPIOC, GPIO_Pin_5); 
0000aa  2120              MOVS     r1,#0x20
0000ac  4814              LDR      r0,|L5.256|
0000ae  f7fffffe          BL       GPIO_ResetBits
;;;128                Buzzer_Play(2);
0000b2  2002              MOVS     r0,#2
0000b4  f7fffffe          BL       Buzzer_Play
;;;129                
;;;130                Delay_ms(200);
0000b8  20c8              MOVS     r0,#0xc8
0000ba  f7fffffe          BL       Delay_ms
;;;131                GPIO_SetBits(GPIOC, GPIO_Pin_5);
0000be  2120              MOVS     r1,#0x20
0000c0  480f              LDR      r0,|L5.256|
0000c2  f7fffffe          BL       GPIO_SetBits
;;;132                break;
0000c6  e014              B        |L5.242|
;;;133                case 3: 
;;;134                
;;;135                
;;;136                
;;;137                
;;;138                
;;;139                
;;;140                
;;;141                
;;;142                
;;;143                break;
0000c8  e013              B        |L5.242|
;;;144                case 4: 
;;;145                ADC_value = ADC_GetConversionValue(ADC);
0000ca  4813              LDR      r0,|L5.280|
0000cc  f7fffffe          BL       ADC_GetConversionValue
0000d0  4912              LDR      r1,|L5.284|
0000d2  8008              STRH     r0,[r1,#0]
;;;146                Light = ADC_value / 16384 * 5.0f;
0000d4  4608              MOV      r0,r1
0000d6  8804              LDRH     r4,[r0,#0]  ; ADC_value
0000d8  17e1              ASRS     r1,r4,#31
0000da  0c89              LSRS     r1,r1,#18
0000dc  1909              ADDS     r1,r1,r4
0000de  1388              ASRS     r0,r1,#14
0000e0  f7fffffe          BL       __aeabi_i2f
0000e4  4605              MOV      r5,r0
0000e6  490e              LDR      r1,|L5.288|
0000e8  f7fffffe          BL       __aeabi_fmul
0000ec  490d              LDR      r1,|L5.292|
0000ee  6008              STR      r0,[r1,#0]  ; Light
;;;147                break;
0000f0  bf00              NOP      
                  |L5.242|
0000f2  bf00              NOP                            ;109
                  |L5.244|
0000f4  e790              B        |L5.24|
;;;148            }
;;;149            
;;;150            
;;;151            
;;;152            
;;;153            
;;;154        }
;;;155        
;;;156        
;;;157    }
;;;158    
                          ENDP
0000f6  0000              DCW      0x0000
                  |L5.248|
                          DCD      0x40020180
                  |L5.252|
                          DCD      Task_state
                  |L5.256|
                          DCD      0x40011200
                  |L5.260|
                          DCD      0x40011000
                  |L5.264|
                          DCD      0x40000300
                  |L5.268|
                          DCD      TK_TouchKeyStatus
                  |L5.272|
                          DCD      TK_exKeyValueFlag
                  |L5.276|
                          DCD      exKeyValue
                  |L5.280|
                          DCD      0x40022110
                  |L5.284|
                          DCD      ADC_value
                  |L5.288|
                          DCD      0x40a00000
                  |L5.292|
                          DCD      Light
                          AREA ||.data||, DATA, ALIGN=2
                  exKeyValue
000000  00                DCB      0x00
                  gTkIsValid
000001  00                DCB      0x00
                  Task_state
000002  0000              DCB      0x00,0x00
                  TK_exKeyValueFlag
                          DCD      0x00000000
                  ADC_value
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  Light
                          DCD      0x00000000
                  first_Press
000010  00                DCB      0x00
                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1
                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d304              BCC      |L40.24|
                  |L40.14|
00000e  5d63              LDRB     r3,[r4,r5]
000010  005b              LSLS     r3,r3,#1
000012  18e3              ADDS     r3,r4,r3
000014  bc30              POP      {r4,r5}
000016  4718              BX       r3
                  |L40.24|
000018  461d              MOV      r5,r3
00001a  e7f8              B        |L40.14|
                          ENDP
;*** Start embedded assembler ***
#line 1 "..\\User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_04ffa752____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___6_main_c_04ffa752____REV16| PROC
#line 464
 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_04ffa752____REVSH|
#line 478
|__asm___6_main_c_04ffa752____REVSH| PROC
#line 479
 revsh r0, r0
 bx lr
	ENDP
;*** End   embedded assembler ***
                  __ARM_use_no_argv EQU 0
