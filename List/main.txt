; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o..\output\main.o --asm_dir=..\List\ --list_dir=..\List\ --depend=..\output\main.d --cpu=Cortex-M0+ --apcs=interwork --diag_suppress=9931 -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -I..\Buzz\Inc -ID:\keil\ARM\PACK\Keil\SC32F1xxx_DFP\1.0.6\Device\SC32F10xx\FWLib\SC32_Lib\inc -D__UVISION_VERSION=534 -DSC32F10xx -DSC32f10xx --omf_browse=..\output\main.crf ..\User\main.c]
                          THUMB

                          AREA ||i.Delay_ms||, CODE, READONLY, ALIGN=1

                  Delay_ms PROC
;;;92     
;;;93     void Delay_ms(uint16_t xms)
000000  b570              PUSH     {r4-r6,lr}
;;;94     {
;;;95         int i;
;;;96         for (i = 0; i < xms; i++)
000002  2400              MOVS     r4,#0
;;;97         {
;;;98             Delay_us(1000);
000004  267d              MOVS     r6,#0x7d
000006  4605              MOV      r5,r0                 ;94
000008  00f6              LSLS     r6,r6,#3
00000a  e003              B        |L1.20|
                  |L1.12|
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       Delay_us
000012  1c64              ADDS     r4,r4,#1
                  |L1.20|
000014  42ac              CMP      r4,r5                 ;96
000016  dbf9              BLT      |L1.12|
;;;99         }
;;;100    }
000018  bd70              POP      {r4-r6,pc}
                          ENDP


                          AREA ||i.Delay_us||, CODE, READONLY, ALIGN=2

                  Delay_us PROC
;;;84     
;;;85     void Delay_us(uint16_t xus)
000000  b570              PUSH     {r4-r6,lr}
;;;86     {
;;;87         TIM_Cmd(TIM1,ENABLE); 
000002  4c07              LDR      r4,|L2.32|
000004  4605              MOV      r5,r0                 ;86
000006  2101              MOVS     r1,#1
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       TIM_Cmd
                  |L2.14|
;;;88         while(TIM1->TIM_CNT < xus);
00000e  6860              LDR      r0,[r4,#4]
000010  42a8              CMP      r0,r5
000012  d3fc              BCC      |L2.14|
;;;89         TIM1->TIM_CNT = 0;
000014  2100              MOVS     r1,#0
000016  4620              MOV      r0,r4
000018  6061              STR      r1,[r4,#4]
;;;90         TIM_Cmd(TIM1,DISABLE); 
00001a  f7fffffe          BL       TIM_Cmd
;;;91     }
00001e  bd70              POP      {r4-r6,pc}
;;;92     
                          ENDP

                  |L2.32|
                          DCD      0x40020140

                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;34       */
;;;35     int main(void)
000000  f7fffffe          BL       IcResourceInit
;;;36     {
;;;37         /*<Generated by EasyCodeCube begin>*/
;;;38         /*<UserCodeStart>*//*<SinOne-Tag><36>*/
;;;39         IcResourceInit();
;;;40         uint8_t Task_state = 2;
000004  2402              MOVS     r4,#2
;;;41         TIM_Cmd(TIM2, DISABLE);
000006  2100              MOVS     r1,#0
000008  480f              LDR      r0,|L3.72|
00000a  f7fffffe          BL       TIM_Cmd
;;;42         Buzzer_SetVolume(50);
00000e  2032              MOVS     r0,#0x32
000010  f7fffffe          BL       Buzzer_SetVolume
;;;43         /*<UserCodeEnd>*//*<SinOne-Tag><36>*/
;;;44         
;;;45         /*<UserCodeStart>*//*<SinOne-Tag><4>*/
;;;46         /*****MainLoop*****/
;;;47         while(1)
;;;48         {
;;;49             /*<UserCodeStart>*//*<SinOne-Tag><14>*/
;;;50             /***User program***/
;;;51             
;;;52             switch(Task_state)
;;;53             {
;;;54                 case 0:		//init
;;;55                 break;
;;;56                 case 1:		//main task
;;;57                 
;;;58                 break;
;;;59                 case 2:		//Buzz SET
;;;60                 Delay_ms(1000);
000014  267d              MOVS     r6,#0x7d
;;;61                 GPIO_ResetBits(GPIOC,GPIO_Pin_5);
000016  4d0d              LDR      r5,|L3.76|
000018  00f6              LSLS     r6,r6,#3              ;60
                  |L3.26|
00001a  0023              MOVS     r3,r4                 ;52
00001c  f7fffffe          BL       __ARM_common_switch8
000020  03030304          DCB      0x03,0x03,0x03,0x04
000024  0300              DCB      0x03,0x00
000026  e7f8              B        |L3.26|
000028  4630              MOV      r0,r6                 ;60
00002a  f7fffffe          BL       Delay_ms
00002e  2120              MOVS     r1,#0x20
000030  4628              MOV      r0,r5
000032  f7fffffe          BL       GPIO_ResetBits
;;;62                 
;;;63                 //Buzzer_Play(1);
;;;64                 //test_Buzz();
;;;65                 Delay_ms(200);
000036  20c8              MOVS     r0,#0xc8
000038  f7fffffe          BL       Delay_ms
;;;66                 GPIO_SetBits(GPIOC,GPIO_Pin_5);
00003c  2120              MOVS     r1,#0x20
00003e  4628              MOV      r0,r5
000040  f7fffffe          BL       GPIO_SetBits
;;;67                 break;
000044  e7e9              B        |L3.26|
;;;68                 case 3:		//RGB SET
;;;69                 break;
;;;70                 case 4:		//ADC get
;;;71                 break;
;;;72             }
;;;73             
;;;74             
;;;75             /*<UserCodeEnd>*//*<SinOne-Tag><14>*/
;;;76             /*<UserCodeStart>*//*<SinOne-Tag><77>*/
;;;77             /*<UserCodeEnd>*//*<SinOne-Tag><77>*/
;;;78             /*<Begin-Inserted by EasyCodeCube for Condition>*/
;;;79         }
;;;80         /*<UserCodeEnd>*//*<SinOne-Tag><4>*/
;;;81         /*<Generated by EasyCodeCube end>*/
;;;82     }
;;;83     
                          ENDP

000046  0000              DCW      0x0000
                  |L3.72|
                          DCD      0x40020180
                  |L3.76|
                          DCD      0x40011200

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d200              BCS      |L23.16|
00000e  461d              MOV      r5,r3
                  |L23.16|
000010  5d63              LDRB     r3,[r4,r5]
000012  005b              LSLS     r3,r3,#1
000014  18e3              ADDS     r3,r4,r3
000016  bc30              POP      {r4,r5}
000018  4718              BX       r3
                          ENDP


;*** Start embedded assembler ***

#line 1 "..\\User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___6_main_c_main____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 478
|__asm___6_main_c_main____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
