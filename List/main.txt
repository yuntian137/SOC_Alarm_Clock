; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: armcc [4d365d]
; commandline armcc [--c99 --list --split_sections --debug -c --asm --interleave -o..\Output\main.o --asm_dir=..\List --list_dir=..\List --cpu=Cortex-M0+ --apcs=interwork -I..\FWLib\SC32F1XXX_Lib\inc -I..\User\HeadFiles -I..\User -I..\Drivers -I..\Apps -I..\CMSIS -I..\Buzz\Inc -DSC32f10xx -D__UVISION_VERSION=536 ..\User\main.c]
                          THUMB
                          AREA ||i.Delay_ms||, CODE, READONLY, ALIGN=1
                  Delay_ms PROC
;;;89     
;;;90     void Delay_ms(uint16_t xms)
000000  b570              PUSH     {r4-r6,lr}
;;;91     {
;;;92         int i;
;;;93         for (i = 0; i < xms; i++)
000002  2400              MOVS     r4,#0
;;;94         {
;;;95             Delay_us(1000);
000004  267d              MOVS     r6,#0x7d
000006  4605              MOV      r5,r0                 ;91
000008  00f6              LSLS     r6,r6,#3
00000a  e003              B        |L1.20|
                  |L1.12|
00000c  4630              MOV      r0,r6
00000e  f7fffffe          BL       Delay_us
000012  1c64              ADDS     r4,r4,#1
                  |L1.20|
000014  42ac              CMP      r4,r5                 ;93
000016  dbf9              BLT      |L1.12|
;;;96         }
;;;97     }
000018  bd70              POP      {r4-r6,pc}
                          ENDP
                          AREA ||i.Delay_us||, CODE, READONLY, ALIGN=2
                  Delay_us PROC
;;;81     
;;;82     void Delay_us(uint16_t xus)
000000  b570              PUSH     {r4-r6,lr}
;;;83     {
;;;84         TIM_Cmd(TIM1,ENABLE); 
000002  4c07              LDR      r4,|L2.32|
000004  4605              MOV      r5,r0                 ;83
000006  2101              MOVS     r1,#1
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       TIM_Cmd
                  |L2.14|
;;;85         while(TIM1->TIM_CNT < xus);
00000e  6860              LDR      r0,[r4,#4]
000010  42a8              CMP      r0,r5
000012  d3fc              BCC      |L2.14|
;;;86         TIM1->TIM_CNT = 0;
000014  2100              MOVS     r1,#0
000016  4620              MOV      r0,r4
000018  6061              STR      r1,[r4,#4]
;;;87         TIM_Cmd(TIM1,DISABLE); 
00001a  f7fffffe          BL       TIM_Cmd
;;;88     }
00001e  bd70              POP      {r4-r6,pc}
;;;89     
                          ENDP
                  |L2.32|
                          DCD      0x40020140
                          AREA ||i.main||, CODE, READONLY, ALIGN=2
                  main PROC
;;;34       */
;;;35     int main(void)
000000  f7fffffe          BL       IcResourceInit
;;;36     {
;;;37         
;;;38         /*<SinOne-Tag><36>*/
;;;39         IcResourceInit();
;;;40         uint8_t Task_state = 2;
;;;41         /*<SinOne-Tag><36>*/
;;;42         
;;;43         /*<SinOne-Tag><4>*/
;;;44         
;;;45         while(1)
;;;46         {
;;;47             /*<SinOne-Tag><14>*/
;;;48             
;;;49             
;;;50             switch(Task_state)
;;;51             {
;;;52                 case 0:
;;;53                 break;
;;;54                 case 1:
;;;55                 
;;;56                 break;
;;;57                 case 2:
;;;58                 Delay_ms(1000);
000004  267d              MOVS     r6,#0x7d
000006  2402              MOVS     r4,#2                 ;40
000008  00f6              LSLS     r6,r6,#3
;;;59                 GPIO_ResetBits(GPIOC,GPIO_Pin_5);
00000a  4d0d              LDR      r5,|L3.64|
;;;60                 Buzzer_Play();
;;;61                 
;;;62                 Delay_ms(2000);
00000c  0077              LSLS     r7,r6,#1
                  |L3.14|
00000e  0023              MOVS     r3,r4                 ;50
000010  f7fffffe          BL       __ARM_common_switch8
000014  03030304          DCB      0x03,0x03,0x03,0x04
000018  0300              DCB      0x03,0x00
00001a  e7f8              B        |L3.14|
00001c  4630              MOV      r0,r6                 ;58
00001e  f7fffffe          BL       Delay_ms
000022  2120              MOVS     r1,#0x20              ;59
000024  4628              MOV      r0,r5                 ;59
000026  f7fffffe          BL       GPIO_ResetBits
00002a  f7fffffe          BL       Buzzer_Play
00002e  4638              MOV      r0,r7
000030  f7fffffe          BL       Delay_ms
;;;63                 GPIO_SetBits(GPIOC,GPIO_Pin_5);
000034  2120              MOVS     r1,#0x20
000036  4628              MOV      r0,r5
000038  f7fffffe          BL       GPIO_SetBits
;;;64                 break;
00003c  e7e7              B        |L3.14|
;;;65                 case 3:
;;;66                 break;
;;;67                 case 4:
;;;68                 break;
;;;69             }
;;;70             
;;;71             
;;;72             /*<SinOne-Tag><14>*/
;;;73             /*<SinOne-Tag><77>*/
;;;74             /*<SinOne-Tag><77>*/
;;;75             
;;;76         }
;;;77         /*<SinOne-Tag><4>*/
;;;78         
;;;79     }
;;;80     
                          ENDP
00003e  0000              DCW      0x0000
                  |L3.64|
                          DCD      0x40011200
                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1
                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d200              BCS      |L23.16|
00000e  461d              MOV      r5,r3
                  |L23.16|
000010  5d63              LDRB     r3,[r4,r5]
000012  005b              LSLS     r3,r3,#1
000014  18e3              ADDS     r3,r4,r3
000016  bc30              POP      {r4,r5}
000018  4718              BX       r3
                          ENDP
;*** Start embedded assembler ***
#line 1 "..\\User\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REV16|
#line 463 "..\\CMSIS\\cmsis_armcc.h"
|__asm___6_main_c_main____REV16| PROC
#line 464
 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_main____REVSH|
#line 478
|__asm___6_main_c_main____REVSH| PROC
#line 479
 revsh r0, r0
 bx lr
	ENDP
;*** End   embedded assembler ***
                  __ARM_use_no_argv EQU 0
