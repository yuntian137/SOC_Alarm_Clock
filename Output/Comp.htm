<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\Output\Comp.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\Output\Comp.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Tue Dec 03 11:59:04 2024
<BR><P>
<H3>Maximum Stack Usage =        312 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; TK_TouchKeyScan &rArr; TK_SensorKeyFlag &rArr; TKSlideModuleSensorRenovate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[22]">ADC_IRQHandler</a> from sc_it.o(i.ADC_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[f]">BTM_IRQHandler</a> from sc_it.o(i.BTM_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_sc32f10xx.o(.text) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[23]">CMP_IRQHandler</a> from sc_it.o(i.CMP_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[14]">DMA0_IRQHandler</a> from sc_it.o(i.DMA0_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[15]">DMA1_IRQHandler</a> from sc_it.o(i.DMA1_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[16]">DMA2_IRQHandler</a> from sc_it.o(i.DMA2_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[17]">DMA3_IRQHandler</a> from sc_it.o(i.DMA3_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_sc32f10xx.o(.text) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_sc32f10xx.o(.text) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[a]">INT0_IRQHandler</a> from sc_it.o(i.INT0_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[d]">INT12_15_IRQHandler</a> from sc_it.o(i.INT12_15_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[b]">INT1_7_IRQHandler</a> from sc_it.o(i.INT1_7_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[c]">INT8_11_IRQHandler</a> from sc_it.o(i.INT8_11_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[1f]">LEDPWM_IRQHandler</a> from sc_it.o(i.LEDPWM_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_sc32f10xx.o(.text) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_sc32f10xx.o(.text) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[1e]">PWM0_IRQHandler</a> from sc_it.o(i.PWM0_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_sc32f10xx.o(.text) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[e]">RCC_IRQHandler</a> from sc_it.o(i.RCC_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_sc32f10xx.o(.text) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[12]">SPI0_IRQHandler</a> from sc_it.o(i.SPI0_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[13]">SPI1_IRQHandler</a> from sc_it.o(i.SPI1_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_sc32f10xx.o(.text) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[9]">SysTick_IRQHandler</a> from sc_it.o(i.SysTick_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[26]">SystemInit</a> from system_sc32f1xxx.o(i.SystemInit) referenced from startup_sc32f10xx.o(.text)
 <LI><a href="#[18]">TIMER0_IRQHandler</a> from sc_it.o(i.TIMER0_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[19]">TIMER1_IRQHandler</a> from sc_it.o(i.TIMER1_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[1a]">TIMER2_IRQHandler</a> from sc_it.o(i.TIMER2_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[1b]">TIMER3_IRQHandler</a> from sc_it.o(i.TIMER3_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[1c]">TIMER4_5_IRQHandler</a> from sc_it.o(i.TIMER4_5_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[1d]">TIMER6_7_IRQHandler</a> from sc_it.o(i.TIMER6_7_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[24]">TK_IRQHandler</a> from tkdriver.o(i.TK_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[20]">TWI0_IRQHandler</a> from sc_it.o(i.TWI0_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[21]">TWI1_IRQHandler</a> from sc_it.o(i.TWI1_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[10]">UART0_2_IRQHandler</a> from sc_it.o(i.UART0_2_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[11]">UART1_3_IRQHandler</a> from sc_it.o(i.UART1_3_IRQHandler) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_sc32f10xx.o(.text) referenced from startup_sc32f10xx.o(RESET)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_sc32f10xx.o(.text)
 <LI><a href="#[25]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(.text)
</UL>
<P><STRONG><a name="[b0]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[28]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[44]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b1]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b2]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b3]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[2a]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[b4]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[b5]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_sc32f10xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32f10xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32f10xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32f10xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32f10xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32f10xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32f10xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32f10xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_sc32f10xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[b6]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[2c]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SingleChannel_ICHAAdjust
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorRenovate
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_BaseLineUpdataSW
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetTKYzThreshold
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetTKYzCnt
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[84]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_dadd</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[3a]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[3b]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[3c]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[89]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[87]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[b9]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[43]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[ba]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[36]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[bb]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[2f]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[38]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>

<P><STRONG><a name="[37]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[29]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[bd]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>ADC_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sc32f1xxx_adc.o(i.ADC_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>ADC_Cmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sc32f1xxx_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_ADC_Init
</UL>

<P><STRONG><a name="[5a]"></a>ADC_DMACmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sc32f1xxx_adc.o(i.ADC_DMACmd))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_ADC_Init
</UL>

<P><STRONG><a name="[22]"></a>ADC_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sc_it.o(i.ADC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>ADC_ITConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sc32f1xxx_adc.o(i.ADC_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_ADC_Init
</UL>

<P><STRONG><a name="[57]"></a>ADC_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sc32f1xxx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_ADC_Init
</UL>

<P><STRONG><a name="[58]"></a>ADC_SetChannel</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sc32f1xxx_adc.o(i.ADC_SetChannel))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_ADC_Init
</UL>

<P><STRONG><a name="[f]"></a>BTM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.BTM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>Buzzer_SetVolume</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, buzzer.o(i.Buzzer_SetVolume))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Buzzer_SetVolume
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMSetDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[23]"></a>CMP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.CMP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.DMA0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.DMA1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.DMA2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.DMA3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[ad]"></a>DataProcessing</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, main.o(i.DataProcessing))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>Delay_ms</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, main.o(i.Delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Delay_ms &rArr; Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[49]"></a>Delay_us</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, main.o(i.Delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
</UL>

<P><STRONG><a name="[5f]"></a>GPIO_Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, sc32f1xxx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TWI0_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_GPIO_Init
</UL>

<P><STRONG><a name="[ac]"></a>GPIO_ResetBits</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sc32f1xxx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>GPIO_SetBits</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sc32f1xxx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>GPIO_TogglePins</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, sc32f1xxx_gpio.o(i.GPIO_TogglePins))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIO_TogglePins
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDisplay
</UL>

<P><STRONG><a name="[a]"></a>INT0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.INT0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>INT12_15_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.INT12_15_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>INT1_7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.INT1_7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>INT8_11_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.INT8_11_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>IcResourceInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, compctrldefine.o(i.IcResourceInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = IcResourceInit &rArr; SC_Init &rArr; SC_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1f]"></a>LEDPWM_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.LEDPWM_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>PWM0_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sc_it.o(i.PWM0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM0_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>PWM_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sc32f1xxx_pwm.o(i.PWM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM0_IRQHandler
</UL>

<P><STRONG><a name="[6d]"></a>PWM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sc32f1xxx_pwm.o(i.PWM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_PWM0_Init
</UL>

<P><STRONG><a name="[6b]"></a>PWM_FDCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sc32f1xxx_pwm.o(i.PWM_FDCmd))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_PWM0_Init
</UL>

<P><STRONG><a name="[6a]"></a>PWM_FDInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sc32f1xxx_pwm.o(i.PWM_FDInit))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_PWM0_Init
</UL>

<P><STRONG><a name="[6c]"></a>PWM_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sc32f1xxx_pwm.o(i.PWM_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_PWM0_Init
</UL>

<P><STRONG><a name="[69]"></a>PWM_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sc32f1xxx_pwm.o(i.PWM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PWM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_PWM0_Init
</UL>

<P><STRONG><a name="[68]"></a>PWM_SetDuty</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, sc32f1xxx_pwm.o(i.PWM_SetDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PWM_SetDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_PWM0_Init
</UL>

<P><STRONG><a name="[70]"></a>RCC_APB0Cmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sc32f1xxx_rcc.o(i.RCC_APB0Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
</UL>

<P><STRONG><a name="[6f]"></a>RCC_APB0Config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sc32f1xxx_rcc.o(i.RCC_APB0Config))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
</UL>

<P><STRONG><a name="[67]"></a>RCC_APB0PeriphClockCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sc32f1xxx_rcc.o(i.RCC_APB0PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TWI0_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM2_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM1_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_PWM0_Init
</UL>

<P><STRONG><a name="[72]"></a>RCC_APB2Cmd</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sc32f1xxx_rcc.o(i.RCC_APB2Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
</UL>

<P><STRONG><a name="[71]"></a>RCC_APB2Config</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sc32f1xxx_rcc.o(i.RCC_APB2Config))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
</UL>

<P><STRONG><a name="[6e]"></a>RCC_HCLKConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sc32f1xxx_rcc.o(i.RCC_HCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
</UL>

<P><STRONG><a name="[4e]"></a>RCC_HIRCCmd</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, sc32f1xxx_rcc.o(i.RCC_HIRCCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RCC_HIRCCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
</UL>

<P><STRONG><a name="[50]"></a>RCC_HXTCmd</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, sc32f1xxx_rcc.o(i.RCC_HXTCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RCC_HXTCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
</UL>

<P><STRONG><a name="[e]"></a>RCC_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.RCC_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>RCC_ITConfig</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, sc32f1xxx_rcc.o(i.RCC_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RCC_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
</UL>

<P><STRONG><a name="[52]"></a>RCC_LIRCCmd</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, sc32f1xxx_rcc.o(i.RCC_LIRCCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RCC_LIRCCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
</UL>

<P><STRONG><a name="[53]"></a>RCC_LXTCmd</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, sc32f1xxx_rcc.o(i.RCC_LXTCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RCC_LXTCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
</UL>

<P><STRONG><a name="[54]"></a>RCC_SYSCLKConfig</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, sc32f1xxx_rcc.o(i.RCC_SYSCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_SYSCLKConfig &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Unlock
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
</UL>

<P><STRONG><a name="[55]"></a>RCC_SystickCLKConfig</STRONG> (Thumb, 62 bytes, Stack size 4 bytes, sc32f1xxx_rcc.o(i.RCC_SystickCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = RCC_SystickCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_SYSTICK_Init
</UL>

<P><STRONG><a name="[74]"></a>RCC_SystickCmd</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sc32f1xxx_rcc.o(i.RCC_SystickCmd))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_SYSTICK_Init
</UL>

<P><STRONG><a name="[73]"></a>RCC_SystickSetCounter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sc32f1xxx_rcc.o(i.RCC_SystickSetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_SYSTICK_Init
</UL>

<P><STRONG><a name="[4f]"></a>RCC_Unlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sc32f1xxx_rcc.o(i.RCC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SystickCLKConfig
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LXTCmd
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LIRCCmd
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ITConfig
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HXTCmd
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HIRCCmd
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_SYSTICK_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_PWM0_Init
</UL>

<P><STRONG><a name="[56]"></a>SC_ADC_Init</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, sc_init.o(i.SC_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SC_ADC_Init &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SetChannel
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ITConfig
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_Init
</UL>

<P><STRONG><a name="[5e]"></a>SC_GPIO_Init</STRONG> (Thumb, 324 bytes, Stack size 120 bytes, sc_init.o(i.SC_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SC_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_Init
</UL>

<P><STRONG><a name="[4c]"></a>SC_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sc_init.o(i.SC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SC_Init &rArr; SC_GPIO_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_ADC_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TWI0_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM2_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM1_Init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_SYSTICK_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_RCC_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_PWM0_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_OPTION_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IcResourceInit
</UL>

<P><STRONG><a name="[60]"></a>SC_OPTION_Init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, sc_init.o(i.SC_OPTION_Init))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_Init
</UL>

<P><STRONG><a name="[66]"></a>SC_PWM0_Init</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, sc_init.o(i.SC_PWM0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SC_PWM0_Init &rArr; PWM_SetDuty
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Unlock
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0PeriphClockCmd
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetDuty
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_ITConfig
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_FDInit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_FDCmd
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_Init
</UL>

<P><STRONG><a name="[61]"></a>SC_RCC_Init</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, sc_init.o(i.SC_RCC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SC_RCC_Init &rArr; RCC_SYSCLKConfig &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Unlock
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SYSCLKConfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LXTCmd
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LIRCCmd
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_ITConfig
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HXTCmd
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HIRCCmd
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_HCLKConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2Config
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2Cmd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0Config
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_Init
</UL>

<P><STRONG><a name="[62]"></a>SC_SYSTICK_Init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, sc_init.o(i.SC_SYSTICK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SC_SYSTICK_Init &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_Unlock
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SystickSetCounter
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SystickCmd
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_SystickCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_Init
</UL>

<P><STRONG><a name="[64]"></a>SC_TIM1_Init</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, sc_init.o(i.SC_TIM1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SC_TIM1_Init &rArr; TIM_TIMBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIMBaseInit
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMSetDuty
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICCmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMACmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_Init
</UL>

<P><STRONG><a name="[65]"></a>SC_TIM2_Init</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, sc_init.o(i.SC_TIM2_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SC_TIM2_Init &rArr; TIM_TIMBaseInit
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TIMBaseInit
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PinRemapConfig
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMSetDuty
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_PWMInit
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICInit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ICCmd
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_DMACmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_Init
</UL>

<P><STRONG><a name="[63]"></a>SC_TWI0_Init</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, sc_init.o(i.SC_TWI0_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SC_TWI0_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWI_PinRemapConfig
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWI_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWI_ITConfig
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWI_DMACmd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TWI_Cmd
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB0PeriphClockCmd
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_Init
</UL>

<P><STRONG><a name="[12]"></a>SPI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.SPI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SPI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.SPI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.SysTick_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>SystemInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_sc32f1xxx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(.text)
</UL>
<P><STRONG><a name="[18]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.TIMER0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sc_it.o(i.TIMER1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.TIMER2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.TIMER3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TIMER4_5_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.TIMER4_5_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TIMER6_7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.TIMER6_7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>TIM_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sc32f1xxx_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER1_IRQHandler
</UL>

<P><STRONG><a name="[4a]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sc32f1xxx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_us
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM2_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM1_Init
</UL>

<P><STRONG><a name="[7a]"></a>TIM_DMACmd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sc32f1xxx_tim.o(i.TIM_DMACmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM2_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM1_Init
</UL>

<P><STRONG><a name="[77]"></a>TIM_ICCmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sc32f1xxx_tim.o(i.TIM_ICCmd))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM2_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM1_Init
</UL>

<P><STRONG><a name="[76]"></a>TIM_ICInit</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, sc32f1xxx_tim.o(i.TIM_ICInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ICInit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM2_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM1_Init
</UL>

<P><STRONG><a name="[79]"></a>TIM_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sc32f1xxx_tim.o(i.TIM_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM2_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM1_Init
</UL>

<P><STRONG><a name="[78]"></a>TIM_PWMInit</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, sc32f1xxx_tim.o(i.TIM_PWMInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_PWMInit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM2_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM1_Init
</UL>

<P><STRONG><a name="[47]"></a>TIM_PWMSetDuty</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sc32f1xxx_tim.o(i.TIM_PWMSetDuty))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_SetVolume
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM2_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM1_Init
</UL>

<P><STRONG><a name="[7b]"></a>TIM_PinRemapConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sc32f1xxx_tim.o(i.TIM_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM2_Init
</UL>

<P><STRONG><a name="[75]"></a>TIM_TIMBaseInit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sc32f1xxx_tim.o(i.TIM_TIMBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM_TIMBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM2_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TIM1_Init
</UL>

<P><STRONG><a name="[a0]"></a>TKSlideModuleCHIs</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, sc32f10xx_tk_functionresource.o(i.TKSlideModuleCHIs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TKSlideModuleCHIs
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorKeyFlag
</UL>

<P><STRONG><a name="[82]"></a>TKSlideModuleSensorRenovate</STRONG> (Thumb, 832 bytes, Stack size 144 bytes, sc32f10xx_tk_functionresource.o(i.TKSlideModuleSensorRenovate))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = TKSlideModuleSensorRenovate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_BaseLineUpdataSW
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetCurrFingerValue
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorKeyFlag
</UL>

<P><STRONG><a name="[8a]"></a>TK_BaseLineUpdataSW</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, sc32f10xx_tk_functionresource.o(i.TK_BaseLineUpdataSW))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TK_BaseLineUpdataSW &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetCurrFingerValue
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetBaselineUpdateThreshold
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
</UL>

<P><STRONG><a name="[8c]"></a>TK_FilterAvergeDeal</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, sc32f10xx_tk_functionresource.o(i.TK_FilterAvergeDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TK_FilterAvergeDeal &rArr; TK_SingleChannel_ICHAAdjust &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SingleChannel_ICHAAdjust
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterIIRInit
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterDataDeal
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterCommCode
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetInitAutoUpdateTime
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
</UL>

<P><STRONG><a name="[8d]"></a>TK_FilterCommCode</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, sc32f10xx_tk_functionresource.o(i.TK_FilterCommCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = TK_FilterCommCode
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Usdelay
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterAvergeDeal
</UL>

<P><STRONG><a name="[91]"></a>TK_FilterDataDeal</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, sc32f10xx_tk_functionresource.o(i.TK_FilterDataDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TK_FilterDataDeal
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetCurrFingerValue
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterAvergeDeal
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorKeyFlag
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultipleDeal
</UL>

<P><STRONG><a name="[8f]"></a>TK_FilterIIRInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sc32f10xx_tk_functionresource.o(i.TK_FilterIIRInit))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterAvergeDeal
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultipleDeal
</UL>

<P><STRONG><a name="[95]"></a>TK_GetBaseLineAdjustValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tkdriver.o(i.TK_GetBaseLineAdjustValue))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SingleChannel_ICHAAdjust
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetCfgMsg
</UL>

<P><STRONG><a name="[8b]"></a>TK_GetBaselineUpdateThreshold</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tkdriver.o(i.TK_GetBaselineUpdateThreshold))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorRenovate
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_BaseLineUpdataSW
</UL>

<P><STRONG><a name="[93]"></a>TK_GetCfgMsg</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, tkdriver.o(i.TK_GetCfgMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TK_GetCfgMsg &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetBaseLineAdjustValue
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKey_Service
</UL>

<P><STRONG><a name="[a2]"></a>TK_GetCsFunction</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, tkdriver.o(i.TK_GetCsFunction))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorRenovate
</UL>

<P><STRONG><a name="[83]"></a>TK_GetCurrFingerValue</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tkdriver.o(i.TK_GetCurrFingerValue))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorRenovate
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterDataDeal
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_BaseLineUpdataSW
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetTKYzThreshold
</UL>

<P><STRONG><a name="[90]"></a>TK_GetInitAutoUpdateTime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tkdriver.o(i.TK_GetInitAutoUpdateTime))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterAvergeDeal
</UL>

<P><STRONG><a name="[a7]"></a>TK_GetIsNeedUpdateBaseline</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sc32f10xx_tk_functionresource.o(i.TK_GetIsNeedUpdateBaseline))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKeyScan
</UL>

<P><STRONG><a name="[9c]"></a>TK_GetScanTimeValue</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, tkdriver.o(i.TK_GetScanTimeValue))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SingleChannel_ICHAAdjust
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKey_Service
</UL>

<P><STRONG><a name="[96]"></a>TK_GetTKYzCnt</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, tkdriver.o(i.TK_GetTKYzCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TK_GetTKYzCnt &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorRenovate
</UL>

<P><STRONG><a name="[97]"></a>TK_GetTKYzThreshold</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, tkdriver.o(i.TK_GetTKYzThreshold))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TK_GetTKYzThreshold &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetCurrFingerValue
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorRenovate
</UL>

<P><STRONG><a name="[a4]"></a>TK_GetUpConfirmCnt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tkdriver.o(i.TK_GetUpConfirmCnt))
<BR><BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorRenovate
</UL>

<P><STRONG><a name="[24]"></a>TK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tkdriver.o(i.TK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TK_IRQHandler &rArr; TK_TouchKey_Service &rArr; TK_GetCfgMsg &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKey_Service
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>TK_Init</STRONG> (Thumb, 344 bytes, Stack size 8 bytes, sc32f10xx_tk_functionresource.o(i.TK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TK_Init &rArr; TK_FilterAvergeDeal &rArr; TK_SingleChannel_ICHAAdjust &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2Cmd
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_InitializeSensorFlag
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_InitializeBaselines
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterAvergeDeal
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKeyCFGInit
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetScanTimeValue
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetCfgMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9d]"></a>TK_InitializeBaselines</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sc32f10xx_tk_functionresource.o(i.TK_InitializeBaselines))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultipleDeal
</UL>

<P><STRONG><a name="[9a]"></a>TK_InitializeSensorFlag</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, sc32f10xx_tk_functionresource.o(i.TK_InitializeSensorFlag))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultipleDeal
</UL>

<P><STRONG><a name="[a3]"></a>TK_IsDoubleKeyOrSlideKey</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tkdriver.o(i.TK_IsDoubleKeyOrSlideKey))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKeyScan
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorRenovate
</UL>

<P><STRONG><a name="[9e]"></a>TK_MultipleDeal</STRONG> (Thumb, 306 bytes, Stack size 16 bytes, sc32f10xx_tk_functionresource.o(i.TK_MultipleDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TK_MultipleDeal &rArr; TK_FilterDataDeal
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_InitializeSensorFlag
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_InitializeBaselines
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterIIRInit
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterDataDeal
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKeyScan
</UL>

<P><STRONG><a name="[ae]"></a>TK_Restart</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sc32f10xx_tk_functionresource.o(i.TK_Restart))
<BR><BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>TK_SensorKeyFlag</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, sc32f10xx_tk_functionresource.o(i.TK_SensorKeyFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = TK_SensorKeyFlag &rArr; TKSlideModuleSensorRenovate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorRenovate
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterDataDeal
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleSensorRenovate
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TKSlideModuleCHIs
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKeyScan
</UL>

<P><STRONG><a name="[a1]"></a>TK_SensorRenovate</STRONG> (Thumb, 982 bytes, Stack size 32 bytes, sc32f10xx_tk_functionresource.o(i.TK_SensorRenovate))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = TK_SensorRenovate &rArr; TK_SingleChannel_ICHAAdjust &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SingleChannel_ICHAAdjust
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_IsDoubleKeyOrSlideKey
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetUpConfirmCnt
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetTKYzThreshold
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetTKYzCnt
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetCurrFingerValue
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetCsFunction
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetBaselineUpdateThreshold
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorKeyFlag
</UL>

<P><STRONG><a name="[a8]"></a>TK_SetNeedUpdateBaseline</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sc32f10xx_tk_functionresource.o(i.TK_SetNeedUpdateBaseline))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKeyScan
</UL>

<P><STRONG><a name="[a9]"></a>TK_SetOneKeyPushResetTime</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tkdriver.o(i.TK_SetOneKeyPushResetTime))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKeyScan
</UL>

<P><STRONG><a name="[8e]"></a>TK_SingleChannel_ICHAAdjust</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, sc32f10xx_tk_functionresource.o(i.TK_SingleChannel_ICHAAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TK_SingleChannel_ICHAAdjust &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetScanTimeValue
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetBaseLineAdjustValue
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorRenovate
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterAvergeDeal
</UL>

<P><STRONG><a name="[a5]"></a>TK_SingleCurrentSensorChoose</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, tkdriver.o(i.TK_SingleCurrentSensorChoose))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TK_SingleCurrentSensorChoose
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKeyCFGInit
</UL>

<P><STRONG><a name="[9b]"></a>TK_TouchKeyCFGInit</STRONG> (Thumb, 96 bytes, Stack size 12 bytes, tkdriver.o(i.TK_TouchKeyCFGInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TK_TouchKeyCFGInit &rArr; TK_SingleCurrentSensorChoose
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SingleCurrentSensorChoose
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
</UL>

<P><STRONG><a name="[a6]"></a>TK_TouchKeyScan</STRONG> (Thumb, 370 bytes, Stack size 24 bytes, tkdriver.o(i.TK_TouchKeyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = TK_TouchKeyScan &rArr; TK_SensorKeyFlag &rArr; TKSlideModuleSensorRenovate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetNeedUpdateBaseline
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SensorKeyFlag
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_MultipleDeal
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetIsNeedUpdateBaseline
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_SetOneKeyPushResetTime
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_IsDoubleKeyOrSlideKey
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>TK_TouchKey_Service</STRONG> (Thumb, 300 bytes, Stack size 8 bytes, sc32f10xx_tk_functionresource.o(i.TK_TouchKey_Service))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TK_TouchKey_Service &rArr; TK_GetCfgMsg &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetScanTimeValue
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetCfgMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_IRQHandler
</UL>

<P><STRONG><a name="[20]"></a>TWI0_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.TWI0_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TWI1_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.TWI1_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>TWI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sc32f1xxx_twi.o(i.TWI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TWI0_Init
</UL>

<P><STRONG><a name="[7f]"></a>TWI_DMACmd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sc32f1xxx_twi.o(i.TWI_DMACmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TWI_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TWI0_Init
</UL>

<P><STRONG><a name="[7e]"></a>TWI_ITConfig</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, sc32f1xxx_twi.o(i.TWI_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TWI_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TWI0_Init
</UL>

<P><STRONG><a name="[7c]"></a>TWI_Init</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, sc32f1xxx_twi.o(i.TWI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TWI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TWI0_Init
</UL>

<P><STRONG><a name="[7d]"></a>TWI_PinRemapConfig</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, sc32f1xxx_twi.o(i.TWI_PinRemapConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TWI_PinRemapConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TWI0_Init
</UL>

<P><STRONG><a name="[10]"></a>UART0_2_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.UART0_2_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART1_3_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sc_it.o(i.UART1_3_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_sc32f10xx.o(RESET)
</UL>
<P><STRONG><a name="[aa]"></a>UpdateDisplay</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, main.o(i.UpdateDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UpdateDisplay &rArr; GPIO_TogglePins
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_TogglePins
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>Usdelay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sc32f10xx_tk_functionresource.o(i.Usdelay))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_FilterCommCode
</UL>

<P><STRONG><a name="[42]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[94]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_GetCfgMsg
</UL>

<P><STRONG><a name="[be]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[bf]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[c0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[25]"></a>main</STRONG> (Thumb, 202 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = main &rArr; TK_TouchKeyScan &rArr; TK_SensorKeyFlag &rArr; TKSlideModuleSensorRenovate &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_TouchKeyScan
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Restart
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TK_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IcResourceInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_SetVolume
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDisplay
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay_ms
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataProcessing
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[5c]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sc_init.o(i.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_ADC_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TWI0_Init
</UL>

<P><STRONG><a name="[5b]"></a>__NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, sc_init.o(i.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_ADC_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_TWI0_Init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC_SYSTICK_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[2b]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
